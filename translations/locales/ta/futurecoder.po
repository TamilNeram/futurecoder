msgid ""
msgstr ""
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: POEditor.com\n"
"Project-Id-Version: futurecoder\n"
"Language: ta\n"

#. https://futurecoder.io/course/#IntroducingTheShell
#: 
msgid "pages.IntroducingTheShell.steps.first_expression.text"
msgstr "வலதுபுறத்தில் *ஓடு* உள்ளது. இது பைதான் (Python) குறியீட்டின் சிறிய துண்டுகளை இயக்குவதற்கான இடமாகும். சில குறியீட்டை தட்டச்சு செய்து, Enter ஐ அழுத்தவும், அது இயங்கும்! இப்போது முயற்சிக்கவும்: \n"
"\n"
"1. ஓடு (கருப்பு பகுதி) மீது எங்கு வேண்டுமானாலும் சொடுக்கவும். \n"
"2. `__program__` என தட்டச்சு செய்க \n"
"3. உங்கள் விசைப்பலகையில் Enter விசையை அழுத்தவும்."

#. https://futurecoder.io/course/#IntroducingTheShell
#: 
msgid "pages.IntroducingTheShell.steps.more_calculation.text"
msgstr "நன்று! பைதான் `1+2` ஐ மதிப்பிட்டு `3` முடிவைப் பெற்றது, எனவே ஓடு அதைக் காட்டுகிறது. \n"
"\n"
"பைத்தானைக் கற்றுக்கொள்வதற்கு ஓடு உங்கள் மிக முக்கியமான கருவியாக இருக்கலாம், மேலும் நீங்கள் அதில் நிறைய நேரத்தைச் சோதித்து ஆராய்வதில் செலவிட வேண்டும். ஆர்வமாக இரு! தொடர்ந்து உங்களை நீங்களே கேட்டுக்கொள்ளுங்கள் \"நான் அதை இயக்கினால் என்ன நடக்கும்?\" பின்னர் உடனே அதை இயக்குவதன் மூலம் அந்த கேள்விக்கு பதிலளிக்கவும். எதையாவது முயற்சி செய்ய பயப்பட வேண்டாம் - நீங்கள் ஏதாவது தவறு செய்தால், மோசமான எதுவும் நடக்காது. \n"
"\n"
"இப்போது இன்னும் சில கணக்கீடுகளைச் செய்ய முயற்சிக்கவும். நீங்கள் `*` உடன் எண்களைப் பெருக்கலாம், `/` உடன் வகுக்கலாம் மற்றும் `-` உடன் கழிக்கலாம். நீங்கள் அடைப்புக்குறிகளையும் பயன்படுத்தலாம், அதாவது.. `(` மற்றும் `)`."

#. https://futurecoder.io/course/#IntroducingTheShell
#: 
msgid "pages.IntroducingTheShell.steps.final_text.text"
msgstr "சிறப்பானது! பரிசோதனை செய்து கொண்டே இருங்கள். நீங்கள் தயாரானதும், தொடர 'அடுத்து' என்பதைக் சொடுக்கவும்."

#. https://futurecoder.io/course/#NavigatingShellHistory
#: 
msgid "pages.NavigatingShellHistory.steps.final_text.text"
msgstr "இதோ ஒரு உதவிக்குறிப்பு: அடிக்கடி நீங்கள் முன்பு உள்ளிடப்பட்ட சிறிய குறியீட்டையோ அல்லது சிறிது மாற்றியமைக்கப்பட்ட பதிப்பையோ மீண்டும் இயக்க விரும்புவீர்கள். நீங்கள் நகலெடுத்து ஒட்டலாம், ஆனால் அது கடினமானது மற்றும் பரிசோதனைக்கு வழி வகுக்கும். உங்கள் விசைப்பலகையில் மேல் அம்புக்குறியை அழுத்துவது ஒரு சிறந்த முறையாகும். இது முந்தைய குறியீட்டு வரியை ஓட்டில் செருகும். உங்கள் வரலாற்றில் மேலும் பின்னோக்கிச் செல்ல அதை அழுத்திக்கொண்டே இருங்கள், நீங்கள் அதிக தூரம் சென்றால், வேறு வழியில் செல்ல கீழ் அம்புக்குறியை அழுத்தவும். இப்போது அதைப் பயன்படுத்த முயற்சிக்கவும்."

#. https://futurecoder.io/course/#IntroducingStrings
#: 
msgid "pages.IntroducingStrings.steps.hello_string.text"
msgstr "பைதான் நீங்கள் கணக்கிடுவதை விட அதிகமாக செய்ய உதவுகிறது. உண்மையில், நாங்கள் சிறிது நேரம் எண்களையோ கணிதத்தையோ தொடப்போவதில்லை. அதற்கு பதிலாக, நாம் *சரங்களை* பார்க்கப் போகிறோம். சரங்கள் அடிப்படையில் உரையின் துணுக்குகள். எடுத்துக்காட்டாக, ஓட்டில் பின்வருவனவற்றை உள்ளிடவும், மேற்கோள்கள் (`'`) சேர்க்கப்பட்டுள்ளன: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingStrings
#: 
msgid "pages.IntroducingStrings.steps.final_text.text"
msgstr "மேலும் கணக்கிடுவதற்கு எதுவும் இல்லை என்பதால் ஓடு அதையே திரும்பக் கொடுக்கிறது. `'hello'` என்பது `'hello'` என்பதற்குச் சமம். \n"
"\n"
"சரம் என்பது குறியீடுளின் வரிசை. குறியீடு என்பது எழுத்து, எண், நிறுத்தற்குறி, இடைவெளி போன்ற ஒற்றைக் குறியீடு ஆகும். இந்தச் சரத்தில் `hello` என்ற 5 எழுத்துகள் இருக்கும். மேற்கோள்கள் சரத்தின் ஒரு பகுதியாக இல்லை - மேற்கோள்களுக்கு இடையில் உள்ள எழுத்துக்களைக் கொண்ட ஒரு சரம் இது என்று மனிதர்கள் மற்றும் கணினிகள் இரண்டிற்கும் சொல்ல அவை உள்ளன."

#. https://futurecoder.io/course/#AddingStrings
#: 
msgid "pages.AddingStrings.steps.hello_world_concat.text"
msgstr "`+` ஐப் பயன்படுத்தி சரங்களை ஒன்றாகச் சேர்க்கலாம், இருப்பினும் இது எண்களைச் சேர்ப்பதில் இருந்து மிகவும் வித்தியாசமானது. எடுத்துக்காட்டாக, முயற்சிக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#AddingStrings
#: 
msgid "pages.AddingStrings.steps.hello_world_space.text"
msgstr "`+` இரண்டு சரங்களை ஒன்றாக சேர்க்கிறது அல்லது இணைக்கிறது என்பதை நீங்கள் பார்க்கலாம். தொழில்நுட்ப ரீதியாக, இது ஒருங்கிணைப்பு என்று அழைக்கப்படுகிறது. \n"
"\n"
"இதோ ஒரு பயிற்சி: முந்தைய குறியீட்டை சிறிது மாற்றவும், இதன் விளைவாக `'hello world'` என்ற சரம் வரும், அதாவது.. வார்த்தைகளுக்கு இடையில் இடைவெளி இருக்கும். \n"
"\n"
"உங்களுக்கு உதவி வேண்டுமானால், கீழே வலதுபுறத்தில் உள்ள ஒளிவிளக்கு சின்னத்தை சொடுக்கு செய்து குறிப்பைப் பெறலாம்."

#. https://futurecoder.io/course/#AddingStrings
#. 
#.     # __code0__:
#.     'hello ' + 'world'
#.     'hello' + ' world'
#.     'hello' + ' ' + 'world'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27world%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27hello%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27hello+%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27+world%27
#: 
msgid "pages.AddingStrings.steps.final_text.text"
msgstr "நல்லது! பின்வருவனவற்றில் ஏதேனும் சரியான தீர்வுகள்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.steps.word_assign.text"
msgstr "கருத்துள்ள நிரல்களை உருவாக்க, எப்போதும் ஒரே மதிப்புகளை நாம் கையாள முடியாது. காலத்திற்கு முன்பே தெரியாத மற்றும் மாறக்கூடிய மதிப்புகளைக் குறிப்பிடுவதற்கு நமக்கு ஒரு வழி தேவை - மாறக்கூடிய மதிப்புகள். இவை *மாறிகள்* எனப்படும். \n"
"\n"
"இந்தக் குறியீட்டை இயக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.steps.word_check.text"
msgstr "இது `word` என்ற பெயருடன் ஒரு மாறியை உருவாக்குகிறது, இது `'Hello'` என்ற சர மதிப்பைக் குறிக்கிறது. \n"
"\n"
"இப்போது ஓட்டில் `__program__` ஐ இயக்கும்போது என்ன நடக்கிறது என்று பாருங்கள்."

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.steps.word_string_check.text"
msgstr "நல்லது. ஒப்பிடுவதற்கு, மேற்கோள்களுடன் ஓட்டில் `__program__` ஐ இயக்கவும்."

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.steps.sunshine_undefined_check.text"
msgstr "மேற்கோள்கள் எல்லா வித்தியாசத்தையும் ஏற்படுத்துகின்றன என்பதை நீங்கள் பார்க்க முடியும். `'word'` என்பது வெறும் `'word'`, எனவே இது தொழில்நுட்ப ரீதியாக ஒரு *எழுத்துச்சரம்* என்று அழைக்கப்படுகிறது. மறுபுறம், `word` என்பது ஒரு மாறி, அதன் மதிப்பு எதுவும் இருக்கலாம். \n"
"\n"
"அதேபோல,`'sunshine'` என்பது `'sunshine'` , ஆனால் மேற்கோள்கள் இல்லாமல் `__program__` என்றால் என்ன? ஓட்டில் இயக்கவும்"

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.steps.final_text.text"
msgstr "பதில் என்னவென்றால், `sunshine` ஒரு மாறி போல் தெரிகிறது, எனவே பைதான் அதன் மதிப்பைப் பார்க்க முயற்சிக்கிறது, ஆனால் அந்த பெயருடன் ஒரு மாறியை நாம் வரையறுக்காததால், நமக்கு ஒரு பிழை ஏற்படுகிறது."

#. https://futurecoder.io/course/#UsingVariables
#. 
#.     # __code0__:
#.     word = 'Hello'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Hello%27
#: 
msgid "pages.UsingVariables.steps.name_assign.text"
msgstr "முன்பு இந்தக் குறியீட்டைக் கொண்டு `'Hello'` மதிப்புடன் `word` எனப்படும் ஒரு மாறியை உருவாக்கினோம்: \n"
"\n"
"__code0__\n"
"\n"
"இப்போது `your_name` என்ற மாறியை உருவாக்கவும், அதன் மதிப்பு மற்றொரு சரம். \n"
"\n"
"(`your_name` இல் உள்ள `_` எழுத்து ஒரு *அடிக்கோடு* என அழைக்கப்படுகிறது. பல சொற்களைக் கொண்ட மாறி பெயரை நீங்கள் விரும்பினால், சொற்களைப் பிரிக்க இதைப் பயன்படுத்தவும். Shift மற்றும் hyphen/dash/minus ஐ அழுத்தி பெரும்பாலான விசைப்பலகைகளில் தட்டச்சு செய்யலாம் (` -`).)"

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.steps.hello_plus_name.text"
msgstr "நீங்கள் எழுத்துக்குறிகளைப் பயன்படுத்துவதைப் போலவே கணக்கீடுகளிலும் மாறிகளைப் பயன்படுத்தலாம். எடுத்துக்காட்டாக, முயற்சிக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#UsingVariables
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.UsingVariables.steps.word_plus_name.text"
msgstr "அல்லது நீங்கள் மாறிகளை ஒன்றாக சேர்க்கலாம். முயற்சிக்கவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.steps.word_plus_name_with_space.text"
msgstr "அச்சச்சோ...அது நன்றாக இல்லை. வார்த்தைக்கும் உங்கள் பெயருக்கும் இடையில் இடைவெளி இருக்கும்படி மேலே உள்ள குறியீட்டை மாற்ற முடியுமா?"

#. https://futurecoder.io/course/#UsingVariables
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.UsingVariables.steps.word_assign_goodbye.text"
msgstr "சரியானது! \n"
"\n"
"மாறிகள் காலப்போக்கில் அவற்றின் மதிப்புகளையும் மாற்றலாம். தற்போது `word`க்கு `'Hello'` மதிப்பு உள்ளது. நீங்கள் அதை முதல் முறையாக அமைக்கும் அதே வழியில் அதன் மதிப்பை மாற்றலாம். இதை இயக்கவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.steps.goodbye_plus_name.text"
msgstr "இப்போது மீண்டும் `__program__` இயக்குவதன் மூலம் இந்த மாற்றத்தின் விளைவைக் கவனிக்கவும்."

#. https://futurecoder.io/course/#UsingVariables
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.UsingVariables.steps.first_print.text"
msgstr "சரங்களைச் சுற்றியுள்ள மேற்கோள்கள் எரிச்சலூட்டுகின்றன. இதை இயக்க முயற்சிக்கவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.steps.final_text.text"
msgstr "மட்டற்ற மகிழ்ச்சி! மேலும் மேற்கோள்கள் இல்லை! இந்தக் குறியீட்டில் என்ன நடக்கிறது என்பதை பின்னர் விவரிப்போம். `print(<ஏதோ ஒன்று>)` என்பது `<ஏதோ ஒன்று>` என்பதை ஓட்டில் காட்டும் என தெரிந்து கொள்ளுங்கள். குறிப்பாக, மேற்கோள்கள் போன்ற பொருட்களைக் கொண்ட குறியீட்டிற்குப் பொருத்தமான சரங்களின் பிரதிநிதித்துவத்திற்குப் பதிலாக, நாம் வழக்கமாகக் கவனிக்கும் சரங்களின் உண்மையான உள்ளடக்கத்தைக் காட்டுகிறது. இங்கே `print` என்ற வார்த்தைக்கும் காகிதத்தில் மை வைப்பதற்கும் எந்த சம்பந்தமும் இல்லை."

#. https://futurecoder.io/course/#WritingPrograms
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.WritingPrograms.steps.editor_hello_world.text"
msgstr "ஓட்டில் உள்ள அனைத்தையும் செய்வதை நிறுத்த வேண்டிய நேரம் இது. மேல் வலதுபுறத்தில் நீங்கள் *தொகுப்பான்* பார்க்கலாம். நீங்கள் நீண்ட நிரல்களை எழுதுவதற்கும் இயக்குவதற்கும் இது ஒரு இடம். ஓடு நன்றாக உள்ளது மற்றும் நீங்கள் அதை தொடர்ந்து பயன்படுத்த வேண்டும், ஆனால் உண்மையான நிரல்கள் வாழும் இடத்தில் தொகுப்பான் உள்ளது. \n"
"\n"
"தொகுப்பானில் கீழே உள்ள நிரலைத் தட்டச்சு செய்து, 'இயக்கு' பொத்தானைக் சொடுக்கு செய்யவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#WritingPrograms
#: 
msgid "pages.WritingPrograms.steps.final_text.text"
msgstr "வாழ்த்துக்கள், உங்கள் முதல் உண்மையான திட்டத்தை இயக்கியுள்ளீர்கள்! \n"
"\n"
"இந்த திட்டத்தை புரிந்து கொள்ள சிறிது நேரம் ஒதுக்குங்கள். பைதான் மேலிருந்து கீழாக ஒவ்வொரு வரியையும் இயக்குகிறது, ஒரு நேரத்தில் ஒரு வரி என இயக்குகிறது. இந்த செயல்முறையை உங்கள் தலையில் உருவகப்படுத்த முயற்சிக்க வேண்டும் - ஒவ்வொரு வரியும் என்ன செய்கிறது என்பதைப் பற்றி சிந்தியுங்கள். `word` மதிப்பு எவ்வாறு மாற்றப்பட்டது மற்றும் இது என்ன விளைவை ஏற்படுத்தியது என்பதைப் பார்க்கவும். `print` பலமுறை பயன்படுத்தப்படும் போது, ஒவ்வொரு பொருளும் (இங்கு `Hello World` மற்றும் `Goodbye World`) அதன் சொந்த வரியில் அச்சிடப்படும் என்பதை நினைவில் கொள்ளவும்.\n"
"\n"
"தொகுப்பானில் உள்ள நிரல்களைப் பற்றி கவனிக்க வேண்டிய சில குறிப்புகள்: \n"
"\n"
"1. நிரல் ஓட்டில் இயங்குகிறது, அதாவது நிரலில் வரையறுக்கப்பட்ட மாறிகள் இப்போது நிரலில் கடைசியாக இருந்த மதிப்புகளுடன் ஓட்டில் உள்ளன. நிரல் முடிந்ததும் ஓட்டில் ஆராய இது உங்களை அனுமதிக்கிறது. எடுத்துக்காட்டாக, `name` இப்போது ஓட்டில் `'World'` மதிப்பைக் கொண்டுள்ளது. \n"
"2. நிரல்கள் தனிமையில் இயங்குகின்றன - அவை முன்னர் வரையறுக்கப்பட்ட மாறிகள் எதையும் சார்ந்து இருக்காது. ஓடு மீட்டமைக்கப்பட்டது மற்றும் முந்தைய அனைத்து மாறிகளும் அழிக்கப்பட்டன. ஓட்டில் தற்போது `word` இருந்தாலும், நிரலின் முதல் வரியை நீக்கிவிட்டு அதை மீண்டும் இயக்கினால், `word` வரையறுக்கப்படாதது குறித்த பிழையைப் பெறுவீர்கள். \n"
"3. ஓட்டில் குறியீட்டை உள்ளிட்டு அதற்கு மதிப்பு இருந்தால், அந்த மதிப்பு தானாகவே காட்டப்படும். தொகுப்பானில் உள்ள நிரல்களுக்கு இது நடக்காது - நீங்கள் மதிப்புகளை அச்சிட வேண்டும். நிரலில் இருந்து `print()` ஐ அகற்றி, இரண்டு வரிகளை வெறும் `word + ' ' + name` என மாற்றினால், எதுவும் காட்டப்படாது. \n"
"\n"
"இந்த குறிப்புகள் அனைத்தையும் நீங்களே சரிபார்க்க பரிந்துரைக்கிறேன்."

#. https://futurecoder.io/course/#StoringCalculationsInVariables
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.text"
msgstr "கணக்கீடுகளின் முடிவுகளைச் சேமிக்க பெரும்பாலும் நீங்கள் மாறிகளைப் பயன்படுத்துவீர்கள். இது மிகவும் சிக்கலான திட்டங்களை உருவாக்க உதவும். எடுத்துக்காட்டாக, இந்த திட்டத்தை முயற்சிக்கவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#StoringCalculationsInVariables
#. 
#.     # __code0__:
#.     word = 'Goodbye'
#.     print(sentence)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.sentence
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Goodbye%27
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.text"
msgstr "இப்போது `sentence` பலமுறை பயன்படுத்தக்கூடிய `'Hello World'` மதிப்பைக் கொண்டுள்ளது. இது நேரடியாக மறுஒதுக்கீடு செய்யப்படும் வரை இந்த மதிப்பைக் கொண்டிருக்கும் என்பதை நினைவில் கொள்ளவும், எ.கா. `sentence = <ஏதாவது>` போன்ற மற்றொரு அறிக்கையுடன். எடுத்துக்காட்டாக, நிரலின் முடிவில் இந்த இரண்டு வரிகளைச் சேர்க்கவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#StoringCalculationsInVariables
#: 
msgid "pages.StoringCalculationsInVariables.steps.final_text.text"
msgstr "சூத்திரங்கள் தானாக புதுப்பிக்கப்படும் விரிதாளைப் போலல்லாமல், `sentence` போன்ற ஒரு மாறி அது எவ்வாறு கணக்கிடப்பட்டது என்பதை நினைவில் கொள்ளாது, மேலும் அடிப்படை மதிப்புகள் `word` அல்லது `name` மாற்றப்பட்டால் மாறாது."

#. https://futurecoder.io/course/#IntroducingForLoops
#: 
msgid "pages.IntroducingForLoops.steps.first_for_loop.text"
msgstr "நல்ல செய்தி! சலிப்பூட்டும் அடிப்படைகளைத் தாண்டிவிட்டீர்கள். சில மனதை இழுக்கும் நிரல்களை எழுத ஆரம்பிக்கலாம் மற்றும் கொஞ்சம் வேடிக்கையாக இருக்கலாம். நிரலாக்கத்தில் மிகவும் சக்திவாய்ந்த கருத்துக்களில் ஒன்று *சுழல்* ஆகும், இது ஒரே குறியீட்டை மீண்டும் மீண்டும் செய்ய உங்களை அனுமதிக்கிறது. பைத்தானில் இரண்டு வகையான சுழல்கள் உள்ளன: `for` சுழல்கள் மற்றும் `while` சுழல்கள். இங்கே ஒரு for சுழல்லின் எடுத்துக்காட்டு, இந்த நிரலை இயக்க முயற்சிக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingForLoops
#: 
msgid "pages.IntroducingForLoops.steps.final_text.text"
msgstr "நீங்கள் குறியீட்டை சாதாரண ஆங்கிலத்தைப் போலவே படிக்கலாம்: \n"
"\n"
"> `name` என்ற சரத்தில் உள்ள ஒவ்வொரு எழுத்துக்கும், அந்த எழுத்தை அச்சிடவும். \n"
"\n"
"ஒவ்வொரு எழுத்தும் ஒரு சாதாரண சரம். `character` என்பது ஒரு சாதாரண மாறி, இது `:` இயங்கிய பின் குறியீட்டுக்கு முன் புதிய மதிப்பு கொடுக்கப்படுகிறது. எனவே மேலே உள்ள குறியீடு இதற்குச் சமமானது: \n"
"\n"
"    __no_auto_translate__\n"
"    name = 'World'\n"
"\n"
"    character = 'W'\n"
"    print(character)\n"
"\n"
"    character = 'o'\n"
"    print(character)\n"
"\n"
"    character = 'r'\n"
"    print(character)\n"
"\n"
"    character = 'l'\n"
"    print(character)\n"
"\n"
"    character = 'd'\n"
"    print(character)\n"
"\n"
"நாம் வேறு ஒரு மாறி பெயரைப் பயன்படுத்தலாம் என்பதை நினைவில் கொள்ளவும், `character' அதை தெளிவாக்குகிறது. \n"
"\n"
"ஒரு for சுழல் பொதுவாக இந்தக் கட்டமைப்பைப் பின்பற்றுகிறது: \n"
"\n"
"    for <மாறி> in <தொகுப்பு>: <அடுத்தடுத்து செய்ய வேண்டிய குறியீடு> \n"
"\n"
"`for`, `in` மற்றும் `:` அனைத்தும் அவசியம்."

#. https://futurecoder.io/course/#Indentation
#. 
#.     # __code1__:
#.     for character in name:
#.         print(character)
#. 
#.     # __code0__:
#.     for character in name: print(character)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.character
#: 
msgid "pages.Indentation.steps.missing_indentation.text"
msgstr "இந்த எடுத்துக்காட்டு சுழல்:\n"
"\n"
"   __code0__ \n"
"\n"
"வேலை செய்கிறது, ஆனால் உண்மையில் இது பொதுவாக இப்படி எழுதப்படும்(எழுதவேண்டும்) : \n"
"\n"
"__code1__ \n"
"\n"
"குறிப்பாக, மீண்டும் மீண்டும் செய்ய வேண்டிய குறியீடு (*உடல்* என அறியப்படுகிறது) முக்காற்புள்ளிக்குப் பிறகு ஒரு புதிய வரியில் தொடங்குகிறது (`:`) , மற்றும் அது *உள்தள்ளல்* செய்யப்பட வேண்டும், அதாவது.. அதற்கு முன் சில இடைவெளிகள் இருக்க வேண்டும். உள்தள்ளல் இல்லாமல் கீழே உள்ள குறியீடு தவறானது, நீங்களே பார்க்க அதை இயக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#Indentation
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Indentation.steps.two_indented_lines.text"
msgstr "பைத்தானுக்கு குறியீட்டின் எந்த வரிகள் for சுழலின் உடலுக்குச் சொந்தமானது என்பதைக் கூற இடைவெளிகள் தேவை. சுழலில் பல வரிகள் இருக்கும் போது இது மிகவும் முக்கியமானது, அது அடிக்கடி இருக்கும். எடுத்துக்காட்டாக, இந்தக் குறியீட்டை இயக்கவும்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#Indentation
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Indentation.steps.one_indented_line.text"
msgstr "இரண்டு உள்தள்ளப்பட்ட வரிகள் உள்ளன, எனவே அவை இரண்டும் உடலின் ஒரு பகுதியாகும், எனவே ஒவ்வொரு எழுத்துக்கும் பிறகு `---` அச்சிடப்படும். இப்போது கடைசி வரியில் உள்தள்ளல் இல்லாமல் அதே குறியீட்டை இயக்க முயற்சிக்கவும்: \n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#Indentation
#: 
msgid "pages.Indentation.steps.mismatched_indentations.text"
msgstr "`print('---')` உள்தள்ளப்படாததால், இது சுழல் உடலின் பகுதியாக இல்லை. அதாவது முழு சுழலும் இயங்கி முடித்த பிறகு ஒருமுறை மட்டுமே இயங்கும். இரண்டு நிரல்களும் செல்லுபடியாகும், அவை வெவ்வேறு செயல்களைச் செய்கின்றன. \n"
"\n"
"கீழே உள்ள நிரல் தவறானது. சுழல் உடலில் உள்ள இரண்டு கோடுகளும் உள்தள்ளப்பட்டுள்ளன, ஆனால் வெவ்வேறு அளவுகளால். முதல் வரி 4 இடைவெளிகளுடன் தொடங்குகிறது, இரண்டாவது வரி 2 இல் தொடங்குகிறது. அதை இயக்க முயற்சிக்கவும். \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#Indentation
#: 
msgid "pages.Indentation.steps.final_text.text"
msgstr "நீங்கள் உள்தள்ளும் போது, நீங்கள் எப்போதும் 4 இடைவெளிகளால் உள்தள்ள வேண்டும். எந்தவொரு நிலையான உள்தள்ளலும் உண்மையில் ஏற்றுக்கொள்ளத்தக்கது, ஆனால் 4 இடைவெளிகள் என்பது கிட்டத்தட்ட அனைவரும் பின்பற்றும் மரபு. தொகுப்பான் பொதுவாக இதை உங்களுக்கு எளிதாக்குகிறது என்பதை நினைவில் கொள்ளவும். எடுத்துக்காட்டாக, தொகுப்பானில் உங்கள் விசைப்பலகையில் உள்ள 'Tab' விசையை அழுத்தினால், அது உங்களுக்காக 4 இடைவெளிகளைச் செருகும்."

#. https://futurecoder.io/course/#BasicForLoopExercises
#. 
#.     # __code0__:
#.     name = 'World'
#. 
#.     for character in name:
#.         print(character)
#.         print('---')
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.character
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27World%27
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.text"
msgstr "சில பயிற்சிகளுக்கான நேரம்! இந்த நிரலை மாற்றவும்:\n"
"\n"
" __code0__ \n"
"\n"
"என்பதற்கு பதிலாக வெளியீடு:\n"
"\n"
"    __no_auto_translate__\n"
"    ---W\n"
"    ---o\n"
"    ---r\n"
"    ---l\n"
"    ---d"

#. https://futurecoder.io/course/#BasicForLoopExercises
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.text"
msgstr "அற்புதம்! இப்போது `name` என்பதில் ஒவ்வொரு எழுத்துக்கும் ஒரு முறை `name` அச்சிடும் நிரலை எழுதவும். எடுத்துக்காட்டாக, `name = 'Amy'` என்பதற்கு, இதை வெளியீடு செய்ய வேண்டும்:\n"
"\n"
"    __no_auto_translate__\n"
"    Amy\n"
"    Amy\n"
"    Amy\n"
"\n"
" `name = 'World'` என்பதற்கு, அது வெளியிட வேண்டும்: \n"
"\n"
"    __no_auto_translate__\n"
"    World\n"
"    World\n"
"    World\n"
"    World\n"
"    World\n"
"\n"
"மூலம், நீங்கள் `name` ஐ அமைக்கலாம் முதல் வரியில் எதையும். அதன் பிறகு மீதமுள்ள நிரல் மட்டுமே சரிபார்க்கப்படும்."

#. https://futurecoder.io/course/#BasicForLoopExercises
#: 
msgid "pages.BasicForLoopExercises.steps.final_text.text"
msgstr "நாம் நல்ல முன்னேற்றம் அடைகிறோம்! நீங்கள் சிக்கல்களைத் தீர்த்து புதிய குறியீட்டை எழுதுகிறீர்கள்! \n"
"செயல்களை இன்னும் விருவிருப்பாக்கிக் கொண்டே போகலாம்."

#. https://futurecoder.io/course/#BuildingUpStrings
#: 
msgid "pages.BuildingUpStrings.steps.hello_plus_equals.text"
msgstr "இன்னும் சில சுழல்களைப் பார்ப்பதற்கு முன், நாம் மற்றொரு கருத்தை விரைவாகக் கற்றுக்கொள்ள வேண்டும். இந்த நிரலைப் பாருங்கள்:\n"
"\n"
"__program_indented__\n"
"\n"
" `hello = hello + '!'` வரி என்ன செய்கிறது என்று நினைக்கிறீர்கள்? கண்டுபிடிக்க நிரலை இயக்கவும்."

#. https://futurecoder.io/course/#BuildingUpStrings
#. 
#.     # __code0__:
#.     temp = hello + '!'
#.     hello = temp
#. 
#.     # __code1__:
#.     temp = hello
#.     hello = temp + '!'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.temp
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.hello
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.text"
msgstr "`=` இன் இடது மற்றும் வலதுபுறத்தில் `hello` இருப்பதை பைதான் பொருட்படுத்தவில்லை, மாறிகள் வித்தியாசமாக இருந்தால் அது எப்போதும் என்ன செய்கிறதோ அதையே செய்கிறது: அது அந்த நேரத்தில் `hello + '!'` கணக்கிடுகிறது `'Hello' + '!'` இது `'Hello!'` ஆகும், அதுவே `hello` இன் புதிய மதிப்பாக மாறும். இது உதவியிருந்தால், அந்த வரியை இரண்டு படிகளாகப் பிரிக்கலாம்: \n"
"\n"
"__code0__\n"
"\n"
"அல்லது:\n"
"\n"
"__code1__\n"
"\n"
"இது ஒரு சுழலில் மிகவும் பயனுள்ளதாக இருக்கும். இந்த திட்டத்தை முயற்சிக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#BuildingUpStrings
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_missing_last_line.text"
msgstr "இந்தத் திட்டத்தை நீங்கள் முழுமையாகப் புரிந்துகொண்டுள்ளீர்கள் என்பதை உறுதிப்படுத்த உங்கள் நேரத்தை எடுத்துக் கொள்ளுங்கள். இது இதுபோன்ற ஒன்றைச் செய்கிறது:\n"
"\n"
"    line = '-'\n"
"\n"
"    char = 'W'\n"
"    line = line + char\n"
"         = '-'  + 'W'\n"
"         = '-W'\n"
"    print('-W')\n"
"\n"
"    char = 'o'\n"
"    line = line  + char\n"
"         = '-W'  + 'o'\n"
"         = '-Wo'\n"
"    print('-Wo')\n"
"\n"
"    char = 'r'\n"
"    line = line  + char\n"
"         = '-Wo' + 'r'\n"
"         = '-Wor'\n"
"    print('-Wor')\n"
"\n"
"    ...\n"
"\n"
"விவரங்கள் முக்கியம். கடைசி இரண்டு வரிகளை மாற்றி, அதற்குப் பதிலாக இந்த நிரலை இயக்கினால் என்ன நடக்கும்? \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#BuildingUpStrings
#: 
msgid "pages.BuildingUpStrings.steps.final_text.text"
msgstr "அது அழகாக இல்லையா?\n"
"\n"
"காலியாக உள்ள ஒன்றைத் தொடங்கி, அதை `for` சுழல் மூலம் உருவாக்கும் முறை *மிகவும்* பொதுவானது, \n"
"மேலும் நீங்கள் நிறைய பயிற்சிகளைப் பெறப் போகிறீர்கள். சில ஆரம்ப வெற்று மதிப்புகள்\n"
"`''`, `0` மற்றும் `[]` - ஒரு வெற்று பட்டியல், நீங்கள் விரைவில் பார்ப்பீர்கள்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#.     # __code0__:
#.     name = 'World'
#.     line = ''
#.     for char in name:
#.         line = line + char
#.         print(line)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.line
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27World%27
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_spaced.text"
msgstr "இந்த நிரலை மாற்றவும்:\n"
"\n"
"__code0__\n"
"\n"
" முக்கோணத்தில் உள்ள ஒவ்வொரு எழுத்துக்கும் பிறகு ஒரு இடத்தை சேர்க்க, அதனால் வெளியீடு இப்படி இருக்கும்:\n"
"\n"
"    W\n"
"    W o\n"
"    W o r\n"
"    W o r l\n"
"    W o r l d"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_backwards.text"
msgstr "பிரமாண்டம்! இப்போது ஒவ்வொரு வரியும் பின்னோக்கி இருக்கும்படி நிரலை மாற்றவும்: \n"
"\n"
"    __no_auto_translate__\n"
"    W\n"
"    oW\n"
"    roW\n"
"    lroW\n"
"    dlroW"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#.     # __code0__:
#.     line = line + char
#. 
#.     # __code1__:
#.     line += char
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.line
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_underlined.text"
msgstr "புத்திசாலித்தனம்!\n"
"\n"
"இது போன்ற குறியீடு:\n"
"\n"
"__code0__\n"
"\n"
" மிகவும் பொதுவானது, பைதான் அதைச் சுருக்கவும் உங்களை அனுமதிக்கிறது. இதற்கு ஒரே பொருள்: \n"
"\n"
"__code1__\n"
"\n"
"`line = char + line` என்பதற்குச் சுருக்கம் இல்லை என்பதை நினைவில் கொள்ளவும். \n"
"\n"
"இப்போது `+=` மற்றும் ஒரு for சுழலைப் பயன்படுத்தி உங்கள் சொந்த நிரலை எழுதுதவும், `name` 'அடிக்கோடிட்டு' அச்சிடப்பட வேண்டும், இது போல:\n"
"\n"
"    World\n"
"    -----\n"
"\n"
" `name` இல் உள்ள ஒவ்வொரு எழுத்துக்கும் ஒரு `-` இருக்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.text"
msgstr "அற்புதம்! \n"
"\n"
"இதன் மூலம், நீங்கள் ஒரு மாறியைப் பயன்படுத்தத் தேவையில்லாதபோது, அந்த மாறிக்கு `_` (அடிக்கோடிட்டு), எ.கா. `for _ in name:` என்று பெயரிடுவது பொதுவான மரபு. இது நிரல் எவ்வாறு இயங்குகிறது என்பதை மாற்றாது, ஆனால் இது வாசகர்களுக்கு உதவியாக இருக்கும். \n"
"\n"
"இதை அழகாக ஆக்குவோம். பெயரைச் சுற்றி ஒரு பெட்டியை வரைய உங்கள் நிரலை நீட்டிக்கவும்:\n"
"\n"
"    +-----+\n"
"    |World|\n"
"    +-----+"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box_2.text"
msgstr "நீங்கள் இதில் நன்றாக இருக்கிறீர்கள்! உங்களுக்கு இன்னும் ஒரு சவால் தேவை போல் தெரிகிறது...பெட்டியில் பெயரை வைப்பதற்கு பதிலாக பெட்டி என்று பெயர் வைக்கலாமா? இதை வெளியிடும் ஒரு நிரலை எழுதவும்:\n"
"\n"
"    +World+\n"
"    W     W\n"
"    o     o\n"
"    r     r\n"
"    l     l\n"
"    d     d\n"
"    +World+"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.text"
msgstr "இனிமை! நீங்கள் உண்மையில் இதைப் புரிந்துகொள்கிறீர்கள்!\n"
"\n"
"நீங்கள் விரும்பினால் கீழே மேலும் ஒரு விருப்ப கூடுதல் சவாலை செய்யலாம்.\n"
"இல்லையெனில், நீங்கள் இப்போது [அடுத்த பக்கம்](#BasicTerminology) தொடரலாம். \n"
"நீங்கள் விரும்பினால், நீங்கள் திரும்பி வந்து இதைச் செய்யலாம்.\n"
"\n"
"கொடுக்கப்பட்ட `name` ஒரு மூலைவிட்ட கோட்டில் வெளியிடும் நிரலை எழுத முயற்சிக்கவும், எ.கா:\n"
"\n"
"    W\n"
"     o\n"
"      r\n"
"       l\n"
"        d"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#: 
msgid "pages.BuildingUpStringsExercises.steps.final_text.text"
msgstr "அருமை, எதுவும் உங்களைத் தடுக்க முடியாது!"

#. https://futurecoder.io/course/#BasicTerminology
#: 
msgid "pages.BasicTerminology.steps.final_text.text"
msgstr "நீங்கள் தெரிந்து கொள்ள வேண்டிய சில வார்த்தைகள் இதோ:\n"
"\n"
" *** வெளிப்பாடு*** என்பது மதிப்பைக் கொண்ட குறியீட்டின் ஒரு பகுதி. எடுத்துக்காட்டாக, இந்தக் குறியீட்டு வரியில்:\n"
"\n"
"    __no_auto_translate__\n"
"    sentence = 'Hello ' + name\n"
"\n"
"மூன்று வெளிப்பாடுகள் உள்ளன:\n"
"\n"
"1. `'Hello '`\n"
"2. `name`\n"
"3. `'Hello ' + name`\n"
"\n"
" இதற்கு மாறாக, முழு வரி `sentence = ...` என்பது ஒரு ***அறிக்கை***. இது ஒரு செயலைச் செய்ய கணினிக்குச் சொல்லும் கட்டளை. அதற்கு அதன் சொந்த மதிப்பு இல்லை. உதாரணமாக, நீங்கள் அறிக்கைகளை ஒன்றாக சேர்க்க முடியாது என்று பொருள். இந்தக் குறியீடு தவறானது:\n"
"\n"
"    (word = 'Hello') + (name = 'Bob')\n"
"\n"
" குறிப்பாக, `sentence = ...` போன்ற ஒரு அறிக்கை, ஒரு மாறிக்கு மதிப்பு கொடுக்கப்பட்டால் ***நிர்ணயம்*** - மாறிக்கு மதிப்பு *ஒதுக்கப்பட்டுள்ளது*.\n"
"\n"
" நிரல் என்பது வரிசையாக செயல்படுத்தப்படும் அறிக்கைகளின் பட்டியல். ஒரு `for` சுழல் என்பது ஒரு *கலவை அறிக்கை*, அதாவது பிற அறிக்கைகளைக் கொண்ட அதன் சொந்த அமைப்பைக் கொண்டுள்ளது. பெரும்பாலான அறிக்கைகள் வெளிப்பாடுகளைக் கொண்டிருக்கும், மேலும் வெளிப்பாடுகள் மற்ற சிறிய வெளிப்பாடுகளைக் கொண்டிருக்கலாம், ஆனால் வெளிப்பாடுகள் அறிக்கைகளைக் கொண்டிருக்க முடியாது. \n"
"\n"
"ஒரு வெளிப்பாட்டின் மதிப்பைக் கணக்கிடும் செயல்முறை ***மதிப்பீடு*** என்று அழைக்கப்படுகிறது - அதில் 'மதிப்பு' என்ற வார்த்தை எவ்வாறு உள்ளது என்பதைக் கவனியுங்கள். `3` மதிப்பைப் பெற, கணினி *மதிப்பீடும்* `1 + 2`.\n"
"\n"
" ஒரு சுழலை இயக்கும் செயல்முறை ***மறுசெய்கை*** என்று அழைக்கப்படுகிறது.`for char in 'Hello':` போன்ற குறியீடு `'Hello'` என்ற சரத்தின் உள்ள ஓவ்வொரு எழுத்துகளுக்கு *மீண்டும்* வருகிறது. சுழல் வழியாக ஒவ்வொரு ஓட்டமும் *ஒரு மறு செய்கை*, எனவே இந்த எடுத்துக்காட்டில் 5 மறு செய்கைகள் இருக்கும். இது சாத்தியம் என்பதால் சரங்கள் *மறு செய்பவை* என்று பொருள். இதற்கு நேர்மாறாக, எண்களை மீண்டும் செய்ய முடியாது, நீங்கள் `for char in 3:'ஐ முயற்சித்தால், பைதான் உங்களுக்குச் சொல்லும்."

#. https://futurecoder.io/course/#IntroducingIfStatements
#: 
msgid "pages.IntroducingIfStatements.steps.introducing_booleans.text"
msgstr "இப்போது கணினியை எவ்வாறு முடிவுகளை எடுக்கச் சொல்வது மற்றும் சில நிபந்தனைகளின் கீழ் குறியீட்டை மட்டும் இயக்குவது எப்படி என்பதை நாம் கற்றுக் கொள்ளப் போகிறோம். \n"
"இதற்கு நமக்கு ஒரு புதிய வகை மதிப்பு தேவைப்படும்.எண்கள் மற்றும் சரங்களைப் பார்த்தீர்கள், இப்போது *பூலியன்களை* சந்திக்கவும்.\n"
"இரண்டு பூலியன் மதிப்புகள் மட்டுமே உள்ளன:\n"
"அவை `True` மற்றும் `False`. இந்த திட்டத்தை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingIfStatements
#: 
msgid "pages.IntroducingIfStatements.steps.first_if_statements.text"
msgstr "பூலியன்களை *if அறிக்கைகள்* (சில நேரங்களில் *நிபந்தனைகள்* என்றும் அழைக்கப்படும்) உள்ளே பயன்படுத்தப்பட வேண்டும்.\n"
"\n"
" நீங்கள் இயக்குவதற்கான எளிய உதாரணம்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingIfStatements
#: 
msgid "pages.IntroducingIfStatements.steps.excited_example.text"
msgstr "முதல் `if` அறிக்கையின் உள்ளே குறியீடு எவ்வாறு இயங்கியது என்பதைக் கவனியுங்கள், ஆனால் இரண்டாவது இல்லை.\n"
"\n"
"பொதுவாக, ஒரு `if` அறிக்கை இப்படி இருக்கும்:\n"
"\n"
"if <நிபந்தனை>:\n"
"    <உடல்> \n"
"\n"
"இதில் `<நிபந்தனை>` என்பது பூலியனை மதிப்பிடும் எந்த வெளிப்பாடும் மற்றும் `<உடல்>` என்பது **உள்தள்ளப்பட்ட**  ஒன்று அல்லது பல அறிக்கைகள் கொண்ட பட்டியல். \n"
"அமைப்பு ஒரு `for` சுழல் போலவே உள்ளது. இன்றியமையாத முக்காற்புள்ளியை (`:`) கவனியுங்கள்.\n"
"\n"
"கணினி `if <நிபந்தனை>:` ஐப் பார்க்கும்போது, அது `<நிபந்தனை>` `True` என்பதைச் சரிபார்க்கும். \n"
"அது இருந்தால், அது உடலை இயக்குகிறது. \n"
"இல்லையெனில், அது அதைத் தவிர்த்துவிட்டு மற்ற நிரல்களுக்குத் தொடர்கிறது. \n"
"\n"
"நீங்கள் இயக்குவதற்கு மிகவும் சிறந்த உதாரணம்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingIfStatements
#: 
msgid "pages.IntroducingIfStatements.steps.excited_false_example.text"
msgstr "(`sentence += '!'` என்பது `sentence = sentence + '!'` என்பதை நினைவில் கொள்ளுங்கள்)\n"
"\n"
"`excited = True` என்பதை `excited = False` என மாற்றி, வேறுபாடு என்ன என்பதைப் பார்க்க நிரலை மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#IntroducingIfStatements
#. 
#.     # __code0__:
#.     sentence = 'Hello World'
#.     excited = False
#.     confused = True
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.confused
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.sentence
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.excited
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Hello+World%27
#: 
msgid "pages.IntroducingIfStatements.steps.excited_confused_exercise.text"
msgstr "ஒரு பயிற்சிக்கான நேரம். கூடுதல் பூலியன் வாதம் `confused` சேர்க்க மேலே உள்ள நிரலை மாற்றவும், \n"
"எனவே நிரல் இப்படித் தொடங்க வேண்டும்:\n"
"\n"
"__code0__\n"
"\n"
" (`sentence` எந்த சரமாகவும் இருக்கலாம் மற்றும் இரண்டு பூலியன்களும் `True` அல்லது `False` ஆக இருக்கலாம்) \n"
"\n"
"`confused` என்பது உண்மை எனில், அச்சிடப்பட்ட வாக்கியத்தின் முடிவில் ஒரு கேள்விக்குறி சேர்க்கப்பட வேண்டும்.\n"
"`confused` மற்றும் `excited` இரண்டும் உண்மையாக இருந்தால், வாக்கியம் `!?` என்று முடிவடைய வேண்டும்."

#. https://futurecoder.io/course/#IntroducingIfStatements
#: 
msgid "pages.IntroducingIfStatements.steps.final_text.text"
msgstr "நல்லது! நீங்கள் `excited` மற்றும் `confused` ஆகியவற்றை எவ்வாறு இணைக்கிறீர்கள் என்பதைப் பொறுத்து இந்தத் திட்டம் 4 வெவ்வேறு செயல்கள் செய்ய முடியும். \n"
"நீங்கள் விரும்பினால் அவற்றை முயற்சிக்கவும்."

#. https://futurecoder.io/course/#CombiningCompoundStatements
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.text"
msgstr "`for` சுழல்கள் மற்றும் `if` அறிக்கைகள் போன்ற கூட்டு அறிக்கைகள் உள் அறிக்கைகளின் பட்டியலான உடல்களைக் கொண்டுள்ளன. அந்த உள் அறிக்கைகள் மற்ற கூட்டு அறிக்கைகள் உட்பட எதுவாகவும் இருக்கலாம். `if` அறிக்கையின் உள்ளே `for` சுழல் உதாரணம், நீங்கள் *உண்மையில்* உற்சாகமாக இருப்பதைக் காட்ட விரும்பும்போது இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CombiningCompoundStatements
#. 
#.     # __code0__:
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     new_sentence = ''
#.     for char in sentence:
#.         new_sentence += char
#.         if excited:
#.             new_sentence += '!'
#. 
#.     sentence = new_sentence
#.     print(sentence)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.sentence
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.excited
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.new_sentence
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Hello+World%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#: 
msgid "pages.CombiningCompoundStatements.steps.final_text.text"
msgstr "`if` அறிக்கையின் (4 வரிகள்) வழக்கம் போல் உள்தள்ளப்பட்டதைக் கவனியுங்கள், அதே சமயம் \n"
"`for` சுழல் (1 வரி) அந்த வரிகள் ஒவ்வொரு வரியிலும் கூடுதலாக 4 இடைவெளிகளால் உள்தள்ளப்பட்டிருக்கும் \n"
"அது அந்த வரிகள் `for` சுழல் உள்ளே இருப்பதை குறிக்கும்.\n"
"உள்தள்ளலைப் பார்ப்பதன் மூலம் நிரலின் ஒட்டுமொத்த அமைப்பை நீங்கள் காணலாம்.\n"
"\n"
"மாற்றாக, நீங்கள் ஒரு `for` க்குள் `if` ஐ வைக்கலாம்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"இந்த இரண்டு நிரல்களும் ஒரே முடிவைக் கொண்டுள்ளன. இருப்பினும் முதல் ஒன்று மிகவும் திறமையானது, \n"
"ஏனெனில் அது தேவைப்பட்டால் மட்டுமே சரத்தின் மேல் சுழலும், ஏனெனில் `excited = False` எதுவும் மாறாது."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail.text"
msgstr "இந்த நிரலை இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail_snoop.text"
msgstr "நிகழ்ச்சிகள் சிக்கலாகத் தொடங்குகின்றன!\n"
"நிரல்களைப் புரிந்துகொள்ள உதவும் புதிய கருவியை அறிமுகப்படுத்த வேண்டிய நேரம் இது.என்ன நடக்கிறது என்பதைக் காட்டும் அதே நிரலை இயக்க `snoop` பொத்தானைக் சொடுக்கவும்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_first_character.text"
msgstr "அருமை! முனையத்தின் மேற்பகுதிக்கு உருட்டவும், `snoop` உங்களுக்கு என்ன காட்டுகிறது என்பதைக் காண்போம்.\n"
"இது மிகவும் நேரடியான முறையில் தொடங்குகிறது:\n"
"\n"
"        1 | sentence = 'Hello World'\n"
"        3 | include = False\n"
"        4 | new_sentence = ''\n"
"        5 | for char in sentence:\n"
"     ...... char = 'H'\n"
"\n"
"முதல் வரிகள் கணினி இயக்கிய நிரலின் வரிகளை உங்களுக்குக் காட்டுகின்றன.\n"
"இடதுபுறத்தில் தொகுப்பானில் காணப்பட்ட வரி எண் உள்ளது.\n"
"\n"
"`for char in sentence:` இயக்குவது `char` என்ற மாறிக்கு மதிப்பை ஒதுக்குகிறது, எனவே `snoop` அந்த மதிப்பைக் காட்டுகிறது.\n"
"`......` என்று தொடங்கும் வரிகள் ஒரு புதிய மாறி அல்லது ஏற்கனவே உள்ள மாறியின் மதிப்பில் ஏற்படும் மாற்றத்தைக் குறிக்கிறது.\n"
"இத்தகைய வரிகள் தேவையற்றதாக இருக்கும்போது காட்டப்படாது, அதனால்தான் `snoop` வெளியீடு இப்படித் தொடங்காது:\n"
"\n"
"        1 | sentence = 'Hello World'\n"
"     ...... sentence = 'Hello World'\n"
"        3 | include = False\n"
"     ...... include = False\n"
"        4 | new_sentence = ''\n"
"     ...... new_sentence = ''\n"
"        5 | for char in sentence:\n"
"     ...... char = 'H'\n"
"\n"
" அடுத்த இரண்டு வரிகள்:\n"
"\n"
"        6 |     if include:\n"
"        8 |     include = True\n"
"\n"
"இங்கு முக்கியமானது எது காட்டப்படவில்லை என்பதுதான்: ஏனெனில் `include` என்பது `False`, வரி 7 (`new_sentence += char`) தவிர்க்கப்பட்டது. ஆனால், `include` என்பது `True` என அமைக்கப்பட்டதால், சுழலின் அடுத்த மறு செய்கை வேறுபட்டது:\n"
"\n"
"        5 | for char in sentence:\n"
"     ...... char = 'e'\n"
"        6 |     if include:\n"
"        7 |         new_sentence += char\n"
"     .............. new_sentence = 'e'\n"
"\n"
"`new_sentence += char` முதல் முறையாக இயங்குகிறது, மேலும் `new_sentence` மாறி புதிய மதிப்பைப் பெறுகிறது.\n"
"\n"
"இப்போது அதற்கு நேர்மாறாக நிரலை மாற்றவும்: முதல் எழுத்தை மட்டும் அச்சிடவும், மீதமுள்ளவற்றை விட்டுவிடவும்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.final_text.text"
msgstr "பெரிய வேலை! நீங்கள் பெருகிய முறையில் சிக்கலான திட்டங்களுடன் பணிபுரிகிறீர்கள்."

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.first_if_else.text"
msgstr "ஒரு `if` கூற்று விருப்பமாக `else` பகுதியைக் கொண்டிருக்கலாம். இந்த உதாரணத்தை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.first_if_else_false.text"
msgstr "இப்போது முதல் வரியை `condition = False` என மாற்றி மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.if_upper_else_lower.text"
msgstr "`else` என்பதை 'அல்லது வேறு' அல்லது 'இல்லையென்றால்' என்று சொல்லுங்கள். இதன் பொருள் `if` இல் உள்ள நிபந்தனை தவறானதாக இருந்தால், \n"
"அதற்குப் பதிலாக `else` உடல் இயங்கும். \n"
"நிபந்தனை உண்மையோ பொய்யோ, இரண்டு உடல்களில் ஒன்று சரியாக இயங்கும்.\n"
"\n"
" இயக்குவதற்கு மிகவும் சிறப்பான உதாரணம்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.if_upper_else_lower_false.text"
msgstr "`sentence.upper()` என்பது இதுவரை நாம் சந்திக்காத ஒரு புதிய வகையான வெளிப்பாடு. இங்கு நடப்பது என்னவென்றால், `sentence` என்பது ஒரு சரம் மற்றும் சரங்களில் பல்வேறு *முறைகள்* உள்ளன, அவை `upper` மற்றும் `lower` உள்ளிட்ட புதிய மதிப்புகளை நீங்கள் வசதியாகக் கணக்கிட அனுமதிக்கின்றன. பெயர்கள் பெரிய எழுத்துகள் (பெரிய எழுத்துகள்) மற்றும் சிறிய எழுத்துக்கள் (சிறிய எழுத்துக்கள்) ஆகியவற்றைக் குறிக்கின்றன. `'Hello World'.upper()` என்பது `'HELLO WORLD'` என மதிப்பிடுகிறது. இது `sentence` இன் உள்ளடக்கங்களை மாற்றாது, எனவே நீங்கள் புதிய மதிப்பை மீண்டும் `sentence = sentence.upper()` உடன் ஒதுக்க வேண்டும். \n"
"\n"
"இப்போது `excited` `False` ஆக மாற்றி மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#.     # __code0__:
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     if excited:
#.         char = '!'
#.     sentence += char
#. 
#.     print(sentence)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.sentence
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.excited
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Hello+World%27
#: 
msgid "pages.IfAndElse.steps.undefined_char.text"
msgstr "இதோ ஒரு உடைந்த நிரல்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"உங்களால் சிக்கலைப் காண முடியுமா? நீங்கள் அதை இயக்கினால், எல்லாம் நன்றாக இருக்கும். என்ன தவறு நடக்கலாம்?\n"
"\n"
"கெடச்செய்பவை கீழே! நீங்கள் பிழையை கண்டுபிடித்தீர்களா?\n"
"\n"
"நீங்கள் `excited` ஐ `False` ஆக மாற்றினால் என்ன நடக்கும்?"

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.else_full_stop.text"
msgstr "`excited` என்பது உண்மையாக இருந்தால் `char` வரையறுக்கப்பட்டு எல்லாம் சரியாக இயங்கும். \n"
"ஆனால் அது தவறு எனில் `char` க்கு மதிப்பு ஒதுக்கப்படாது, எனவே அதை `sentence += char` இல் பயன்படுத்த முயற்சிப்பது தோல்வியடையும்.\n"
"\n"
" `if` உடன் `else` உட்பிரிவைச் சேர்ப்பதன் மூலம் இதைச் சரிசெய்யவும், அதனால் `excited` தவறு எனில், வாக்கியத்தின் முடிவில் ஆச்சரியக்குறிக்கு (`!`) பதிலாக முழு நிறுத்தம் (`.`) சேர்க்கப்பட வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.capitalise.text"
msgstr "சவாலுக்கான நேரம்!\n"
"\n"
"`sentence` என்ற சரம் கொடுக்கப்பட, அதே எழுத்துக்களுடன் மாற்றியமைக்கப்பட்ட பதிப்பை அச்சிடும் ஒரு நிரலை எழுதவும், அதில் முதல் எழுத்து பெரிய எழுத்தாகவும் மீதமுள்ளவை சிறிய எழுத்துக்களாகவும் இருக்க வேண்டும்.\n"
"எடுத்துக்காட்டாக, `sentence = 'hello world'` அல்லது `'HELLO WORLD'` உள்ளீடு செய்தாலும், வெளியீடு `Hello world` ஆக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.spongebob.text"
msgstr "அருமை!!!\n"
"\n"
"இன்னும் ஒரு பயிற்சி, பின்னர் நீங்கள் ஓய்வெடுக்கலாம். `sentence` கேலி செய்யும் வகையில் அச்சிடும் ஒரு நிரலை எழுதவும், எ.கா: \n"
"\n"
"    OnE MoRe eXeRcIsE, aNd tHeN YoU CaN ReLaX.\n"
"\n"
"ஒவ்வொரு இரண்டாவது எழுத்தும் சிறிய எழுத்தாக இருக்க வேண்டும், மீதமுள்ளவை பெரிய எழுத்தாக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.steps.final_text.text"
msgstr "சரியானது! நீங்கள் சாதித்ததைப் பற்றி பெருமைப்பட சிறிது நேரம் ஒதுக்குங்கள். உங்கள் மூளை வளர்வதை உணர முடியுமா?"

#. https://futurecoder.io/course/#TheEqualityOperator
#: 
msgid "pages.TheEqualityOperator.steps.introducing_equality.text"
msgstr "பூலியன்களை நேரடியாக ஒதுக்காமல் பெற பல வழிகள் உள்ளன, இது மிகவும் பயனுள்ள `if` அறிக்கைகளை உருவாக்க உங்களை அனுமதிக்கிறது. குறிப்பாக இரண்டு வெளிப்பாடுகளின் மதிப்புகளை ஒப்பிடும் பல *ஒப்பீடு இயக்கிகள்* உள்ளன. இரண்டு மதிப்புகள் சமமாக உள்ளதா என்பதைச் சரிபார்க்கும் சமத்துவ இயக்கி மிகவும் பொதுவானது.\n"
"இது இரண்டு சம குறிகளால் குறிக்கப்படுகிறது: `==`. இதை இயக்க முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#TheEqualityOperator
#: 
msgid "pages.TheEqualityOperator.steps.equality_vs_assignment.text"
msgstr "நீங்கள் பார்க்கிறபடி, மதிப்புகள் சமமாக இருந்தால், சமத்துவ வெளிப்பாடு `True` என மதிப்பிடுகிறது, \n"
"இல்லையெனில் அது `False`.\n"
"\n"
" சமத்துவ இயக்கி `==` மற்றும் வேறு பொருள்களைக் கொண்ட ஒற்றை `=` ஆகியவற்றுக்கு இடையேயான வேறுபாட்டை கவனியுங்கள்,\n"
"குறிப்பாக நீங்கள் இதுவரை பார்த்தது போல் பணி அறிக்கைகளில். \n"
"முந்தைய நிரலிலிருந்து ஒற்றை `=` ஐ அகற்ற முயற்சித்தால் என்ன நடக்கும்?"

#. https://futurecoder.io/course/#TheEqualityOperator
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.TheEqualityOperator.steps.if_equals_replacing_characters.text"
msgstr "`if` கூற்றில் `==` ஐப் பயன்படுத்துவோம். இந்த நிரலில், `c` என்பது `'s'` ஆக இருக்கும் போதுதான் `if` உடல் இயங்கும். நீங்களே பாருங்கள்.\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#TheEqualityOperator
#: 
msgid "pages.TheEqualityOperator.steps.if_equals_replacing_characters_exercise.text"
msgstr "இப்போது `e` ஐ `3` ஆகவும் `a` ஐ `@` ஆகவும் மாற்ற நிரலை நீட்டிக்கவும்."

#. https://futurecoder.io/course/#TheEqualityOperator
#: 
msgid "pages.TheEqualityOperator.steps.final_text.text"
msgstr "அருமை!"

#. https://futurecoder.io/course/#IntroducingElif
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.IntroducingElif.steps.dna_example.text"
msgstr "விரைவு உயிரியல் பாடம்! உங்கள் உடலில் உள்ள பெரும்பாலான செல்கள் டிஎன்ஏவில் உங்கள் முழு மரபணுக் குறியீட்டைக் கொண்டிருக்கின்றன. இது நியூக்ளியோபேச்கள் எனப்படும் மூலக்கூறு அலகுகளின் இழைகளைக் கொண்டுள்ளது, அவை நான்கு வகைகளில் வருகின்றன: அடினைன், சைட்டோசின், குவானைன் மற்றும் தைமின் அல்லது சுருக்கமாக ACGT. எனவே ஒற்றை இழையின் ஒரு பகுதி இப்படி இருக்கலாம்: \n"
"\n"
"    AGTAGCGTCCTTAGTTACAGGATGGCTTAT...\n"
"\n"
"இது மற்றொரு இழையுடன் இணைக்கப்படும், அங்கு A க்கு பதிலாக T மற்றும் நேர்மாறாகவும், C க்கு பதிலாக G மற்றும் நேர்மாறாகவும், எ.கா: \n"
"\n"
"    TCATCGCAGGAATCAATGTCCTACCGAATA...\n"
"\n"
"இரண்டு இழைகள் பிரபலமான இரட்டை திருகுசுழல் கட்டமைப்பில் ஒன்றாக 'உள்ளடக்கு' செய்யப்படுகின்றன, பொருந்தக்கூடிய A-T மற்றும் C-G இணைகளால் இணைக்கப்படுகின்றன. செல்கள் பிரிந்து இனப்பெருக்கம் செய்யும் போது டிஎன்ஏவை நகலெடுப்பதில் இந்த இணைகள் அவசியம். \n"
"\n"
"இரட்டை திருகுசுழல் வெளிதள்ளப்பட்டு, அதன் எதிர் பதிப்பில் குறியீடு படியெடுக்கப்பட்டு நகலெடுக்கப்படும். நாங்கள் அந்த செயல்முறையை மீண்டும் செய்யப் போகிறோம். நாம் இப்போது எழுதிய அதே வகையான நிரலை முயற்சிப்போம்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingElif
#. 
#.     # __code0__:
#.     if char == 'A':
#.         char = 'T'
#.     else:
#.         if char == 'T':
#.             char = 'A'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#: 
msgid "pages.IntroducingElif.steps.dna_example_with_else.text"
msgstr "அன்பே, அது சரியாக வேலை செய்யாது. `T` ஆனது `A` ஆக மாற்றப்பட்டது ஆனால் `A` எதற்கும் மாற்றப்படவில்லை.\n"
" ஏன் என்று பார்க்க முடியுமா?\n"
"\n"
"`char == 'A'` எனும்போது, `char = 'T'` என்பது உண்மையில் இயங்கும். ஆனால், பின்வரும்\n"
"நிபந்தனையான `char == 'T'` ஐயும் கடந்து, `char = 'A'` மற்றும் நாம் தொடங்கிய இடத்திலேயே திரும்பிவிட்டோம். \n"
"தொடங்குவதற்கு `char` ஏற்கனவே `A` ஆகவில்லை என்றால், `char` ஐ `T` இலிருந்து `A` ஆக மாற்ற வேண்டும், \n"
"அதாவது `char == 'A'` என்பது `False`. நாம் அதை ஒரு `else` மூலம் செய்யலாம்: \n"
"\n"
"__code0__\n"
"\n"
"இப்போது எல்லா எழுத்துகளையும் சரியாக மாற்றுவதற்கு நிரலை சரிசெய்யவும்."

#. https://futurecoder.io/course/#IntroducingElif
#. 
#.     # __code0__:
#.     if char == 'A':
#.         char = 'T'
#.     elif char == 'T':
#.         char = 'A'
#.     elif char == 'G':
#.         char = 'C'
#.     elif char == 'C':
#.         char = 'G'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#: 
msgid "pages.IntroducingElif.steps.dna_example_with_elif.text"
msgstr "புத்திசாலித்தனம்! உங்கள் சொந்த செல்கள் தொடர்ந்து செய்து கொண்டிருப்பதை நீங்கள் பிரதிபலித்திருக்கிறீர்கள். \n"
"\n"
"`else` க்குள் உள்ள `if` ஆனது `elif` என்ற ஒற்றைச் சொல்லால் மாற்றப்படும். எடுத்துக்காட்டாக, \n"
"முந்தைய குறியீட்டை இவ்வாறு மாற்றலாம்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingElif
#. 
#.     # __code0__:
#.     if X:
#.         ...
#.     else:
#.         if Y:
#.             ...
#.         else:
#.             if Z:
#.                 ...
#.             else:
#.                 ...
#. 
#.     # __code1__:
#.     if X:
#.         ...
#.     elif Y:
#.         ...
#.     elif Z:
#.         ...
#.     else:
#.         ...
#: 
msgid "pages.IntroducingElif.steps.final_text.text"
msgstr "இந்த நிகழ்வைப் போலவே, பல உடல்களில் ஒன்றை நீங்கள் சரியாக இயக்க விரும்பினால், `elif` \n"
"உட்பிரிவுகளின் சங்கிலியை வைத்திருப்பது பொதுவானது. பொதுவாக, இது போன்ற குறியீட்டை:\n"
"\n"
"__code0__\n"
"\n"
" பின்வருமாறு மீண்டும் எழுதலாம்:\n"
"\n"
"__code1__\n"
"\n"
"இது குறுகியது மற்றும் விரும்பத்தகாத உள்ளமை உள்தள்ளலில் இருந்து உங்களைக் காப்பாற்றும். \n"
"வேறுபாடு ஒப்பனை மட்டுமே: கணினி இந்த குறியீட்டை இயக்கியவுடன், இரண்டு பதிப்புகளுக்கு இடையே உள்ள வித்தியாசத்தை அது சொல்ல முடியாது.\n"
"\n"
" `elif`(களை) விருப்பப்படி ஒரு இறுதியான `else` பின்தொடரலாம் என்பதை நினைவில் கொள்ளவும். எங்கள் டிஎன்ஏ எடுத்துக்காட்டில் ஒன்றை நாங்கள் சேர்க்கவில்லை, ஆனால் உள்ளீட்டில் ஏதேனும் எதிர்பாராத எழுத்துகள் இருந்தால் எச்சரிக்க ஒன்றைச் சேர்க்கலாம் அல்லது `elif char == 'C':` என்பதை `else:` ஆக மாற்றலாம். உள்ளீடு செல்லுபடியாகும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#: 
msgid "pages.OtherComparisonOperators.steps.try_not_equals.text"
msgstr "சமமான இயக்கி `==` க்கு நேர் எதிரானது *சமமானதல்ல* இயக்கி `!=` ஆகும். நீங்கள் கண் சிமிட்டினால், அது ≠ போல் தெரிகிறது. இரண்டு மதிப்புகள் சமமாக இல்லாதபோது அது `True` என மதிப்பிடுகிறது. ஓட்டில் உங்களுக்காக `__program__` முயற்சிக்கவும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.OtherComparisonOperators.steps.brokn_kyboard.text"
msgstr "இதோ `!=` பயன்படுத்தி ஒரு அழகான சிறிய நிரல்::\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#OtherComparisonOperators
#: 
msgid "pages.OtherComparisonOperators.steps.introducing_less_than.text"
msgstr "மற்ற எளிமையான இயக்கிகள் `<` (குறைவானது) மற்றும் `>` (அதிகமானவை). எடுத்துக்காட்டாக, `a < b` என்றால் \"`a` என்பது `b` ஐ விடக் குறைவு\". இரண்டு எண்களை ஒப்பிட, ஓட்டில் இவற்றில் ஒன்றைப் பயன்படுத்த முயற்சிக்கவும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.text"
msgstr "சரங்களை ஒப்பிடுவதற்கு இந்த இயக்கிகளைப் பயன்படுத்தலாம். நீங்கள் இரண்டு சரங்களை அகரவரிசையில் அமைத்தால், முதலாவது இரண்டாவதைவிட 'குறைவானது'. நீங்களே பாருங்கள்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#: 
msgid "pages.OtherComparisonOperators.steps.grades_example.text"
msgstr "நீங்கள் முயற்சி செய்ய, `<` செயல்பாட்டில் உள்ள உதாரணம் இதோ:\n"
"\n"
"__program_indented__\n"
"\n"
"`elif percentage < 60` என்பதற்குப் பிறகு `if percentage < 40` என்றால் \"சதவீதம் 40 க்குக் குறையாமலும் 60 க்கும் குறைவாகவும் இருந்தால்\" என்பதை நினைவில் கொள்க. எனவே இது 40 முதல் 59 வரை உள்ள அனைத்து எண்களுக்கும் அனுப்பப்படும். இதேபோல், 60 முதல் 79 வரையிலான சதவீதங்களுக்கு 'B' என்பதும், 80 மற்றும் அதற்கு மேற்பட்ட எந்த எண்ணுக்கும் 'A' என்பதும் ஆகும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#.     # __code0__:
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Alice%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.x1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.x3
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.x2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Charlie%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Bob%27
#: 
msgid "pages.OtherComparisonOperators.steps.min_three_exercise.text"
msgstr "இப்போது ஒரு பயிற்சிக்கு: `x1`, `x2` மற்றும் `x3` ஆகிய மூன்று மாறிகளை எடுத்து, சிறிய ஒன்றின் மதிப்பை அச்சிடும் ஒரு நிரலை எழுதவும். எனவே: \n"
"\n"
"__code0__\n"
"\n"
"இது `10` அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#.     # __code0__:
#.     if x1 < x2:
#.         if x1 < x3:
#.             first = x1
#.         else:
#.             first = x3
#.     else:
#.         if x2 < x3:
#.             first = x2
#.         else:
#.             first = x3
#. 
#.     print(first)
#. 
#.     # __code1__:
#.     first = x1
#. 
#.     if x2 < first:
#.         first = x2
#. 
#.     if x3 < first:
#.         first = x3
#. 
#.     print(first)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.x3
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.x2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.x1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.first
#: 
msgid "pages.OtherComparisonOperators.steps.final_text.text"
msgstr "அற்புதம்! \n"
"\n"
"இதை தீர்க்க பல வழிகள் உள்ளன. இதோ ஒரு தீர்வு: \n"
"\n"
"__code0__\n"
"\n"
"இதோ இன்னொன்று: \n"
"\n"
"__code1__\n"
"\n"
"இந்த திட்டங்கள் (உங்களுடையதும் கூட) அனைத்தும் எண்கள் மற்றும் சரங்களுடன் சமமாக வேலை செய்யும். எனவே:\n"
"\n"
"__code2__\n"
"\n"
"அகரவரிசைப்படி முதல் சரம் என்பதால் அவைகள் `Alice` ஐ அச்சிடும். \n"
"\n"
"ஒப்பிடப்பட்ட மதிப்புகள் சமமாக இருந்தால் `<` மற்றும் `>` False என மதிப்பிடுகின்றன. எடுத்துக்காட்டாக, \n"
"3 என்பது 3க்குக் குறையாதது, எனவே `3 < 3` மற்றும் `3 > 3` இரண்டும் தவறு. \n"
"சம மதிப்புகளை அனுமதிக்க, `<=` மற்றும் `>=` ஐப் பயன்படுத்தவும்.\n"
"மீண்டும், நீங்கள் கண் சிமிட்டினால், அவை ≤ மற்றும் ≥ போன்று இருக்கும்.\n"
" `=` இரண்டாவதாக வருகிறது - `=<` அல்லது `=>` போன்ற இயக்கிகள் இல்லை என்பதை நினைவில் கொள்ளவும். இதை நினைவில் கொள்ள, அவற்றை \"குறைவானது அல்லது சமமானது\" மற்றும் \"அதிகமானது அல்லது சமம்\" என உரத்த குரலில் படிக்கவும். \n"
"\n"
"சுருக்கமாக, முக்கிய ஒப்பீட்டு இயக்கிகள் `==`, `!=`, `<`, `>`, `<=` மற்றும் `>=`. \n"
"அவர்கள் என்ன செய்கிறார்கள் என்பதில் உங்களுக்கு எப்போதாவது சந்தேகம் இருந்தால், ஓட்டில் அவைகளுடன் விளையாடுங்கள்!"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.steps.first_list.text"
msgstr "*பட்டியல்கள்* எனப்படும் சக்திவாய்ந்த புதிய வகை மதிப்பைப் பற்றி அறிய வேண்டிய நேரம் இது. \n"
"இங்கே ஒரு எடுத்துக்காட்டு: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.steps.can_contain_anything.text"
msgstr "பட்டியல் என்பது பல மதிப்புகளின் *வரிசை* (வரிசைப்படுத்தப்பட்ட சேகரிப்பு/கொள்கலன்) ஆகும். \n"
"மதிப்புகள் பெரும்பாலும் *கூறுகள்* என்று குறிப்பிடப்படுகின்றன. \n"
"அவை எதுவாகவும் இருக்கலாம்: எண்கள், சரங்கள், பூலியன்கள், பட்டியல்கள் கூட! அவை வகைகளின் கலவையாகவும் இருக்கலாம். \n"
"\n"
"மேலே உள்ளதைப் போல நேரடியாக பட்டியலை உருவாக்க:\n"
"\n"
"1. சில சதுர அடைப்புக்குறிகளை எழுதவும்: `[]`\n"
"2. வெற்றுப் பட்டியலை நீங்கள் விரும்பவில்லை எனில், உறுப்புகளாக இருக்க சில வெளிப்பாடுகளை உள்ளே எழுதவும்.\n"
"3. தனிமங்களை பிரிக்க காற்புள்ளிகளை (`,`) வைக்கவும்.\n"
"\n"
" பட்டியலை உருவாக்குவதற்கான மற்றொரு எடுத்துக்காட்டு:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.steps.numbers_sum.text"
msgstr "நீங்கள் மேலே பார்த்தது போல், பட்டியல்கள் *மறு செய்பவை*, அதாவது `for சுழல்` மூலம் உறுப்புகளை ஒன்றன் பின் ஒன்றாக அணுகலாம்.\n"
" பட்டியலில் உள்ள அனைத்து எண்களையும் சேர்க்கும் நிரல் இதோ:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.steps.strings_sum.text"
msgstr "இப்போது நிரலை மாற்றவும், அது எண்களுக்குப் பதிலாக சரங்களின் பட்டியலைச் சேர்க்கும். \n"
"எடுத்துக்காட்டாக, கொடுக்கப்பட்டவை:\n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"\n"
"இது அச்சிட வேண்டும்:\n"
"\n"
"    __no_auto_translate__\n"
"    Thisisalist"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.text"
msgstr "சிறப்பானது!\n"
"\n"
"நீங்கள் விரும்பினால், இப்போது [அடுத்த பக்கம்](#BuildingNewLists) தொடரலாம். \n"
"\n"
"விருப்பமான கூடுதல் சவாலுக்கு: ஒவ்வொரு வார்த்தைக்கும் *இடையில்* பிரிப்பான் சரத்தை செருக நிரலை நீட்டிக்கவும். \n"
"எடுத்துக்காட்டாக, கொடுக்கப்பட்ட\n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"    separator = ' - '\n"
"\n"
" இப்படி வெளியிடும் படி:\n"
"\n"
"    __no_auto_translate__\n"
"    This - is - a - list"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.steps.final_text.text"
msgstr "வாழ்த்துகள்! அது மிகவும் தந்திரமாக இருந்தது! ஒரு தீர்வு இப்படி இருக்கும்: \n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"    separator = ' - '\n"
"    total = ''\n"
"    not_first = False\n"
"\n"
"    for word in words:\n"
"        if not_first:\n"
"            total += separator\n"
"        total += word\n"
"        not_first = True\n"
"\n"
"    print(total)"

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#.     # __code0__:
#.     numbers = [1, 2] + [3, 4]
#.     print(numbers)
#.     new_numbers = []
#.     new_numbers += numbers
#.     new_numbers += [5]
#.     print(new_numbers)
#. 
#.     # __code1__:
#.     numbers = [3, 1, 4, 1, 5, 9, 2, 6, 5]
#. 
#.     # __code2__:
#.     [6, 2, 8, 2, 10, 18, 4, 12, 10]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.new_numbers
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.text"
msgstr "பட்டியல்கள் மற்றும் சரங்களுக்கும் நிறைய பொதுவானவை உள்ளன. \n"
"எடுத்துக்காட்டாக, இரண்டு பட்டியல்களைச் சேர்த்து புதிய பட்டியலில் சேர்க்கலாம். \n"
"உறுப்புகள் இல்லாத வெற்று பட்டியலையும் நீங்கள் உருவாக்கலாம். \n"
"நீங்களே சரிபார்க்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
" அந்த அறிவைக் கொண்டு, எண்களின் பட்டியலை எடுத்து ஒவ்வொரு எண்ணும் இரட்டிப்பாக்கப்பட்ட பட்டியலை அச்சிடும் ஒரு நிரலை எழுதவும். எடுத்துக்காட்டாக, கொடுக்கப்பட்டவை:\n"
"\n"
"__code1__\n"
"\n"
"இது அச்சிடப்படும்:\n"
"\n"
"__code2__"

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#.     # __code2__:
#.     numbers = [3, 1, 4, 1, 5, 9, 2, 6, 5]
#. 
#.     # __code1__:
#.     some_list.append(element)
#. 
#.     # __code0__:
#.     some_list += [element]
#. 
#.     # __code3__:
#.     [9, 6]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.element
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.numbers
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.BuildingNewLists.steps.filter_numbers.text"
msgstr "நன்று!\n"
"\n"
" பட்டியலின் முடிவில் ஒற்றை உறுப்பைச் சேர்க்க விரும்பினால், அதற்குப் பதிலாக: \n"
"\n"
"__code0__\n"
"\n"
" என்று எழுதுவது மிகவும் பொதுவானது:\n"
"\n"
"__code1__\n"
"\n"
"இவற்றுக்கு இடையே உண்மையில் பெரிய வேறுபாடு இல்லை, ஆனால் `.append` என்பது பெரும்பாலான மக்களுக்கு மிகவும் பழக்கமானதாகவும் படிக்கக்கூடியதாகவும் இருக்கும். \n"
"\n"
"இப்போது ஒரு நிரலை எழுத `.append` ஐப் பயன்படுத்தவும், இது எண்களின் பட்டியலை எடுத்து 5 ஐ விட பெரிய எண்களை மட்டுமே கொண்ட புதிய பட்டியலை அச்சிட வேண்டும்.\n"
"\n"
" எடுத்துக்காட்டாக, இதை கொடுத்தால்:\n"
"\n"
"__code2__\n"
"\n"
"இதை அச்சிட வேண்டும்:\n"
"\n"
"__code3__"

#. https://futurecoder.io/course/#BuildingNewLists
#: 
msgid "pages.BuildingNewLists.steps.final_text.text"
msgstr "அற்புதம்! நாம் பெரும் முன்னேற்றம் அடைந்து வருகிறோம்."

#. https://futurecoder.io/course/#UsingBreak
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.text"
msgstr "பயிற்சி: ஒரு பட்டியலையும் மதிப்பையும் எடுத்து, பட்டியலில் மதிப்பு உள்ளதா என்பதைச் சரிபார்க்கும் நிரலை எழுதவும். எடுத்துக்காட்டாக, கொடுக்கப்பட்டவை: \n"
"\n"
"    __no_auto_translate__\n"
"    things = ['This', 'is', 'a', 'list']\n"
"    thing_to_find = 'is'\n"
"\n"
"it should print `True`, but for\n"
"\n"
"    __no_auto_translate__\n"
"    thing_to_find = 'other'\n"
"\n"
"it should print `False`."

#. https://futurecoder.io/course/#UsingBreak
#. 
#.     # __code0__:
#.     found = False
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#. 
#.     print(found)
#. 
#.     # __code1__:
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#.             break
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.found
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.things
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.thing_to_find
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.thing
#: 
msgid "pages.UsingBreak.steps.final_text.text"
msgstr "அருமை! \n"
"\n"
"ஒரு பொதுவான தீர்வு இது போல் தெரிகிறது:\n"
"\n"
"__code0__\n"
"\n"
"உங்கள் தீர்வு ஒருவேளை ஒத்ததாக இருக்கலாம். இது பரவாயில்லை, ஆனால் இது சற்று பயனற்றது. ஏனென்றால், ஆரம்பத்தில் உறுப்பைக் கண்டறிந்தாலும் அது முழுப் பட்டியலிலும் சுழலும்.\n"
"நீங்கள் ஒரு `break` அறிக்கையைப் பயன்படுத்தி எந்த சுழலையும் நிறுத்தலாம்: \n"
"\n"
"__code1__\n"
"\n"
"இது சரியானதுதான் ஆனால் தேவையற்ற மறு செய்கைகளைத் தவிர்த்துவிட்டு உறுப்பைக் கண்டறிந்ததும் சரிபார்க்கிறது.\n"
"வித்தியாசத்தைக் காண `snoop` பயன்படுத்தலாம்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_subscripting.text"
msgstr "சுழல சிறந்தது, ஆனால் பெரும்பாலும் நீங்கள் அறியப்பட்ட நிலையில் பட்டியலில் இருந்து ஒரு தனிமத்தை மீட்டெடுக்க விரும்புகிறீர்கள்.\n"
"எப்படி என்பது இங்கே:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.index_error.text"
msgstr "பொதுவாக, நீங்கள் உறுப்பை `i` நிலையில் `words[i]` உடன் பெறலாம். செயல்பாடு *சந்தா* அல்லது *அட்டவணையிடுதல்* என்றும், அந்த நிலை *குறியீட்டு* என்றும் அழைக்கப்படுகிறது. \n"
"\n"
"முதல் குறியீடானது 0, 1 அல்ல என்பதை நீங்கள் கவனித்திருக்கலாம். நிரலாக்கத்தில், எண்ணுதல் 0 இல் தொடங்குகிறது. இது வித்தியாசமாகத் தெரிகிறது, ஆனால் பெரும்பாலான நிரலாக்க மொழிகள் அதைச் செய்வதுதான், மேலும் இது சிறப்பாக இருக்கும் என்று பொதுவாக ஒப்புக் கொள்ளப்படுகிறது. \n"
"\n"
"இந்த 4 உறுப்புகளின் பட்டியலில் கடைசி குறியீட்டு எண் 3. அதை விட அதிகமான குறியீட்டைப் பெற முயற்சித்தால் என்ன நடக்கும்?"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#.     # __code0__:
#.     [0, 1, 2, ..., len(words) - 2, len(words) - 1]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.words
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.text"
msgstr "அங்கே போ. `words[4]` மற்றும் அதற்கு அப்பால் இல்லை, எனவே அதை முயற்சித்தால் பிழை ஏற்படும். \n"
"அந்த முதல் நிரல் மீண்டும் மீண்டும் ஒரே விதமான செயலை செய்கிறது. பட்டியல் மற்றும் சுழலுடன் அதை மேம்படுத்துவோம்!\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.text"
msgstr "இது சற்று சிறந்தது, ஆனால் `[0, 1, 2, ...]` என்று எழுதுவது சிறப்பாகாது, குறிப்பாக அது நீளமாக இருந்தால். \n"
"உங்களுக்காக அந்தப் பகுதியைச் செய்வதற்கு `range` என்ற எளிமையான செயல்பாடு உள்ளது. \n"
"`[0, 1, 2, 3]` ஐ `range(4)` உடன் மாற்றவும், \n"
"அதாவது `indices = range(4)`."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.text"
msgstr "கொஞ்சம் பயிற்சி செய்வோம்! `things` என்ற பட்டியலும் `to_find` என்ற மதிப்பும் கொடுக்கப்பட்டால், பட்டியலில் உள்ள `to_find` என்பதன் முதல் குறியீட்டை அச்சிடவும், அதாவது \n"
"`things[i]` என்பது `to_find` என்ற மிகக் குறைந்த எண்ணான `i`. எடுத்துக்காட்டாக,\n"
"\n"
"    __no_auto_translate__\n"
"    things = ['on', 'the', 'way', 'to', 'the', 'store']\n"
"    to_find = 'the'\n"
"\n"
" உங்கள் நிரல் `1` ஐ அச்சிட வேண்டும்.\n"
"\n"
" குறைந்தபட்சம் ஒரு முறையாவது `to_find` தோன்றும் என்று நீங்கள் கருதலாம்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.text"
msgstr "நன்று! \n"
"\n"
"மூலம், அட்டவணைப்படுத்தல் மற்றும் `len()` ஆகியவை சரங்களில் வேலை செய்கின்றன. ஓட்டில் அவற்றை முயற்சிக்கவும். \n"
"\n"
"இதோ இன்னொரு பயிற்சி. சம நீளம் கொண்ட இரண்டு சரங்கள் கொடுக்கப்பட்டால், எ.கா:\n"
"\n"
"    __no_auto_translate__\n"
"    string1 = 'Hello'\n"
"    string2 = 'World'\n"
"\n"
"அவற்றை செங்குத்தாக அருகருகே அச்சிடவும், ஒவ்வொரு எழுத்துக்கும் இடையில் இடைவெளி:\n"
"\n"
"    H W\n"
"    e o\n"
"    l r\n"
"    l l\n"
"    o d"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#.     # __code0__:
#.     for i in range(len(string1)):
#.         char1 = string1[i]
#.         char2 = string2[i]
#.         print(char1 + ' ' + char2)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.string2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.string1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char2
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.text"
msgstr "நம்பமுடியாதது! \n"
"\n"
"உங்கள் தீர்வு ஒருவேளை இதுபோன்றதாக இருக்கலாம்: \n"
"\n"
"__code0__\n"
"\n"
"சரங்கள் வெவ்வேறு நீளங்களைக் கொண்டிருந்தால் இது நன்றாக வேலை செய்யாது.\n"
". உண்மையில், `string1` அல்லது `string2` நீளமாக உள்ளதா என்பதைப் பொறுத்து வெவ்வேறு வழிகளில் தவறாகப் போகிறது.\n"
" 'காணாமல் போன' எழுத்துக்களை இடைவெளிகளுடன் நிரப்புவதன் மூலம் இந்தச் சிக்கலைச் சரிசெய்வதே உங்கள் அடுத்த சவாலாகும். \n"
"\n"
"எடுத்துக்காட்டாக, இதற்கு: \n"
"\n"
"    __no_auto_translate__\n"
"    string1 = 'Goodbye'\n"
"    string2 = 'World'\n"
"\n"
"வெளியீடு:\n"
"    G W\n"
"    o o\n"
"    o r\n"
"    d l\n"
"    b d\n"
"    y\n"
"    e\n"
"\n"
"மற்றும் இதற்கு:\n"
"\n"
"    __no_auto_translate__\n"
"    string1 = 'Hello'\n"
"    string2 = 'Elizabeth'\n"
"\n"
" வெளியீடு:\n"
"\n"
"    H E\n"
"    e l\n"
"    l i\n"
"    l z\n"
"    o a\n"
"      b\n"
"      e\n"
"      t\n"
"      h"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.final_text.text"
msgstr "உங்களுக்கு இன்னும் `range` மற்றும்/அல்லது `len` வசதி இல்லை என்றால், சிறிது நேரம் பயிற்சி செய்து பரிசோதனை செய்து பாருங்கள். \n"
"நீங்கள் விரும்பினால் நீங்களே முயற்சி செய்யக்கூடிய சில எளிய பயிற்சிகள் இங்கே.\n"
"\n"
"- `1` முதல் `100`(உட்பட) வரையிலான எண்களை அச்சிடவும்.\n"
"- உங்கள் பெயரை 100 முறை அச்சிடுங்கள்.\n"
"- கடைசி வார்த்தை தவிர `words` பட்டியலில் உள்ள ஒவ்வொரு வார்த்தையையும் அச்சிடவும்\n"
"- `words` பட்டியலின் அனைத்து வார்த்தைகளையும் தலைகீழ் வரிசையில் அச்சிடவும், அதாவது கடைசி வார்த்தையை அச்சிடவும், பின்னர் இரண்டாவது கடைசி வார்த்தையை அச்சிடவும்.\n"
"- [பட்டியல்கள் ஒரு அறிமுகம் பக்கம்](#IntroducingLists), முடிவில் கூடுதல் சிக்கலை மீண்டும் பார்க்கவும்,\n"
"நீங்கள் அதை நிறைவு செய்தாலும் இல்லாவிட்டாலும் சரி. இது இப்போது `range` மற்றும் `len` மூலம் மிகவும் எளிதானது!\n"
"\n"
"நீங்கள் தயாரானதும், இன்னும் கொஞ்சம் சவாலான செயல்களுக்கு அடுத்த பக்கத்தைத் தொடரவும்."

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.print_functions.text"
msgstr "உங்கள் சொற்களஞ்சியத்தை இன்னும் விரிவுபடுத்த வேண்டிய நேரம் இது. \n"
"\n"
"`print` மற்றும் `len` ஆகியவை ***செயல்பாடுகள்***. நீங்களே பாருங்கள்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.introducing_callable.text"
msgstr "`len(things)` அல்லது `print(things)` போன்ற வெளிப்பாடு என்பது ஒரு செயல்பாட்டு ***அழைப்பாகும்*** - நீங்கள் அதை எழுதும் போது, நீங்கள் `len` அல்லது `print` செயல்பாட்டை ***அழைக்கிறீர்கள்***. இது சாத்தியம் என்றால் செயல்பாடுகள் ***அழைக்கக்கூடியது***: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.not_callable.text"
msgstr "பெரும்பாலான பொருட்களை அழைக்க முடியாது, எனவே அவற்றை அழைக்க முயற்சித்தால் பிழை ஏற்படும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.print_returns_none.text"
msgstr "`len(things)` என்ற அழைப்பில், `things` என்பது ***வாதம்***. சில நேரங்களில் நீங்கள் *** அளவுரு*** என்ற வார்த்தையையும் பார்ப்பீர்கள், இதன் பொருள் அடிப்படையில் வாதத்தைப் போன்றது. நீங்கள் செயல்பாட்டிற்கு வாதத்தை வழங்குவது போல் உள்ளது - குறிப்பாக நாங்கள் வாதம் `things` என்பது `len`க்கு அனுப்பப்பட்டது, மேலும் வாதத்தை `len` *ஏற்கிறது* அல்லது *பெறுகிறது* என்று கூறுகிறோம்.\n"
"\n"
"`len(things)` என்பது 3 போன்ற எண்ணை மதிப்பிடும், இதில் நாம் `len` 3 ஐ ***திரும்பிதந்தது*** என்று சொல்கிறோம். \n"
"\n"
"எல்லா அழைப்புகளும் எதையாவது திருப்பி அனுப்ப வேண்டும்... அது ஒன்றும் இல்லாவிட்டாலும் கூட. எடுத்துக்காட்டாக, `print`ன் பணியானது திரையில் எதையாவது காண்பிப்பதே தவிர, பயனுள்ள மதிப்பை வழங்குவதல்ல. எனவே அது பயனற்ற ஒன்றைத் தருகிறது: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.len_of_none.text"
msgstr "`None` என்பது சிறப்பான எதையும் செய்ய முடியாத ஒரு சிறப்பு 'சுழிய' மதிப்பு. இது உண்மையான பயனுள்ள மதிப்பின் பற்றாக்குறையைக் குறிக்கும் பொதுவான ஒதுக்கிடமாகும். எதையும் திரும்பப் பெற விரும்பாத செயல்பாடுகள் இயல்புநிலையாக `None` என்பதைத் தரும். `None` அல்லது `NoneType` பற்றிய பிழைச் செய்தியை நீங்கள் கண்டால், பெரும்பாலும் நீங்கள் ஒரு மாறிக்கு தவறான பொருளை ஒதுக்கியுள்ளீர்கள் என்று பொருள்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.methods_of_str.text"
msgstr "ஒரு ***முறை*** என்பது ஒரு வகையைச் சேர்ந்த ஒரு செயல்பாடாகும், மேலும் அந்த வகையின் அனைத்து மதிப்புகளிலும் `.`ஐப் பயன்படுத்தி அழைக்கலாம்.எடுத்துக்காட்டாக, `upper` மற்றும் `lower` என்பது சரங்களின் முறைகள், அவை சரம் மாறிகள் (அல்லது மாறிலிகள்) மூலம் அழைக்கப்படுகின்றன.அதாவது `word.upper()`. பின்வரும் குறியீட்டை முயற்சி செய்யவும் :\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.no_append_for_str.text"
msgstr "மற்றொரு உதாரணம், `append` என்பது பட்டியல்களின் ஒரு முறை. ஆனால் நீங்கள் பட்டியலில் `.upper` அல்லது ஒரு சரத்தில் `.append` ஐப் பயன்படுத்த முடியாது: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.steps.final_text.text"
msgstr "பிழைச் செய்தியில் உள்ள 'attribute' என்ற சொல் `.` பயன்பாட்டைக் குறிக்கிறது - பிழை உண்மையில் ஒரு அழைப்பு கூட இல்லாமல் `word.append` என்பதிலிருந்து வருகிறது."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.append_vs_concatenate.text"
msgstr "பட்டியல்களுடன் எவ்வாறு வேலை செய்வது என்பதை மதிப்பாய்வு செய்வோம். நம்மிடம் `nums = [1, 2, 3]` என்ற பட்டியல் இருப்பதாக வைத்துக்கொள்வோம். நீங்கள் இதைப் பயன்படுத்தலாம்:\n"
"\n"
"- **`append`**: பட்டியலின் முடிவில் ஒரு உறுப்பைச் சேர்க்கவும்.\n"
"`nums.append(4)` ஆனது பட்டியலை `[1, 2, 3, 4]` ஆக மாற்றுகிறது.\n"
"- **`len`**: உறுப்புகளின் எண்ணிக்கையை வழங்குகிறது. `len(nums)` என்பது `3`.\n"
"- **`range`**: `range(n)` என்பது `0` இலிருந்து `n - 1` வரையிலான எண்களின் பட்டியலைப் போன்ற ஒரு பொருள். அதாவது அதில் `n` எண்கள் உள்ளன. குறிப்பாக, `range(len(nums))` என்பது `[0, 1, 2]` போன்றது, இவை `nums` இல் உள்ள ஒவ்வொரு தனிமத்தின் குறியீடுகளாகும்.\n"
"- **`[]` (சந்தா / அட்டவணைப்படுத்தல்)**: குறியீட்டில் மதிப்பைப் பெறுவதற்கு. `nums[0]` என்பது `1`, `nums[1]` என்பது `2`, `nums[2]` என்பது `3`.\n"
"- **`+`**: பட்டியல்களை இணைக்கிறது. `nums + [4, 5]` என்பது `[1, 2, 3, 4, 5]`. `nums.append(4)` தற்போதுள்ள `nums` பட்டியலை மாற்றியமைக்கிறது, அதே நேரத்தில் `nums + [4, 5]` மாற்றாது.\n"
"`nums + [4, 5]` இன் மதிப்பைப் பாதுகாப்பதற்கான ஒரு வழி, அதை *புதிய மாறிக்கு* ஒதுக்குவதாகும்.\n"
"பின்வரும் குறியீட்டை இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     some_list[index] = new_value
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.new_value
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.index
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_predict.text"
msgstr "நீங்கள் பார்க்கிறபடி, `+` ஆனது `nums` மாற்றாது, ஆனால் `append` செய்கிறது. \n"
"\n"
"இதோ சில புதிய பொருட்கள்.\n"
"\n"
"**`subscript assignment`**: தொடரியல் ஐப் பயன்படுத்தி ஒரு குறியீட்டில் மதிப்பை அமைக்கவும் (முன்பு இருந்த மதிப்பை மாற்றவும்) \n"
"\n"
"__code0__\n"
"\n"
"`index` என்பது `some_list` இன் செல்லுபடியான அட்டவணையாக இல்லையெனில் பிழையை எழுப்பும். எடுத்துக்காட்டாக, இந்த நிரலை இயக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     some_list.index(value)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.value
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.index_predict_exercise.text"
msgstr "**`index`**: பின்வரும் தொடரியல் பயன்படுத்தி பட்டியலில் உள்ள மதிப்பின் முதல் குறியீட்டை வழங்குகிறது \n"
"\n"
"__code0__\n"
"\n"
"மதிப்பு இல்லை என்றால் பிழையை எழுப்பும். எடுத்துக்காட்டாக, ஓட்டில் இந்த வரியை இயக்கவும்: \n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     some_list.pop(index)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.index
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_predict_exercise.text"
msgstr "**`pop`**:பின்வரும் தொடரியலைப் பயன்படுத்தி கொடுக்கப்பட்ட *குறியீட்டில்* உள்ள ஒரு உறுப்பை அகற்றி, திருப்பித் தருகிறது. \n"
"\n"
"__code0__\n"
"\n"
"வாதம் இல்லாமல், அதாவது `some_list.pop()`, அது கடைசி உறுப்பை அகற்றி திருப்பித் தரும்.\n"
"`index` என்பது `some_list` இன் செல்லுபடியாகும் அட்டவணையாக இல்லையெனில் பிழையை எழுப்பும். எடுத்துக்காட்டாக, இந்த நிரலை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     some_list.remove(value)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.value
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_predict_exercise.text"
msgstr "**`remove`**:பின்வரும் தொடரியலைப் பயன்படுத்தி கொடுக்கப்பட்ட *மதிப்பின்* முதல் நிகழ்வை நீக்குகிறது \n"
"\n"
"__code0__\n"
"\n"
"மதிப்பு பட்டியலில் இல்லை என்றால் பிழையை எழுப்புகிறது. எடுத்துக்காட்டாக, இந்த நிரலை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     x[len(x)] = x[0]
#.     x[len(x) - 1] = x[0]
#.     x[len(x) + 1] = x[0]
#.     x + x[0]
#.     [x] + x[0]
#.     x + [x[0]]
#.     [x] + [x[0]]
#.     x + x.pop(0)
#.     [x] + x.pop(0)
#.     x + [x.pop(0)]
#.     [x] + [x.pop(0)]
#.     x.pop(x.append(0))
#.     x.append(x.pop(0))
#.     x.append(x[0])
#.     x.append(x.index(0))
#.     x.index(x.append(0))
#.     x.pop(x.index(0))
#.     x.index(x.pop(0))
#. 
#.     # __code1__:
#.     x = ['a', 'b', 'c']
#.     (insert_one_line_from_above)
#.     print(x)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.insert_one_line_from_above
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.text"
msgstr "இப்போது நீங்கள் இந்த கருத்துகளை உள்ளடக்கிய நான்கு குறுகிய பயிற்சிகளைத் தீர்ப்பீர்கள்.\n"
"குறியீடுகளின் சரியான மற்றும் தவறான வரிகள் ஒன்றாகக் கலந்த பட்டியல் கீழே உள்ளது.\n"
"வரவிருக்கும் ஒவ்வொரு பயிற்சியும் கீழே உள்ள வரிகளில் ஒன்றை உள்ளடக்கிய ஒரு தீர்வைக் கொண்டுள்ளது,\n"
"மேலும் நீங்கள் பட்டியலிலிருந்து சரியான வரியைக் கண்டுபிடிக்க வேண்டும்.\n"
"\n"
"__code0__\n"
"\n"
"இங்கே ஒரு முழுமையடையாத நிரல்:\n"
"\n"
"    __copyable__\n"
"__code1__\n"
"\n"
"மேலே உள்ள பட்டியலில் இருந்து ஒரு வரியுடன் நடு வரியை மாற்றவும். இறுதி நிரல் முதல் உறுப்பை இறுதிக்கு நகர்த்துவதற்கு `x` ஐ மாற்ற வேண்டும், அதனால் அது `['b', 'c', 'a']` என அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     x = ['a', 'b', 'c']
#.     (insert_one_line_from_above)
#.     print(x)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.insert_one_line_from_above
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.text"
msgstr "நல்ல வேலை. அடுத்த பயிற்சிக்கு, அதே முழுமையற்ற நிரலுடன் தொடங்கவும்: \n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"முதல் உறுப்புடன் `x` இன் கடைசி உறுப்பை மேலெழுதும் பட்டியலிலிருந்து குறியீட்டின் வரியைத் தேர்வுசெய்யவும், \n"
"எனவே இப்போது அது `['a', 'b', 'a']` அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     x = ['a', 'b', 'c']
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.insert_one_line_from_above
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.text"
msgstr "சிறப்பானது!\n"
"\n"
"`x[len(x) - 1]` வழியாக கடைசி உறுப்புடன் வேலை செய்வது சற்று சிரமமானது என்பதை நீங்கள் உணரலாம்.\n"
"இதையே `x[-1]` மூலம் அடையலாம். \n"
"இதேபோல், இரண்டாவது முதல் கடைசி உறுப்பு `x[len(x) - 2]` ஐ `x[-2]` என எழுதலாம்.\n"
"பைதான் நம்மை பின்னோக்கி எண்ணுவதற்கு அனுமதிக்கிறது, கடைசி உறுப்பில் `-1`:\n"
"\n"
"| குறியீட்டு    | முதல் உறுப்பு | இரண்டாம் உறு.| மூன்றாம் உறுப்பு| ... | கடைசி 2வது உறுப்பு | கடைசி உறுப்பு|\n"
"|-----------|------------|-------------|-------------|-----|------------------|------------|\n"
"| முன்னோக்கி | `0`        | `1`         | `2`         | ... | `len(x) - 2`     |`len(x) - 1`|\n"
"| பின்னோக்கி | `-len(x)`  |`-len(x) + 1`|`-len(x) + 2`| ... | `-2`             |  `-1`      |\n"
"\n"
"அடுத்த பயிற்சி:\n"
"\n"
"இந்த முறை, `x` பட்டியலை மாற்றுவதற்குப் பதிலாக, புதிய பட்டியலை உருவாக்குவீர்கள் `y`:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
" `y` என்பது `x` போலவே இருக்க வேண்டும், ஆனால் கடைசியில் மீண்டும் மீண்டும் முதல் உறுப்பு இருக்க வேண்டும். \n"
"எனவே நிரல் `['a', 'b', 'c', 'a']` அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#.     # __code0__:
#.     x = [1, 2, 0, 3]
#.     x.remove(0)
#.     print(x)
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.text"
msgstr "பெரிய வேலை. இப்போது இறுதிப் பயிற்சி:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"நடு வரியான `x.remove(0)` ஐ அதே காரியத்தைச் செய்யும் பட்டியலிலிருந்து ஒரு வரியுடன் மாற்றவும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.final_text.text"
msgstr "பெரிய வேலை!"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     sorted(some_list)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sorted_predict_exercise.text"
msgstr "இங்கே இன்னும் சில பயனுள்ள செயல்பாடுகள்/முறைகள் உள்ளன.\n"
"\n"
"**`sorted`**:பின்வரும் தொடரியல் பயன்படுத்தி, ஒரு மறு செய்பவை எடுத்து சிறியது முதல் பெரியது வரை உறுப்புகளை வரிசைபடுத்தி வழங்குகிறது\n"
"\n"
"__code0__\n"
"\n"
"எடுத்துக்காட்டாக, ஓட்டில் இந்த வரியை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     value in some_list
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.value
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.in_predict_exercise.text"
msgstr "**`in`**:பின் வரும் தொடரியலைப் பயன்படுத்தி, மதிப்பானது பட்டியலில் உள்ளதா என்பதைச் சரிபார்க்கும் ஒப்பீட்டு இயக்கி.\n"
"\n"
"__code0__\n"
"\n"
"எடுத்துக்காட்டாக, இந்த நிரலை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     sum(some_list)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sum_predict_exercise.text"
msgstr "**`sum`**: பின்வரும் தொடரிலைப் பயன்படுத்தி ஒரு எண்களை கொண்ட மறு செய்பவை உறுப்புகளை சேர்த்து மதிப்பை வழங்குகிறது\n"
"\n"
"__code0__\n"
"\n"
"எடுத்துக்காட்டாக, ஓட்டில் இந்த வரியை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     some_list.count(value)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.value
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.some_list
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_predict_exercise.text"
msgstr "**`count`**: பின் வரும் தொடரியலைப் பயன்படுத்தி பட்டியலில் எத்தனை முறை வாதம் தோன்றும் என்பதை வழங்குகிறது\n"
"\n"
"__code0__\n"
"\n"
"எடுத்துக்காட்டாக ஓட்டில் இந்த வரியை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     sum(len(x))
#.     sum(range(x))
#.     sum(range(len(x)))
#.     sum(len(range(x)))
#.     sum(range(x)) + 1
#.     sum(range(x + 1))
#.     sum(x) / len(x)
#.     sum(x) / range(x)
#.     sum(x) / range(len(x))
#.     sum(x) / len(range(x))
#.     sorted(x)[1]
#.     sorted(x)[2]
#.     sorted(x)[-1]
#.     sorted(x)[-2]
#.     x.count(1) >= 0
#.     x.count(1) > 0
#.     x.count(1) > 1
#. 
#.     # __code1__:
#.     x = [1, 2, 0, 3]
#.     y = 1 in x
#.     print(y)
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum.text"
msgstr "உங்கள் பயிற்சிகளிலிருந்து இவற்றில் சிலவற்றை நீங்கள் அடையாளம் காணலாம். நீங்கள் இப்போது மதிப்புமிக்க அடிப்படை\n"
"திறன்களைக் கற்றுக்கொண்டதால், அந்தப் பயிற்சிகள் பொருளற்றவை அல்ல என்று நான் உங்களுக்கு உறுதியளிக்கிறேன்.எடுத்துக்காட்டாக, பட்டியலில் 5\n"
"உள்ளதா என்பதைச் சரிபார்க்க நீங்கள் `in` ஐப் பயன்படுத்தலாம், ஆனால் 5 ஐ விட பெரிய எண்ணைச் சரிபார்க்க இது போன்ற எளிதான வழி எதுவுமில்லை.\n"
"\n"
"இப்போது இந்தப் புதிய கருத்துகளை உள்ளடக்கிய நான்கு பயிற்சிகளின் மற்றொரு தொகுப்பைத் தீர்ப்பீர்கள்.\n"
"மீண்டும், குறியீட்டின் சரியான மற்றும் தவறான வரிகள் ஒன்றாக கலக்கப்படுகின்றன,\n"
"மேலும் பட்டியலிலிருந்து சரியான வரியைத் தேர்ந்தெடுக்க வேண்டும்.\n"
"\n"
"__code0__\n"
"\n"
"இங்கே ஒரு நிரல் உள்ளது:\n"
"\n"
"    __copyable__\n"
"__code1__\n"
"\n"
"`1 in x` பகுதியை மாற்றவும் (`y = ` ஐ வைத்திரு) மேலே உள்ள பட்டியலில் இருந்து ஒரு வரியில் அதையே நிறைவு செய்."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     x = [15, 12, -6, 3]
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.insert_one_line_from_above
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.average_exercise.text"
msgstr "சிறந்த வேலை! அடுத்த பயிற்சிக்கு, இந்த முழுமையற்ற நிரலுடன் தொடங்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"மேலே உள்ள பட்டியலில் இருந்து ஒரு வரியுடன் `y = `க்குப் பிறகு உள்ள பகுதியை மாற்றவும்.\n"
"இறுதி நிரல் `x` இல் உள்ள எண்களின் சராசரியை (தொழில்நுட்ப ரீதியாக *சராசரி*) அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     x = 100
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.insert_one_line_from_above
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sum_range_exercise.text"
msgstr "நல்ல வேலை! அடுத்த பயிற்சிக்கு, இந்த முழுமையற்ற நிரலுடன் தொடங்கவும்: \n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"மேலே உள்ள பட்டியலில் இருந்து ஒரு வரியுடன் `y = `க்குப் பிறகு உள்ள பகுதியை மாற்றவும்.\n"
"இறுதி நிரலானது, `1` முதல் `x` வரை அனைத்து எண்களையும் கூட்டுவதன் முடிவை அச்சிட வேண்டும், அதாவது `1 + 2 + 3 + ... + x`."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#.     # __code0__:
#.     x = [12, -6, 2, -1, 3]
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.insert_one_line_from_above
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.text"
msgstr "சிறப்பானது. கடைசியாக:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"`y = ` க்குப் பின் உள்ள பகுதியை மேலே உள்ள பட்டியலில் இருந்து ஒரு வரியுடன் மாற்றவும்.\n"
"இறுதி நிரல் `x` இல் *இரண்டாவது சிறிய மதிப்பை* அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.final_text.text"
msgstr "வாழ்த்துகள்! நீங்கள் இப்போது பட்டியல் முறைகள் மற்றும் செயல்பாடுகளில் தலைவர்!"

#. https://futurecoder.io/course/#StringMethodsUnderstandingMutation
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.string_in_step.text"
msgstr "`len` மற்றும் சந்தா ஆகியவை சரங்களைக் கொண்டு செயல்படுவதை நீங்கள் ஏற்கனவே பார்த்திருக்கிறீர்கள்.\n"
"நாம் கற்றுக்கொண்ட சில புதிய முறைகளை எழுத்துகளுக்கு மட்டுமின்றி எந்த துனைசரத்திற்கும் சரங்கள் ஆதரிக்கிறது.\n"
"எடுத்துக்காட்டாக, பின்வருவனவற்றை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#StringMethodsUnderstandingMutation
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.string_count_index.text"
msgstr "பட்டியல்களில் செய்வது போல் சரங்களில் `in` வேலை செய்கிறது! கட்டளை `True` என்று திரும்பியது, ஏனெனில் `feed the dog and the cat` என்பதில் `the` *துணைசரம்* ஆக உள்ளது.\n"
"`count` மற்றும் `index` எப்படி வேலை செய்கிறது?\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#StringMethodsUnderstandingMutation
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.mutation_string_append.text"
msgstr "மீண்டும் இந்த இரண்டு முறைகளும் பட்டியல்களில் செயல்படுவதைப் போலவே சரங்களிலும் வேலை செய்கின்றன.\n"
"`index` என்பது `'feed the dog and the cat'` என்ற நீண்ட சரத்தில் `'the'` என்ற தேடல் வார்த்தையின் \n"
"*தொடக்க அட்டவணையை* வழங்கும், இது `5` ஆகும்.\n"
"\n"
"|  0   |  1   |  2   |  3   |  4   | **5** |  6   |  7   |  8   | ...  |\n"
"| :--: | :--: | :--: | :--: | :--: | :---: | :--: | :--: | :--: | :--: |\n"
"|  f   |  e   |  e   |  d   |      | **t** |  h   |  e   |      | ...  |\n"
"\n"
"பெரும்பாலான சந்தர்ப்பங்களில், *பட்டியலை இடத்தில் மாற்றும்* (`append`, `insert`, `remove`) முறைகள் `None` என்பதைத் தருகின்றன,\n"
"மீதமுள்ள செயல்பாடுகள்/முறைகள் அசல் வாதத்தை மாற்றாமல் புதிய பயனுள்ள மதிப்பை வழங்கும்.\n"
" ஒரே விதிவிலக்கு `pop` முறை.\n"
"\n"
"ஒரு மதிப்பை நேரடியாக மாற்றுவது *மாற்றம்* என்று அழைக்கப்படுகிறது - மாற்றப்படக்கூடிய மதிப்புகளின் வகைகள் *மாற்றக்கூடியவை*,\n"
"அதே நேரம் மாற்ற முடியாதவை *மாறாதவை*. பட்டியல்கள் மாறக்கூடியவை.\n"
"சரங்கள் மாறாதவை - அவற்றில் `append` அல்லது சந்தா ஒதுக்குதல் போன்ற எந்த முறைகளும் இல்லை.\n"
"நீங்களே பாருங்கள்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#StringMethodsUnderstandingMutation
#. 
#.     # __code1__:
#.     __program_indented__
#. 
#.     # __code0__:
#.     word.lower()
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.string_lower_upper.text"
msgstr "நீங்கள் ஒரு சரத்தை மாற்ற முடியாது - நீங்கள் புதிய சரங்களை உருவாக்கி அதற்கு பதிலாக அவற்றைப் பயன்படுத்த முடியும்.\n"
"அதாவது இது ஒரு பயனற்ற கூற்றாகும்:\n"
"\n"
"__code0__\n"
"`word` மூலம் குறிப்பிடப்பட்ட சரம் மாற்றப்படவில்லை, அதற்குப் பதிலாக `word.lower()` ஒரு புதிய சரத்தை வழங்கியது, அது உடனடியாக நிராகரிக்கப்பட்டது.\n"
"`word` குறிப்பிடும் மதிப்பை நீங்கள் மாற்ற விரும்பினால், நீங்கள் மாறிக்கு ஒரு புதிய மதிப்பை ஒதுக்க வேண்டும்:\n"
"\n"
"    __copyable__\n"
"__code1__"

#. https://futurecoder.io/course/#StringMethodsUnderstandingMutation
#. 
#.     # __code0__:
#.     if word.lower() == 'yes':
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27yes%27
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.final_text.text"
msgstr "`sentence.upper()` அசல் `sentence`ஐ மாற்றாது என்பதைக் கவனிக்கவும்.\n"
"\n"
"பெரிய வெளிப்பாட்டில் உடனடியாக `word.lower()` ஐப் பயன்படுத்தலாம், எ.கா.\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.sum_list.text"
msgstr "நாம் கற்றுக்கொண்ட செயல்பாடுகளை அறிவது பயனுள்ளது, ஆனால் அவை அனைத்தையும் கற்றுக்கொள்வது எளிதானது அல்ல, மேலும் பல உள்ளன.மிக முக்கியமான திறமை, இணையத்தில் உள்ளடக்கத்தைப் பார்க்கும் திறன்.எடுத்துக்காட்டாக, மேலே உள்ள செயல்பாடுகளின் பெயர்களை நீங்கள் மறந்துவிட்டால், இணையத்தில் உலாவக்கூடிய சில பொதுவான வழிகள் இங்கே:\n"
"\n"
"- `append`\n"
"    - பைதான் பட்டியலில் உறுப்பைச் சேர்க்கும்\n"
"    - பைதான் பட்டியலின் இறுதியில் உருப்படியைச் சேர்க்கும்\n"
"- `len`\n"
"    - பைதான் பட்டியலின் அளவு\n"
"    - பைதான் பட்டியலில் உள்ள உறுப்புகளின் எண்ணிக்கை\n"
"    - பைதான் சரத்தில் எழுத்துக்களின் எண்ணிக்கை\n"
"- `sum`\n"
"    - பைதான் பட்டியல் எண்களின் கூட்டு\n"
"    - பைதான் எண்களின் மொத்தம்\n"
"- `in`\n"
"    - பைதான் பட்டியலில் மதிப்பு உள்ளதா என சரிபார்க்கவும்\n"
"    - பைதான் பட்டியலில் உறுப்பு இருந்தால்  சோதனை\n"
"- `index`\n"
"    - பைதான் தனிமத்தின் நிலையைப் பெறுக\n"
"    - பைதான் மதிப்பின் குறியீட்டைப் பெறுக,\n"
"\n"
"இப்போது இந்தத் திறனைப் பயிற்சி செய்வோம். பட்டியலில் உள்ள மதிப்பை வேறு எந்த மதிப்பையும் விட பெரியதாக வழங்கும் செயல்பாடு/முறையைக் கண்டறியவும். எடுத்துக்காட்டாக, `[21, 55, 4, 91, 62, 49]` பட்டியலைக் கொடுத்தால், அது `91` ஐ வழங்கும். நீங்கள் பதில்களை ஓட்டில் ஒரு சிறிய வெளிப்பாடாக எழுத வேண்டும். எடுத்துக்காட்டாக, நீங்கள் `sum` செயல்பாட்டைத் தேடுகிறீர்கள் என்றால், `sum([21, 55, 4, 91, 62, 49])` என்பதை எழுதலாம். சுழல் மூலம் இதை கைமுறையாக தீர்க்க வேண்டாம். நீங்கள் தேடும் செயல்பாடு முன்பு இங்கு குறிப்பிடப்படவில்லை என்பதை நினைவில் கொள்ளவும்."

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#.     # __code0__:
#.     nums = [1, 2, 3, 4, 5]
#.     nums.append(9)
#.     print(nums)
#. 
#.     # __code1__:
#.     [1, 2, 3, 4, 5, 9]
#. 
#.     # __code2__:
#.     [1, 2, 9, 3, 4, 5]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.nums
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.list_insert.text"
msgstr "நல்ல கண்டுபிடிப்பு! இன்னும் ஒன்றைச் செய்வோம். இந்த நிரலைக் கவனியுங்கள்:\n"
"\n"
"__code0__\n"
"\n"
"இது `nums` ஐ மாற்றுகிறது, இதனால் அது அச்சிடுகிறது:\n"
"\n"
"__code1__\n"
"\n"
"ஆனால் 9 இறுதியில் இருக்க விரும்பவில்லை என்று வைத்துக்கொள்வோம், அது இரண்டாவது மற்றும் மூன்றாவது உறுப்புகளுக்கு இடையில் செல்ல வேண்டும், எனவே வெளியீடு:\n"
"\n"
"__code2__\n"
"\n"
"அதைச் செய்வதற்கான சரியான செயல்பாடு/முறை அழைப்புடன் `nums.append(9)` என்ற நடு வரியை மாற்று."

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.dir_list.text"
msgstr "சரியானது!\n"
"\n"
"இது \"பைதான் பட்டியல் பயிற்சி\" போன்ற பொருள் தேடல் பயனுள்ளதாக இருக்கும், எ.கா.\n"
"\n"
"- இந்தப் பாடத்திட்டத்திற்குப் பிறகும் பட்டியல்களைப் பற்றி நீங்கள் இன்னும் குழப்பத்தில் உள்ளீர்கள் எனில்.\n"
"- நீங்கள் பட்டியல்களைப் பற்றி அறிந்து சிறிது நேரம் ஆகிவிட்டது, உங்களுக்கு நினைவூட்டல் தேவை எனில்.\n"
"- பட்டியல்களில் உள்ள சிக்கலைத் தீர்க்க நீங்கள் சிரமப்படுகிறீர்கள், மேலும் நீங்கள் அடிப்படைகளுக்குச் சென்று உங்கள் அடித்தளத்தை வலுப்படுத்த வேண்டும்.\n"
"\n"
"இணையம் இல்லாமல் தகவல்களைக் கண்டறியும் வழிகளும் உள்ளன. ஓட்டில் `__program__` ஐ முயற்சிக்கவும்."

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.final_text.text"
msgstr "`dir()` வாதத்தின் பண்புக்கூறுகளின் பட்டியலை வழங்குகிறது, அவை பெரும்பாலும் முறைகளாகும். பல `__` உடன் தொடங்கு, அதை நீங்கள் இப்போதைக்கு புறக்கணிக்கலாம் - பட்டியலின் இறுதிக்கு செல்லவும், நீங்கள் சில பழக்கமான முறைகளைக் காண்பீர்கள்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithPythonTutor
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.UnderstandingProgramsWithPythonTutor.steps.run_with_python_tutor.text"
msgstr "நிரல்களை ஆராய்வதற்கான மற்றொரு கருவியைப் பற்றி அறிய வேண்டிய நேரம் இது.\n"
"கீழே உள்ள குறியீட்டை தொகுப்பானில் நகலெடுத்து, புதிய \"Python Tutor\" பட்டனைக் சொடுக்கவும்.\n"
"பொத்தான் [pythontutor.com](http://pythontutor.com) இலிருந்து காட்சிப்படுத்தலுடன் புதிய தாவலைத் திறக்கிறது.\n"
"அங்கு நீங்கள் \"முந்தைய\" அல்லது \"அடுத்து\" பொத்தான்கள் மூலம் படிப்படியாக நிரல் மூலம் செல்லலாம் அல்லது\n"
"சறுக்கியை இடது அல்லது வலது பக்கம் இழுக்கலாம். வலதுபுறத்தில் மாறிகளின் மதிப்புகளையும் நீங்கள் பார்க்கலாம்.\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#UnderstandingProgramsWithPythonTutor
#: 
msgid "pages.UnderstandingProgramsWithPythonTutor.steps.final_text.text"
msgstr "குறியீடு இரண்டு முறை தனித்தனியாக இயங்குகிறது என்பதை நினைவில் கொள்ளவும்: ஒருமுறை இங்கே, ஒருமுறை pythontutor.com இல்.\n"
"உங்கள் திட்டத்தைப் பொறுத்து, இரண்டு ரன்களும் வெவ்வேறு முடிவுகளைத் தரலாம்."

#. https://futurecoder.io/course/#EqualsVsIs
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.EqualsVsIs.steps.two_separate_lists.text"
msgstr "பெரும்பாலும் தவறாகப் புரிந்து கொள்ளப்பட்டு பிழைகளுக்கு வழிவகுக்கும் சில தொழில்நுட்ப விவரங்களைக் கற்றுக்கொள்ள வேண்டிய நேரம் இது.\n"
"இந்த நிரலை இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#EqualsVsIs
#: 
msgid "pages.EqualsVsIs.steps.same_list.text"
msgstr "இந்த திட்டம் மிகவும் நேரடியானது மற்றும் பெரும்பாலும் உங்களுக்குத் தெரிந்த பொருட்களைக் கொண்டுள்ளது.\n"
"பட்டியல்களைக் குறிக்கும் இரண்டு மாறிகளை உருவாக்குகிறோம்.\n"
"பட்டியல்களில் ஒரே கூறுகள் உள்ளன, எனவே அவை சமம்: `list1 == list2` என்பது `True`.\n"
"\n"
"ஆனால் ஒரு புதிய ஒப்பீட்டு இயக்கி உள்ளது: `is`. இங்கே `list1 is list2` என்பது `False`.\n"
"அதாவது இரண்டு பட்டியல்கள் சமமாக இருந்தாலும்,\n"
"அவை இன்னும் இரண்டு தனித்தனி, தனித்துவமான, தனிப்பட்ட பட்டியல்களாகவே உள்ளன.\n"
"இதன் விளைவாக, நீங்கள் 4ஐ `list1` உடன் சேர்க்கும்போது, `list1` மட்டும் மாறுகிறது.\n"
"\n"
"இப்போது `list2 = [1, 2, 3]` ஐ `list2 = list1` ஆக மாற்றி, அது என்ன வித்தியாசத்தை ஏற்படுத்துகிறது என்பதைப் பார்க்கவும்."

#. https://futurecoder.io/course/#EqualsVsIs
#. 
#.     # __code0__:
#.     list2 = list1.copy()
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.list1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.list2
#: 
msgid "pages.EqualsVsIs.steps.final_text.text"
msgstr "இப்போது `list1 is list2` என்பது `True`, ஏனெனில் *ஒரே ஒரு பட்டியல் உள்ளது*, மேலும் இரண்டு மாறிகள்\n"
"`list1` மற்றும் `list2` இரண்டும் ஒரே பட்டியலைக் குறிக்கின்றன. `list1.append(4)` ஒரு பட்டியலில் சேர்க்கிறது\n"
"மற்றும் முடிவை `print(list1)` மற்றும் `print(list2)` இரண்டிலும் காணலாம், ஏனெனில் இரண்டு வரிகளும்\n"
"இப்போது ஒரே பட்டியலை அச்சிடுவதற்கான வெவ்வேறு வழிகள்.\n"
"\n"
"பைதான் ஆசிரியருடன் இரண்டு பதிப்புகளையும் இயக்க பரிந்துரைக்கிறேன், இது வித்தியாசத்தை எவ்வாறு காட்சிப்படுத்துகிறது என்பதைப் பார்க்கவும்.\n"
"இரண்டாவது வழக்கில், இரண்டு மாறிகள் இரண்டும் ஒரு பட்டியல் பொருளைக் குறிக்கும் அம்புகளைக் கொண்டுள்ளன.\n"
"\n"
"`list2 = list1` மாறிகளுக்கு இடையே நித்திய இணைப்பை உருவாக்காது. நீங்கள் ஒரு புதிய மதிப்பை\n"
"*ஏதேனும்* மாறிகளுக்கு ஒதுக்கினால், எ.கா `list1 = [7, 8, 9]`, மற்ற மாறி பாதிக்கப்படாது\n"
"மற்றும் அசல் பட்டியலை சுட்டிக்காட்டும்.\n"
"\n"
"அடிப்படையில், இது போன்ற ஒரு நிர்ணயம்:\n"
"\n"
"    list2 = <expression>\n"
"\n"
"என்பது '`<expression>` எதை மதிப்பிடுகிறதோ அதைக் குறிக்கும் மாறி `list2` ஐ உருவாக்குதல்' என்பதாகும்.\n"
"அது அந்த மதிப்பின் நகலை உருவாக்காது, அதாவது இரண்டு மாறிகளும் ஒரே பட்டியலைச் சுட்டிக்காட்டும்.\n"
"ஆனால் நாம் முன்பே அறிந்தது போல், `list2` ஆனது `<expression>` என்பதை நினைவில் கொள்ளாது, மதிப்பு மட்டுமே.\n"
"இது மற்ற மாறிகள் பற்றி தெரியாது.\n"
"\n"
"நீங்கள் `copy` முறையில் ஒரு பட்டியலை நகலெடுக்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"இது நிரலை மீண்டும் முதல் பதிப்பைப் போல் செயல்பட வைக்கும்.\n"
"இதுபோன்ற சிக்கலை நீங்கள் சந்தித்தாலும், இந்த பொருட்களைப் புரிந்துகொள்வதில் சிக்கல் இருந்தால், [பைதான் பெயர்கள் மற்றும் மதிப்புகள் பற்றிய உண்மைகள் மற்றும் கட்டுக்கதைகள்](https://nedbatchelder.com/text/names.html) கட்டுரையைப் படிக்கவும்."

#. https://futurecoder.io/course/#ModifyingWhileIterating
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.ModifyingWhileIterating.steps.run_broken_with_python_tutor.text"
msgstr "இந்த திட்டத்தை கவனியுங்கள். இது எண்களின் பட்டியலின் மூலம் சுழன்று 10 ஐ விட சிறியவற்றை நீக்குகிறது. அல்லது குறைந்தபட்சம், அது முயற்சிக்கிறது.\n"
"பைதான் ஆசிரியர் மூலம் அதை இயக்கவும்.\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"(நினைவில் கொள்ளவும்`numbers.pop(i)`குறியீட்டு `i` இல் உள்ள `numbers` என்பதிலிருந்து உறுப்பை நீக்குகிறது)"

#. https://futurecoder.io/course/#ModifyingWhileIterating
#: 
msgid "pages.ModifyingWhileIterating.steps.remove_instead_of_pop.text"
msgstr "அது இயங்கும் போது, அது 7 அல்லது 3 ஐப் பார்ப்பதைத் தெளிவாகத் தவிர்த்து, அவற்றை அகற்றாது, இறுதியில் அது மிக உயர்ந்த குறியீட்டை அணுக முயற்சிக்கும் போது தோல்வியடைகிறது. இது ஏன் நடக்கிறது என்று பார்க்க முடியுமா?\n"
"\n"
"குறியீட்டு மாறி `i` வழக்கமான மதிப்புகளான 0, 1, 2, ... மூலம் இயங்குகிறது, ஆனால் பட்டியல் மாறும்போது அவை நாம் விரும்பும் நிலைகளாக இருக்காது. எடுத்துக்காட்டாக, முதல் மறு செய்கையில் `i` என்பது 0 மற்றும் `number` என்பது 10 ஆகும், இது அகற்றப்படும். இது ஒரு நிலையில் இருந்து மீதமுள்ள எண்களை மாற்றுகிறது, எனவே இப்போது 7 நிலை 0 இல் உள்ளது. ஆனால் அடுத்த மறுமுறையில் `i` 1 ஆகவும், `numbers[i]` 8 ஆகவும் உள்ளது. 7 தவிர்க்கப்பட்டது.\n"
"\n"
"`pop` என்பதற்குப் பதிலாக `remove` என்பதைப் பயன்படுத்த நிரலை எழுத முயற்சி செய்யலாம், எனவே குறியீடுகளைப் பயன்படுத்த வேண்டியதில்லை. இந்த வழியில் இது இன்னும் அழகாக இருக்கிறது.\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#ModifyingWhileIterating
#. 
#.     # __code0__:
#.     for number in numbers.copy():
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.numbers
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.number
#: 
msgid "pages.ModifyingWhileIterating.steps.make_copy.text"
msgstr "ஆனால் இது ஏறக்குறைய அதையே செய்கிறது - இது ஒரு பிழையில் முடிவடையவில்லை, ஆனால் அது இன்னும் 7 அல்லது 3 ஐ அகற்றவில்லை.\n"
"அதே காரணம் தான் - ஒரு பட்டியலின் மறு செய்கை பின்னணியில் குறியீடுகள் வழியாக செல்கிறது.\n"
"\n"
"இங்குள்ள பாடம் என்னவென்றால், ***நீங்கள் ஒரு மாறியை மறுசெய்கைக்கு பயன்படுத்துபோது அதை மாற்ற வேண்டாம்***. பிறழ்வு மற்றும் சுழலவதை தனித்தனியாக வைத்திருங்கள்.\n"
"\n"
"இதைத் தீர்க்க பல வழிகள் உள்ளன என்பது நல்ல செய்தி. அதற்குப் பதிலாக, இதில் உள்ளதைப் போல, ஒரு நகல் மூலம் சுழலாம்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#ModifyingWhileIterating
#: 
msgid "pages.ModifyingWhileIterating.steps.make_copy2.text"
msgstr "இப்போது மாற்றியமைக்கப்படும் பட்டியல் மற்றும் மறு செய்கை செய்யப்படும் பட்டியல் ஆகியவை தனித்தனி பொருள்கள், அவை சமமான உள்ளடக்கங்களுடன் தொடங்கினாலும் கூட.\n"
"\n"
"இதேபோல், நீங்கள் அசல் மீது சுழல் செய்து ஒரு நகலை மாற்றலாம்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#ModifyingWhileIterating
#: 
msgid "pages.ModifyingWhileIterating.steps.make_new_list.text"
msgstr "அல்லது புதிதாக ஒரு பட்டியலை உருவாக்கலாம். இந்த வழக்கில், இதேபோன்ற ஒரு செயலை நாம் ஏற்கனவே ஒரு பயிற்சியில் செய்துள்ளோம்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#ModifyingWhileIterating
#: 
msgid "pages.ModifyingWhileIterating.steps.final_text.text"
msgstr "மீண்டும் வலியுறுத்துவது, ***நீங்கள் ஒரு மாறியை மறுசெய்கைக்கு பயன்படுத்துபோது அதை மாற்ற வேண்டாம்***. உங்கள் விருப்பங்கள்: \n"
"\n"
"- ஒரு நகலை மாற்றவும் \n"
"- ஒரு நகலை மீது மறுசெய்கை செய்யவும் \n"
"- எதையும் மாற்ற வேண்டாம், அதற்கு பதிலாக புதிய பதிப்பை உருவாக்கவும்."

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#.     # __code0__:
#.     name = 'Alice'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Alice%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.text"
msgstr "நாங்கள் இதுவரை ஒற்றை மேற்கோள்களைப் பயன்படுத்தி சரங்களை வரையறுத்து வருகிறோம், இது போல்:\n"
"\n"
"__code0__\n"
"\n"
"மேற்கோள்களைப் கொண்ட ஒரு சரத்தை வரையறுக்க விரும்பினால் என்ன நடக்கும்? இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quotes.text"
msgstr "எனவே ஒற்றை மேற்கோள்களுடன் ஒரு சரத்தில் நாம் விரும்பியபடி அபோசுட்ரோபியைப் பயன்படுத்த முடியாது.\n"
"அபோச்ட்ரோஃபி ஒரு ஒற்றை மேற்கோளாகக் கணக்கிடப்படுகிறது, எனவே `'Alice'` என்ற சர வரையறையின் *மூடும் மேற்கோளாக* செயல்படுகிறது.\n"
"பின்னர் மீதமுள்ள உரை `s Diner'` தவறான தொடரியல் மற்றும் பைதான் அதை புரிந்து கொள்ளவில்லை.\n"
"\n"
"பைதான் நம்மை மற்றொரு வழியில் சரங்களை வரையறுக்க அனுமதிக்கிறது, அதற்குப் பதிலாக இரட்டை மேற்கோள்களைப் பயன்படுத்தி `\"` வரையறுக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_double_quotes_equal.text"
msgstr "மேற்கோள்கள் சரங்களுக்கான மனித குறியீட்டின் ஒரு பகுதி என்பதை நினைவில் கொள்ளுங்கள்.\n"
"அவை சரத்தின் பகுதியாக சேமிக்கப்படவில்லை.\n"
"ஓட்டில் இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.text"
msgstr "ஒற்றை அல்லது இரட்டை மேற்கோள்களால் வரையறுக்கப்பட்ட அதே சரத்தை பைதான் ஒரே மாதிரியாகக் கருதுகிறது என்பதை நீங்கள் பார்க்க முடியும்.\n"
"\n"
"இப்போது பைத்தானின் சென் இலிருந்து பின்வரும் உரையை அச்சிடும் நிரலை எழுதவும்:\n"
"\n"
"    __copyable__\n"
"    Special cases aren't special enough to break the rules.\n"
"\n"
"நிரல் `print()` ஐப் பயன்படுத்தி ஒற்றை வரியாக இருக்க வேண்டும், மாறிகள் இல்லாமல்."

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.text"
msgstr "சிறப்பானது!\n"
"\n"
"இப்போது பின்வரும் மேற்கோளை சரியாக அச்சிடவும் (இரட்டை மேற்கோள்கள் உட்பட):\n"
"\n"
"    __copyable__\n"
"    \"Talk is cheap. Show me the code.\" - Linus Torvalds\n"
"\n"
"இந்த நிரல் `print()` ஐப் பயன்படுத்தி ஒற்றை வரியாக இருக்க வேண்டும், மாறிகள் இல்லை."

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.final_text.text"
msgstr "நல்ல வேலை!\n"
"\n"
"பெரும்பாலான சந்தர்ப்பங்களில், உங்கள் சரங்களை வரையறுக்க ஒற்றை அல்லது இரட்டை மேற்கோள்களைப் பயன்படுத்தலாம், நீங்கள் விரும்பும்படி.\n"
"ஆனால், உங்கள் சரத்தில் `'`  இருந்தால், அதை வரையறுக்க `\"` ஐப் பயன்படுத்தவும் மற்றும் நேர்மாறாகவும்."

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#.     # __code0__:
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#. 
#.     # __code1__:
#.     print(f"{name} went to {meal} with {friend}.")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22+with+%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.meal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%22%7Bname%7D+went+to+%7Bmeal%7D+with+%7Bfriend%7D.%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22+went+to+%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.friend
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22lunch%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Bob%27
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.text"
msgstr "இதுவரை நாம் `+` ஐப் பயன்படுத்தி சரங்களை இணைத்து வருகிறோம், இது போன்றது:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"இருப்பினும் இது சற்று சிரமமாக உள்ளது. *f-சரத்தைப்* பயன்படுத்தி அதையே இன்னும் நேர்த்தியாக எழுதலாம்.\n"
"மேலே உள்ள நிரலின் கடைசி வரியை கீழே உள்ள வரியுடன் மாற்றி இயக்கவும்.\n"
"சரத்திற்கு முன் `f` ஐச் சேர்த்திருப்பதை உறுதிசெய்யவும்.\n"
"\n"
"__code1__"

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.IntroducingFstrings.steps.concatenate_string_number.text"
msgstr "f-சரத்தின் தொடரியல் ஒரு `f` உடன் தொடங்கி சரத்தைத் தொடர்கிறது.\n"
"f-சரம் சுருள் அடைப்புக்குறிக்குள் `{}` மாறிகளின் பெயர்களைக் கொண்டிருக்கலாம்.\n"
"அவை சரங்களாக மாற்றப்பட்ட அந்த மாறிகளின் மதிப்புகளால் மாற்றப்படும்.\n"
"மாறிகள் எதுவாகவும் இருக்கலாம்: சரங்கள், எண்கள், பட்டியல்கள், முதலியன.\n"
"\n"
"எனவே f-சரங்கள், சரங்கள் மற்றும் எண்களை எளிதாக இணைக்க அனுமதிக்கின்றன, அவை\n"
"ஒன்றாகச் சேர்க்க(கூட்ட) முடியாது. எடுத்துக்காட்டாக, பின்வரும் நிரலை இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingFstrings
#: 
msgid "pages.IntroducingFstrings.steps.basic_f_string_exercise.text"
msgstr "`\"Hello Alice. You are \"` என்ற சரத்துக்கும் `age` எண்ணுக்கும் இடையில் `+` ஐப் பயன்படுத்த முடியாததால் இது தோல்வியடைகிறது.\n"
"\n"
"அனைத்து சரம் ஒருங்கிணைப்பையும் (+) ஒரு f-சரத்துடன் மாற்றுவதன் மூலம் இதை சரிசெய்யவும்."

#. https://futurecoder.io/course/#IntroducingFstrings
#: 
msgid "pages.IntroducingFstrings.steps.eval_expr_inside_f_string.text"
msgstr "மாறிகள் கூடுதலாக, ஒரு f-சரம் உண்மையில் சுருள் அடைப்புக்குறிக்குள் எந்த பைதான் வெளிப்பாட்டையும் கொண்டிருக்கலாம்.\n"
"ஓட்டில் இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingFstrings
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.text"
msgstr "நீங்கள் பார்க்கிறபடி, ஒரு சாதாரண சரத்தைப் போலவே இரட்டை மேற்கோள்களையும் பயன்படுத்தி f-சரம் வரையறுக்கலாம்.\n"
"மேற்கோள்களைப் போலவே, f-சரங்களும் வெறும் குறியீடாகும். அவற்றை மதிப்பீடு செய்தவுடன், ஒரு f-சரம் மதிப்பிடப்பட்டதும் கணினி மறந்துவிடுகிறது,\n"
"அது இறுதி முடிவை சாதாரண சரமாக சேமிக்கிறது.\n"
"\n"
"மிகவும் உடைந்த நிரல் இங்கே:\n"
"\n"
"    __copyable__\n"
"    people = [\"Alice\", \"Bob\", \"Charlie\"]\n"
"    print('There are' + people.length() + 'people waiting, the first one's name is' + people.1 + '.')\n"
"\n"
"இதை சரி செய்க!\n"
"`people` என்ற பெயரிடப்பட்ட எந்த சரங்களின் பட்டியலுக்கும் உங்கள் தீர்வு வேலை செய்ய வேண்டும்.\n"
"எடுத்துக்காட்டாக, மேலே உள்ள வழக்கில் அது அச்சிட வேண்டும்:\n"
"\n"
"    There are 3 people waiting, the first one's name is Alice."

#. https://futurecoder.io/course/#IntroducingFstrings
#: 
msgid "pages.IntroducingFstrings.steps.final_text.text"
msgstr "சிறப்பானது!\n"
"\n"
"இனிமேல், முடிந்தவரை உங்கள் சரங்களை உருவாக்க, `+`க்குப் பதிலாக f-சரத்தை பயன்படுத்த ஊக்குவிக்கப்படுகிறீர்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#: 
msgid "pages.IntroducingNestedLoops.steps.first_nested_loop.text"
msgstr "ஒரு `if` அல்லது சுழலின் உள்தள்ளப்பட்ட உட்பொருளானது, மேலும் `if` அறிக்கைகள் மற்றும் சுழல்கள் உட்பட எந்த வகையான அறிக்கையையும் கொண்டிருக்கலாம் என்பதை நீங்கள் பார்த்திருக்கிறீர்கள். குறிப்பாக ஒரு சுழலில் மற்றொரு சுழல் இருக்கலாம். இதோ ஒரு உதாரணம்:\n"
"\n"
"__program_indented__\n"
"\n"
"இது *உள்ளமை சுழல்கள்* எனப்படும். இதைப் பற்றி எதுவும் உண்மையில் புதியது அல்ல, அதை சரியாகப் புரிந்துகொள்வது மதிப்புக்குரியது, ஏனெனில் இது சிறப்பான நிரல்களை எழுதுவதற்கு மிகவும் பயனுள்ளதாக இருக்கும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.text"
msgstr "என்ன நடக்கிறது என்பதை நீங்கள் முழுமையாகப் புரிந்துகொள்வதை உறுதிப்படுத்திக் கொள்ளுங்கள். `print(letter)` மற்றும் `print('---')` ஒவ்வொன்றும் 3 முறை இயங்கும், ஏனெனில் அவற்றின் உள்தள்ளல் அவற்றை *வெளிப்புற சுழற்சியில்* வைக்கிறது. `print(f'{letter} {number}')` 3 × 4 = 12 முறை அழைக்கப்படுகிறது, ஏனெனில் இது *உள் சுழற்சியில்* `for number in range(4):` 4 மறு செய்கைகளைக் கொண்டுள்ளது ஆனால் அது தானே உள்ளது வெளிப்புற சுழல் 3 முறை இயங்கும்.\n"
"\n"
"இதை உபயோகப்படுத்துவோம்! நீங்கள் ஒரு ஆசிரியர் மற்றும் உங்கள் மாணவர்களுக்காக 1 முதல் 12 வரையிலான அனைத்து பெருக்கல் அட்டவணைகளையும் அச்சிட வேண்டும். நீங்கள் அவற்றை கைமுறையாக எழுத விரும்பவில்லை, ஆனால் உங்களுக்காக அதைச் செய்ய நீங்கள் ஒரு நிரலை எழுதலாம்! கோடுகளின் வரிகள் உட்பட உங்கள் நிரல் வெளியீடு இப்படி இருக்க வேண்டும்:\n"
"\n"
"    1 x 1 = 1\n"
"    1 x 2 = 2\n"
"    1 x 3 = 3\n"
"    1 x 4 = 4\n"
"    1 x 5 = 5\n"
"    1 x 6 = 6\n"
"    1 x 7 = 7\n"
"    1 x 8 = 8\n"
"    1 x 9 = 9\n"
"    1 x 10 = 10\n"
"    1 x 11 = 11\n"
"    1 x 12 = 12\n"
"    ---\n"
"    2 x 1 = 2\n"
"    2 x 2 = 4\n"
"    2 x 3 = 6\n"
"    2 x 4 = 8\n"
"    2 x 5 = 10\n"
"    2 x 6 = 12\n"
"    2 x 7 = 14\n"
"    2 x 8 = 16\n"
"    2 x 9 = 18\n"
"    2 x 10 = 20\n"
"    2 x 11 = 22\n"
"    2 x 12 = 24\n"
"    ---\n"
"    3 x 1 = 3\n"
"    3 x 2 = 6\n"
"    3 x 3 = 9\n"
"    (உங்களுக்கு எண்ணம் கிடைக்கிறது...)\n"
"    11 x 10 = 110\n"
"    11 x 11 = 121\n"
"    11 x 12 = 132\n"
"    ---\n"
"    12 x 1 = 12\n"
"    12 x 2 = 24\n"
"    12 x 3 = 36\n"
"    12 x 4 = 48\n"
"    12 x 5 = 60\n"
"    12 x 6 = 72\n"
"    12 x 7 = 84\n"
"    12 x 8 = 96\n"
"    12 x 9 = 108\n"
"    12 x 10 = 120\n"
"    12 x 11 = 132\n"
"    12 x 12 = 144\n"
"    ---"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#.     # __code0__:
#.     players = ["Alice", "Bob", "Charlie"]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Charlie%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.players
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Bob%22
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_exercise.text"
msgstr "சரியானது!\n"
"\n"
"அடுத்த பயிற்சி: சதுரங்கம் அல்லது வலைப்பந்து போன்ற விளையாட்டுக்கான போட்டியை ஏற்பாடு செய்கிறீர்கள். ஆட்டக்காரர் பெயர்களின் பட்டியல் உங்களிடம் உள்ளது:\n"
"__code0__\n"
"\n"
"ஒவ்வொரு வீரரும் மற்ற ஒவ்வொரு வீரருக்கும் எதிராக இரண்டு முறை விளையாடப் போகிறார்கள்: ஒருமுறை அவர்கள் நன்மையைப் பெற்றால் (எ.கா. நகர்த்துவதன் மூலம் அல்லது முதலில் சேவை செய்வதன் மூலம்) மற்றும் ஒரு முறை இல்லை. இது போன்ற அனைத்து போட்டி சேர்க்கைகளையும் அச்சிடவும்:\n"
"\n"
"    Alice vs Bob\n"
"    Alice vs Charlie\n"
"    Bob vs Alice\n"
"    Bob vs Charlie\n"
"    Charlie vs Alice\n"
"    Charlie vs Bob\n"
"\n"
"\"Alice vs Bob\" மற்றும் \"Bob vs Alice\" ஆகிய இரண்டும் பட்டியலில் உள்ளன, ஆனால் \"Alice vs Alice\" எதுவும் இல்லை - யாரும் தங்களுடன் விளையாடுவதை நாங்கள் விரும்பவில்லை."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#.     # __code0__:
#.     letters = "ABCD"
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22ABCD%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.letters
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.text"
msgstr "உங்கள் அடுத்த பயிற்சிக்கு, கடவுச்சொல்லை உடைக்க வேண்டும். இது சரியாக நான்கு எழுத்துக்கள் நீளம் மற்றும் சில எழுத்துக்கள் மட்டுமே சாத்தியம் என்பது உங்களுக்குத் தெரியும், நீங்கள் எழுதி வைத்துள்ளீர்கள்:\n"
"\n"
"__code0__\n"
"\n"
"நீங்கள் அனைத்து சாத்தியமான கடவுச்சொற்களையும் அச்சிட வேண்டும்:\n"
"\n"
"    AAAA\n"
"    AAAB\n"
"    AAAC\n"
"    AAAD\n"
"    AABA\n"
"    AABB\n"
"    ...சிலவற்றைத் தவிர்த்து...\n"
"    DDDA\n"
"    DDDB\n"
"    DDDC\n"
"    DDDD"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#.     # __code0__:
#.     size = 5
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.size
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.text"
msgstr "அருமை, நீங்கள் அடிப்படையில் இப்போது ஒரு குறும்பர்!\n"
"\n"
"இன்னும் ஒரு பயிற்சி. ஒரு அளவு கொடுக்கப்பட்டுள்ளது:\n"
"\n"
"__code0__\n"
"\n"
"கொடுக்கப்பட்ட அளவைப் கொண்ட பக்கங்களும் நீளமாக இருக்கும் `+` கூட்டல் குறியினால் செய்யப்பட்ட 'தலைகீழாக' முக்கோணத்தை அச்சிடவும், எ.கா:\n"
"\n"
"    +++++\n"
"    ++++\n"
"    +++\n"
"    ++\n"
"    +"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#.     # __code0__:
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Alice%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Dylan%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.players
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Charlie%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Bob%27
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.text"
msgstr "அருமை, நீங்கள் ஒரு கலைஞன்!\n"
"\n"
"நீங்கள் விரும்பினால், இப்போது [அடுத்த பக்கம்](#IntroducingBirdseye) தொடரலாம். அல்லது கூடுதல் சவாலை நீங்கள் செய்யலாம்!\n"
"\n"
"முந்தைய பயிற்சியைப் போலவே, நீங்கள் ஒரு விளையாட்டுக்கான போட்டியை ஏற்பாடு செய்கிறீர்கள். ஆட்டக்காரர் பெயர்களின் பட்டியல் உங்களிடம் உள்ளது:\n"
"\n"
"__code0__\n"
"\n"
"இந்த நேரத்தில், ஒவ்வொரு இணை ஆட்டக்காரர்களும் ஒரு முறை மட்டுமே தோன்ற வேண்டும். குறிப்பாக, `players` இல் உள்ள\n"
"அதே இடமிருந்து வல வரிசையில் இருக்கும் இணைகளை மட்டும் அச்சிடவும், `players` இல் இடதுபுறம் உள்ள நபரைக் கொண்ட\n"
"இணைகளில் தொடங்கி வலப்புறம் நகரவும். எடுத்துக்காட்டாக, மேலே உள்ளவற்றுக்கு, உங்கள் நிரல் பின்வருமாறு அச்சிட வேண்டும்\n"
"\n"
"    Charlie vs Alice\n"
"    Charlie vs Dylan\n"
"    Charlie vs Bob\n"
"    Alice vs Dylan\n"
"    Alice vs Bob\n"
"    Dylan vs Bob"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#.     # __code0__:
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Alice%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%27%7Bplayers%5Bi%5D%7D+vs+%7Bplayers%5Bj%5D%7D%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Dylan%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.players
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Charlie%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Bob%27
#: 
msgid "pages.IntroducingNestedLoops.steps.final_text.text"
msgstr "சிறப்பானது! தீர்வு இப்படி செல்கிறது:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingBirdseye
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.IntroducingBirdseye.steps.first_birdseye_example.text"
msgstr "நீங்கள் `snoop` மற்றும் பைதான் ஆசிரியர் ஆகியவற்றைப் பார்த்திருப்பீர்கள். எதிர்காலகுறியீட்டாளர் கடைசியாக, நிரல்கள் இயங்கும் போது பகுப்பாய்வு செய்வதற்கான ஒரு கருவியை அறிமுகபடுத்துகிறது அது `birdseye` எனப்படும்.\n"
"\n"
"இயக்க ஒரு எடுத்துக்காட்டு நிரல் இங்கே. அதை தொகுப்பானில் நகலெடுத்து, `birdseye` பொத்தானைக் சொடுக்கவும். இது காட்சிப்படுத்தலுடன் புதிய உலாவி தாவலைத் திறக்கும்.\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingBirdseye
#. 
#.     # __code3__:
#.     __program_indented__
#. 
#.     # __code1__:
#.     (a * b) + (c * d)
#. 
#.     # __code2__:
#.     ((a * b) + c) * d
#. 
#.     # __code0__:
#.     a * b + c * d
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.IntroducingBirdseye.steps.birdseye_loop_example.text"
msgstr "மற்ற கருவிகள் குறியீடு எவ்வாறு வரிக்கு வரியாக இயங்குகிறது மற்றும் மாறிகளின் மதிப்புகளைக் காட்டும் போது, `birdseye` ஒரு நிரலில் உள்ள ஒவ்வொரு வெளிப்பாட்டின் மதிப்பையும் காட்டுகிறது. ஒரு சிக்கலான வெளிப்பாடு எவ்வாறு சிறிய துணை வெளிப்பாடுகளாக உடைக்கப்படுகிறது\n"
"மற்றும் ஒவ்வொன்றின் மதிப்பு என்ன என்பதையும் இது பார்க்க உதவுகிறது.\n"
"\n"
"நிரலின் கடைசி வரியில் உள்ள பல்வேறு பெட்டி வெளிப்பாடுகள் மீது உங்கள் சுட்டியை நகர்த்தவும். ஒவ்வொரு பெட்டியும் முன்னிலைப்படுத்தும்போது, அதன் மதிப்பு திரையின் அடிப்பகுதியில் காட்டப்படும்.\n"
"பெட்டியைக் சொடுக்கு செய்வதன் மூலம் அது ஒரு பலகையில் ஒட்டப்படும், எனவே நீங்கள் ஒரே நேரத்தில் பல வெளிப்பாடு மதிப்புகளைக் காணலாம் மற்றும் உங்கள் சுட்டியை சுதந்திரமாக நகர்த்தலாம்.\n"
"\n"
"இந்த வழக்கில் `birdseye` என்பது அந்த வெளிப்பாடு காட்டுகிறது:\n"
"\n"
"__code0__\n"
"\n"
"ஆக உடைக்கப்பட்டுள்ளது என்பதை \n"
"\n"
"__code1__\n"
"\n"
"அதை விட\n"
"\n"
"__code2__\n"
"\n"
"வேறுவிதமாகக் கூறினால், பைதான் கணிதத்தில் இடமிருந்து வலமாக மதிப்பிடுவதை விட வழக்கமான செயல்பாடுகளின் வரிசையைப் பின்பற்றுகிறது.\n"
"\n"
"`birdseye` ஒரு பெட்டியில் வைக்காத சில வெளிப்பாடுகள் உள்ளன என்பதை நினைவில் கொள்ளவும். இந்த வழக்கில் `2`, `3`, `4`, `5`, மற்றும் `print` ஆகிய அனைத்தும் வெளிப்பாடுகளாகும், ஆனால் அவற்றின் மதிப்புகள் வெளிப்படையானவை மற்றும் பொட்டியில் செய்வது ஒழுங்கீனமாக இருக்கும்.\n"
"\n"
"முயற்சி செய்ய மிகவும் சிக்கலான உதாரணம் இங்கே:\n"
"\n"
"    __copyable__\n"
"__code3__"

#. https://futurecoder.io/course/#IntroducingBirdseye
#: 
msgid "pages.IntroducingBirdseye.steps.final_text.text"
msgstr "குறிப்பு:\n"
"\n"
"1. for சுழலுக்கு அடுத்ததாக ஒரு இணை அம்புகள் உள்ளன. நேரப்படி சுழற்சியில் செல்லவும், வெவ்வேறு மறு செய்கைகளில் என்ன நடந்தது என்பதைப் பார்க்க அவற்றைக் சொடுக்கவும்.\n"
"2. `if` காரணமாக மறு செய்கையில் இயங்காத குறியீடு சாம்பல் நிறத்தில் உள்ளது.உள்ளே உள்ள வெளிப்பாடுகளுக்கு மதிப்புகள் இல்லை, ஏனெனில் அவை மதிப்பீடு செய்யப்படவில்லை.\n"
"3. `vowels` மற்றும் `consonants` வெளிப்பாடுகளுக்குப் பதிவுசெய்யப்பட்ட மதிப்புகள் நீங்கள் எந்தப் பெட்டியைப் பார்க்கிறீர்கள் என்பதைப் பொறுத்தது. சுழலுக்குப் பின் வரும் வரிகளில், அவை எல்லா எழுத்துக்களையும் கொண்டிருக்கும், ஆனால் சுழலுக்குள் அவை சிலவற்றை மட்டுமே கொண்டிருக்கின்றன, மேலும் நீங்கள் எந்த மறு செய்கையில் இருக்கிறீர்கள் என்பதைப் பொறுத்தது.\n"
"4. `vowels.append(letter)` என்பதில், அந்த மாறிகளின் மதிப்புகள் *அந்த தருணத்தில்* இருந்தன என்பதை நீங்கள் பார்க்கலாம். அதாவது, `letter` என்பது `vowels` உடன் இணைக்கப்பட உள்ளது, ஆனால் இது இன்னும் நிகழவில்லை, எனவே `vowels` இல் `letter` இல்லை."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#.     # __code0__:
#.     strings = ["abc", "def", "ghi"]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22ghi%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22def%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22abc%22
#: 
msgid "pages.IntroducingNestedLists.steps.string_list_exercise.text"
msgstr "பயிற்சி: சரங்களின் பட்டியலைக் கொடுத்தால், பட்டியலில் உள்ள இரண்டாவது சரத்தின் முதல் எழுத்தை அச்சிடவும். எடுத்துக்காட்டாக, கொடுக்கப்பட்டவை:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"நீங்கள் `d` அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#.     # __code0__:
#.     string = strings[1]
#.     print(string[0])
#. 
#.     # __code1__:
#.     print(strings[1][0])
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.string
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting.text"
msgstr "நீங்கள் இதை இவ்வாறு தீர்த்திருக்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"ஒரு குறுகிய வழி உள்ளது. `strings[1]` என்பது மற்றதைப் போன்ற ஒரு வெளிப்பாடு, மேலும் `[0]`\n"
"போன்ற சந்தாவை மாறிகள் மட்டுமல்ல, எந்த வெளிப்பாடிலும் பயன்படுத்தலாம்.\n"
"எனவே நீங்கள் இடைநிலை மாறியைத் தவிர்த்து, அதை ஒரே வரியில் செய்யலாம்:\n"
"\n"
"__code1__\n"
"\n"
"இந்த தொடரியலை நன்றாகப் பாருங்கள். இது புதியதாகவும் ஆடம்பரமாகவும் தோன்றினால், அது இல்லை.\n"
"இது சந்தா செலுத்துவதற்கான வழக்கமான தொடரியல், இரண்டு முறை பயன்படுத்தப்பட்டது.\n"
"பைதான் அதை எப்படி சிறிய துண்டுகளாக உடைக்கிறது என்பதைப் பார்க்க, `birdseye` இல் முயற்சிக்கவும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.text"
msgstr "இந்த தொடரியல் பயன்படுத்தி, பட்டியலில் `strings` இல் கடைசி இரண்டாவது சரத்தின் கடைசி எழுத்தை அச்சிட நிரலை மாற்றவும்.\n"
"மேலே உள்ளதைப் போன்ற ஒற்றை வெளிப்பாட்டை நீங்கள் பயன்படுத்த வேண்டும், மேலும் `len` ஐப் பயன்படுத்த உங்களுக்கு அனுமதி இல்லை.\n"
"உங்கள் தீர்வு எந்த காலியாக இல்லாத சரங்களின் பட்டியலுக்கும் வேலை செய்ய வேண்டும்.\n"
"முந்தைய எடுத்துக்காட்டு உள்ளீட்டிற்கு அது `f` அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.text"
msgstr "நல்லது!\n"
"\n"
"இரண்டு முறை சந்தாவைப் பயன்படுத்துவது இன்னும் சக்திவாய்ந்ததாக இருக்கும்.\n"
"நாம் அதை சரங்களின் பட்டியலில் மட்டும் பயன்படுத்த முடியாது, ஆனால் *பட்டியல்களின் பட்டியலில்* கூட பயன்படுத்தலாம்.\n"
"எடுத்துக்காட்டாக, பின்வரும் நிரல் எதை அச்சிடுகிறது?\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingNestedLists
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.text"
msgstr "நீங்கள் பார்க்கிறபடி, பைதான் நம்மை *உள்ளமைப்பட்ட பட்டியல்களை* வைத்திருக்க அனுமதிக்கிறது: ஒவ்வொரு உறுப்பும் மற்றொரு பட்டியலாக இருக்கும் ஒரு பட்டியல் (நாங்கள் அவற்றை *துணைப்பட்டியல்கள்* என்று குறிப்பிடுகிறோம்).\n"
"\n"
"நாம் சந்தாவை இரண்டு முறைக்கு மேல் பயன்படுத்தலாம்.\n"
"மேலே உள்ளதைப் போல உள்ளமைக்கப்பட்ட பட்டியலை `strings` எடுத்து,\n"
"**இரண்டாவது துணைப்பட்டியலில் மூன்றாவது சரத்தின் முதல் எழுத்தை** அச்சிடும் ஒரு நிரலை எழுதவும்.\n"
"முந்தைய பயிற்சியைப் போலவே ஒரே ஒரு வெளிப்பாடு பயன்படுத்தவும்.\n"
"எடுத்துக்காட்டாக, மேலே உள்ள பட்டியலுக்கு, அது `y` என அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#.     # __code0__:
#.     strings[1].append("today?")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22today%3F%22
#: 
msgid "pages.IntroducingNestedLists.steps.final_text.text"
msgstr "சிறப்பானது! நீங்கள் இப்போது உள்ளமை சந்தாவை நன்றாக புரிந்துகொள்கிறீர்கள்.\n"
"\n"
"நாங்கள் ஏற்கனவே கற்றுக்கொண்ட அனைத்து பட்டியல் முறைகள் மற்றும் செயல்பாடுகளை இன்னும் பயன்படுத்தலாம்.\n"
"எடுத்துக்காட்டாக, `'you'` என்பதற்குப் பிறகு\n"
"வரும் `strings` கடைசி துணைப் பட்டியலில் `append` உடன் புதிய வார்த்தையைச் சேர்க்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"எல்லாவற்றிற்கும் மேலாக, துணைப்பட்டியல் `strings[1]` இன்னும் மற்றவற்றைப் போலவே ஒரு பட்டியலாகும்!\n"
"\n"
"அடுத்த பக்கத்தில் உள்ளமை பட்டியல்களின் மேல் சுழல செய்வது பற்றி அறிந்து கொள்வோம்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#.     # __code1__:
#.     for sublist in numbers:
#.         for num in sublist:
#.             print(num)
#.         print('---')
#. 
#.     # __code0__:
#.     numbers = [[1, 2, 3], [4, 5], [6], []]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.num
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.sublist
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.numbers
#: 
msgid "pages.LoopingOverNestedLists.steps.nested_list_nested_loop_example.text"
msgstr "உள்ளமைப்பட்ட பட்டியலின் ஒவ்வொரு உறுப்பு மற்றும் துணை உறுப்புகளின் மீது மீண்டும் மீண்டும் செய்ய உள்ளமை சுழலைப் பயன்படுத்தலாம்.\n"
"எடுத்துக்காட்டாக, இந்த உள்ளமை பட்டியலைக் கவனியுங்கள்.\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"பட்டியலை தொகுப்பானில் நகலெடுக்க பொத்தானைக் சொடுக்கு செய்து, பின்வரும் உள்ளமை சுழலில் தட்டச்சு செய்யவும்.\n"
"\n"
"__code1__\n"
"\n"
"குறியீட்டை கவனமாக பாருங்கள். வெளிப்புற சுழல் ஒரு மாறி `sublist` ஐ உருவாக்குகிறது\n"
"மற்றும் உள் சுழல் அதே மாறியில் மீண்டும் செயல்படுகிறது என்பதை நினைவில் கொள்ளவும். இது ஒரு பொதுவான முறை.\n"
"இப்போது குறியீட்டை இயக்கவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#: 
msgid "pages.LoopingOverNestedLists.steps.nested_list_loop_python_tutor.text"
msgstr "இப்போது அதே நிரலை மீண்டும் பைதான் ஆசிரியரில் இயக்கவும்.\n"
"\n"
"`numbers` எப்படி இருக்கும், மேலும் `numbers[0]` முதல் `numbers[3]` என்ன என்பதை ஆராயவும்.\n"
"`sublist` மற்றும் `num` மாறிகள் எவ்வாறு முன்னேறுகின்றன என்பதைப் பாருங்கள்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#.     # __code0__:
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22goodbye+world%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22how+are+you%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello+world%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello+there%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello%22
#: 
msgid "pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text"
msgstr "இப்போது இந்த வகையான சுழலைப் பயன்படுத்தி சில சிக்கல்களைத் தீர்க்கலாம்.\n"
"\n"
"கீழே உள்ளதைப் போன்ற சரங்களின் உள்ளமைக்கப்பட்ட பட்டியல் நம்மிடம் உள்ளது என்று வைத்துக்கொள்வோம்,\n"
"மேலும் பட்டியலுக்குள் ஆழமாக ஒரு குறிப்பிட்ட `word` ஐ தேட விரும்புகிறோம்.\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"ஒவ்வொரு துணைப்பட்டியலும் ஒரு பக்கமாகவும், உள்ள ஒவ்வொரு சரமும் அந்தப் பக்கத்தில் உள்ள ஒரு வரியாகவும்\n"
"இருக்கும் ஒரு புத்தகத்தை `strings' குறிக்கிறது என்று நீங்கள் கற்பனை செய்யலாம்.\n"
"இது ஒரு நூலகத்தையும் குறிக்கலாம், அங்கு ஒவ்வொரு பட்டியலும் ஒரு புத்தகம்,ஒவ்வொரு சரமும் ஒரு பக்கமாகும்.\n"
"\n"
"`word` உள்ள ஒவ்வொரு சரத்தையும் அச்சிட ஒரு நிரலை எழுதவும்.\n"
" இது எந்த `word` மற்றும் `strings`கும் வேலை செய்ய வேண்டும். மேலே உள்ள உதாரணத்திற்கு, இதை அச்சிட வேண்டும்.\n"
"\n"
"    hello there\n"
"    hello world\n"
"\n"
"ஒரு சரத்தில் மற்றொரு சரம் உள்ளதா என்பதைச் சரிபார்க்க ஒரு குறிப்பிட்ட வழி உள்ளது என்பதை நினைவில் கொள்ளுங்கள். எப்படி என்று உங்களுக்கு நினைவில் இல்லை என்றால், அதை இணையத்தில் தேடவும்!"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#.     # __code0__:
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#. 
#.     # __code1__:
#.     False
#.     True
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22goodbye+world%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22how+are+you%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello+world%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22goodbye%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello+there%22
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text"
msgstr "நன்று!\n"
"\n"
"இப்போது பயிற்சியை சிறிது மாற்றுவோம். இந்த நேரத்தில் எந்த உள் சரங்களை விட, எந்த *துணைப்பட்டியல்களில்* `word`\n"
"உள்ளது என்பதை வெளியீடு தெரிவிக்க வேண்டும். குறிப்பாக, ஒவ்வொரு துணைப்பட்டியலுக்கும் ஒரு பூலியனை அச்சிட விரும்புகிறோம்:\n"
"துணைப்பட்டியலில் ஏதேனும் ஒரு வார்த்தை இருந்தால் `True`, அது இல்லாவிட்டால் `False`.\n"
"\n"
"இந்த எடுத்துக்காட்டு உள்ளீடுகள் கொடுக்கப்பட்டால்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"பின்னர் உங்கள் நிரல், இதை அச்சிட வேண்டும்\n"
"\n"
"__code1__\n"
"\n"
"`word in sublist` வேலை செய்யாது. எடுத்துக்காட்டாக, `\"hello\" in [\"hello there\", \"how are you\"]` என்பது `False`,\n"
"ஏனெனில் `\"hello\"` என்பது அந்தப் பட்டியலில் உள்ள இரண்டு உறுப்புகளில் ஒன்றிற்கு *சமமாக* இல்லை, என்றாலும் அவற்றில் ஒன்றில் உள்ளது."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#.     # __code0__:
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.word
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Python%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22goodbye+world%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22how+are+you%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello+world%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22hello+there%22
#: 
msgid "pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text"
msgstr "நல்லது!\n"
"\n"
"அடுத்து, முழு உள்ளமைக்கப்பட்ட பட்டியலிலும் ஏதேனும் ஒரு சரத்தில் `word` உள்ளதா என்பதைக் குறிக்க ஒரு பூலினை மட்டும் அச்சிடவும். எடுத்துக்காட்டாக,\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"எனில் உங்கள் நிரல் `False` என அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#.     # __code0__:
#.     strings = ["abc", "def", "ghi"]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22ghi%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22def%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22abc%22
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.text"
msgstr "சிறப்பானது!\n"
"\n"
"[முன்னதாக பாடத்திட்டத்தில்](#GettingElementsAtPositionExercises) இரண்டு சரங்களை\n"
"செங்குத்தாக அருகருகே அச்சிடுவதற்கான பயிற்சி இருந்தது:\n"
"\n"
"    H W\n"
"    e o\n"
"    l r\n"
"    l l\n"
"    o d\n"
"\n"
"இப்போது நாம் இதை இரண்டு சரங்களின் பட்டியலுக்குப் பொதுமைப்படுத்தப் போகிறோம்.\n"
"\n"
"இந்த பயிற்சிக்காக உங்களுக்கு **சம நீளம்** சரங்களின் பட்டியல் கொடுக்கப்பட்டுள்ளது.\n"
"ஒவ்வொரு சரத்தின் முதல் எழுத்தையும் ஒரு வரியிலும்,\n"
"ஒவ்வொரு சரத்தின் இரண்டாவது எழுத்தையும் அடுத்த வரியிலும் அச்சிடும் நிரலை எழுதவும். எடுத்துக்காட்டாக,\n"
"\n"
"__code0__\n"
"\n"
"எனில், உங்கள் நிரல் இதை அச்சிட வேண்டும்\n"
"\n"
"    __no_auto_translate__\n"
"    adg\n"
"    beh\n"
"    cfi\n"
"\n"
"உங்கள் நிரல் அத்தகைய பட்டியலுக்கு வேலை செய்ய வேண்டும். குறிப்பாக, பின்வரும் பட்டியலைப் பயன்படுத்தினால்,\n"
"Zen of Python இலிருந்து மறைக்கப்பட்ட செய்தியைக் கண்டறியலாம்!\n"
"\n"
"    __copyable__\n"
"    __no_auto_translate__\n"
"    strings = [\"  b n\", \"f ete\", \"liths\", \"astat\", \"t ene\", \"  r d\"]\n"
"\n"
"இந்த நேரத்தில் நீங்கள் வெளியீட்டில் எழுத்துகளுக்கு இடையில் இடைவெளிகளைச் சேர்க்கக் கூடாது என்பதை நினைவில் கொள்ளவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise.text"
msgstr "சிறப்பானது! நீங்கள் விரும்பினால், இப்போது [அடுத்த பக்கம்](#DefiningFunctions) தொடரலாம்.\n"
"அல்லது கூடுதல் சவாலை நீங்கள் செய்யலாம்!\n"
"\n"
"இப்போது முந்தைய பயிற்சியை சமமற்ற நீளத்தின் சரங்களுக்கு பொதுமைப்படுத்துவோம். மீண்டும் ஒருமுறை சரங்களின் பட்டியல் கொடுக்கப்பட்டுள்ளது.\n"
"முன்பு போலவே, ஒவ்வொரு சரத்தின் முதல் எழுத்தையும் ஒரு வரியிலும்,\n"
"இரண்டாவது எழுத்துக்களை அடுத்த வரியிலும் அச்சிடும் நிரலை எழுதவும்.\n"
"ஆனால் இந்த நேரத்தில், ஒரு சரத்தில் போதுமான எழுத்துக்கள் இல்லை என்றால், அது ஒரு இடைவெளி அச்சிட வேண்டும்.\n"
"\n"
"எடுத்துக்காட்டாக,\n"
"\n"
"    __no_auto_translate__\n"
"    strings = [\"abcqwe\", \"def\", \"ghiq\"]\n"
"\n"
"எனில் உங்கள் நிரல் இதை அச்சிட வேண்டும்\n"
"\n"
"    adg\n"
"    beh\n"
"    cfi\n"
"    q q\n"
"    w\n"
"    e"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#: 
msgid "pages.LoopingOverNestedLists.steps.final_text.text"
msgstr "உள்ளமை பட்டியல்கள் மற்றும் அவற்றை உள்ளமைக்கப்பட்ட சுழல்களுடன் எவ்வாறு இணைப்பது என்பதில் நீங்கள் தேர்ச்சி பெற்றுள்ளீர்கள்.\n"
"புத்திசாலித்தனம்! இப்போது உங்கள் கருவி பொட்டில் மிகவும் சக்திவாய்ந்த நிரலாக்க கருவிகள் உள்ளன."

#. https://futurecoder.io/course/#DefiningFunctions
#: 
msgid "pages.DefiningFunctions.steps.define_greet.text"
msgstr "`print()` மற்றும் `len()` போன்ற செயல்பாடுகளை எப்படி அழைப்பது என்று பார்த்திருப்பீர்கள். மற்றவர்கள் பயன்படுத்தக்கூடிய உங்கள் செயல்பாடுகளை\n"
"எவ்வாறு எழுதுவது என்பதை இப்போது கற்றுக் கொள்ளப் போகிறீர்கள். திட்டங்கள் பெரியதாகவும் சிக்கலானதாகவும் இருப்பதால் இது மிகவும் முக்கியமானது.\n"
"\n"
"இதோ ஒரு எளிய உதாரணம்:\n"
"\n"
"__program_indented__\n"
"\n"
"இது ஒரு அளவுருவை ஏற்கும் `greet` என்ற செயல்பாட்டை வரையறுக்கிறது. வரையறைக்கு கீழே, செயல்பாட்டை இரண்டு முறை அழைக்கிறோம்.\n"
"என்ன நடக்கிறது என்பதைப் பார்க்க குறியீட்டை இயக்கவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#.     # __code0__:
#.     def greet(name):
#.         print(f"Hello {name}!")
#.         print("How are you?")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22How+are+you%3F%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%22Hello+%7Bname%7D%21%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.greet
#: 
msgid "pages.DefiningFunctions.steps.how_are_you.text"
msgstr "ஒரு செயல்பாடு வரையறை என்பது ஒரு கூட்டு அறிக்கை. `if` மற்றும் `for` போன்று, இது ஒன்று அல்லது அதற்கு மேற்பட்ட அறிக்கைகளைக்\n"
"கொண்ட உள்தள்ளப்பட்ட உள்ளடக்கத்தைத் தொடர்ந்து ஒரு தலைப்பு வரியை கொண்டுள்ளது.\n"
"\n"
"செயல்பாட்டில் மற்றொரு அறிக்கையைச் சேர்க்கவும், அது இப்படி இருக்கும்:\n"
"\n"
"__code0__\n"
"\n"
"பின்னர் நிரலை மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#.     # __code0__:
#.     name = "Alice"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#.     name = "Bob"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Bob%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%22Hello+%7Bname%7D%21%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22How+are+you%3F%22
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.text"
msgstr "நிரலின் வெளியீடு எவ்வாறு மாறியது என்பதைக் கவனியுங்கள். `How are you?` என்று இரண்டு முறை அச்சிடப்பட்டுள்ளது.\n"
"முழு நிரலையும் இதற்குச் சமமானதாக நீங்கள் நினைக்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"இது செயல்பாடுகளைப் பற்றிய மிகவும் பயனுள்ள பொருட்களில் ஒன்றைக் காட்டுகிறது. ஒரே குறியீட்டை மீண்டும் மீண்டும் பயன்படுத்தாமல் பலமுறை\n"
"பயன்படுத்த அனுமதிக்கிறது. இது ஒரு நிரலுக்குள் ஒரு நிரலை எழுதுவது போன்றது.\n"
"\n"
"ஒரு செயல்பாட்டு வரையறையின் தலைப்பு வரி எப்போதும் பின்வரும் பகுதிகளைக் கொண்டுள்ளது:\n"
"\n"
"1. சிறப்புச் சொல் `def`, அதைத் தொடர்ந்து ஒரு இடைவெளி.\n"
"2. செயல்பாட்டின் பெயர். இது ஒரு மாறி பெயர் போன்றது - நீங்கள் விரும்பும் பெயரை நீங்கள் தேர்வு செய்யலாம், ஆனால் சில கட்டுப்பாடுகள் உள்ளன,\n"
"எ.கா. இதில் இடைவெளி இருக்கக்கூடாது.\n"
"3. ஒரு இணை அடைப்புக்குறிகள் `(` மற்றும் `)`\n"
"4. அடைப்புக்குறிகளுக்கு இடையே சுழியம் அல்லது அதற்கு மேற்பட்ட அளவுரு பெயர்கள், ஒன்றுக்கு மேற்பட்டவை இருந்தால் காற்புள்ளிகளால் பிரிக்கப்படும்.\n"
"இங்கு `name` எனப்படும் ஒரு அளவுரு உள்ளது.\n"
"5. ஒரு முக்காற்புள்ளி `:`\n"
"\n"
"சில எளிய பயிற்சிகளைச் செய்வோம். செயல்பாட்டின் பெயரை `greet` என்பதிலிருந்து `say_hello` என மாற்றவும்.\n"
"முழு நிரலும் முன்பு போலவே செயல்படுவதை உறுதிப்படுத்திக் கொள்ளுங்கள், ஆனால் வேறு எதையும் மாற்ற வேண்டாம்."

#. https://futurecoder.io/course/#DefiningFunctions
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.text"
msgstr "நல்ல! இப்போது இதேபோன்ற பயிற்சியைச் செய்யுங்கள்: அளவுருவின் பெயரை `name` இலிருந்து `person_name` ஆக மாற்றவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#.     # __code0__:
#.     Hello
#.     Hello
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.Hello
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.text"
msgstr "நல்லது!\n"
"\n"
"இப்போது `print_twice` எனப்படும் உங்கள் சொந்த செயல்பாட்டை எழுதவும், இது ஒரு வாதத்தை `x` ஏற்று, அந்த வாதத்தை\n"
"இரண்டு வரிகளில் இரண்டு முறை அச்சிடுகிறது.\n"
"\n"
"எடுத்துக்காட்டாக, `print_twice(\"Hello\")` வெளியிட வேண்டும்:\n"
"\n"
"__code0__\n"
"\n"
"செயல்பாடு வரையறைக்குப் பிறகு அதை அழைப்பதன் மூலம் உங்கள் செயல்பாட்டைச் சோதிக்கலாம், ஆனால் அது தேவையில்லை."

#. https://futurecoder.io/course/#DefiningFunctions
#: 
msgid "pages.DefiningFunctions.steps.print_many.text"
msgstr "செயல்பாடுகள் பல அளவுருக்களைக் கொண்டிருக்கலாம். இங்கே ஒரு எடுத்துக்காட்டு:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#.     # __code0__:
#.     thing = "Hello"
#.     n = 3
#.     for _ in range(n):
#.         print(thing)
#. 
#.     # __code1__:
#.     def print_many(n, thing):
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.print_many
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Hello%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.thing
#: 
msgid "pages.DefiningFunctions.steps.swap_parameters.text"
msgstr "செயல்பாடு வரையறையில் அளவுருக்களைப் பிரிக்கப் பயன்படுத்தப்படும் காற்புள்ளிகள் மற்றும் செயல்பாடு அழைப்பில் உள்ள வாதங்கள்\n"
"மற்றும் வரையறைக்கும் அழைப்பிற்கும் இடையே உள்ள எழுத்து தொடர்பு:\n"
"\n"
"    def print_many(thing, n):\n"
"                     ^    ^\n"
"                     |    |\n"
"      print_many(\"Hello\", 3)\n"
"\n"
"எனவே `print_many(\"Hello\", 3)` என அழைப்பது இயங்குவது போன்றது:\n"
"\n"
"__code0__\n"
"\n"
"இப்போது மற்றொரு எளிய பயிற்சிக்கு. செயல்பாடு வரையறை தலைப்பில் உள்ள அளவுருக்களை மாற்றவும், அது இவ்வாறு கூறுகிறது:\n"
"\n"
"__code1__\n"
"\n"
"இதை நீங்கள் செய்தால், நீங்கள் ஒரு பிழையைப் பெறுவீர்கள். மீதமுள்ள நிரலை சரிசெய்யவும், அது முன்பு போலவே செயல்படும்.\n"
"*செயல்பாட்டின் உடலை மாற்ற வேண்டாம்*."

#. https://futurecoder.io/course/#DefiningFunctions
#: 
msgid "pages.DefiningFunctions.steps.final_text.text"
msgstr "சரியானது! செயல்பாடுகளை வரையறுப்பதற்கான அடிப்படைகளின் உறுதியான அடித்தளம் இப்போது உங்களிடம் உள்ளது."

#. https://futurecoder.io/course/#CallingFunctionsWithinFunctions
#: 
msgid "pages.CallingFunctionsWithinFunctions.steps.print_twice_call_print_many.text"
msgstr "ஒரு செயல்பாட்டின் உடல் செயல்பாடு அழைப்புகள் உட்பட எதையும் கொண்டிருக்கலாம். உண்மையில், நாங்கள் ஏற்கனவே print ஐ அழைப்பதன் மூலம் \n"
"அதைச் செய்துள்ளோம். ஆனால் நாம் சொந்த செயல்பாடுகளில் ஒன்றை அழைப்பது வேறுபட்டதல்ல, எனவே நம் செயல்பாடுகள் ஒன்றுக்கு ஒன்று சமம் என்று அழைக்கலாம்!\n"
"\n"
"எடுத்துக்காட்டாக, `print_many` ஐப் பயன்படுத்தி `print_twice` செயல்படுத்தலாம்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CallingFunctionsWithinFunctions
#: 
msgid "pages.CallingFunctionsWithinFunctions.steps.see_stack_in_snoop.text"
msgstr "இங்கே என்ன நடக்கிறது என்பதைப் பற்றி நன்றாகப் புரிந்துகொள்வதும், செயல்பாட்டு அழைப்புகளை எவ்வாறு\n"
"ஆராய்வது என்பதும் முக்கியம், எனவே ஒவ்வொரு பிழைத்திருத்தத்திலும் இதை முயற்சிக்கப் போகிறோம்.\n"
"\n"
"முதலில், `snoop` மூலம் நிரலை மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#CallingFunctionsWithinFunctions
#: 
msgid "pages.CallingFunctionsWithinFunctions.steps.see_stack_in_pythontutor.text"
msgstr "`snoop` ஒவ்வொரு செயல்பாட்டு அழைப்பையும் இதனுடன் தொடங்குகிறது:\n"
"\n"
"1. பதிவுகளில் ஒரு புதிய நிலை உள்தள்ளல்.\n"
"2. `>>> Call to <செயல்பாட்டின் பெயர்>`\n"
"3. வாதங்களின் மதிப்புகள்.\n"
"4. செயல்பாடு தலைப்பு வரி.\n"
"\n"
"இது அழைப்பை `<<< <function name>` இலிருந்து திரும்ப பெறுகிறது. திரும்பும் மதிப்புகள் பற்றி விரைவில் அறிந்து கொள்வோம்.\n"
"\n"
"இப்போது பைதான் ஆசிரியர் மூலம் நிரலை மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#CallingFunctionsWithinFunctions
#: 
msgid "pages.CallingFunctionsWithinFunctions.steps.see_stack_in_birdseye.text"
msgstr "ஒவ்வொரு முறையும் ஒரு செயல்பாடு அழைக்கப்படும் போது, ஒரு புதிய *சட்டம்* உருவாக்கப்பட்டது, அதில் அந்த அழைப்பில் உள்ள உள்ளூர்\n"
"மாறி மதிப்புகள் மற்றும் தற்போது என்ன நடக்கிறது என்பது பற்றிய பிற தகவல்கள் உள்ளன.\n"
"செயல்பாடு அழைப்பு முடிந்ததும், சட்டகம் நீக்கப்படும்.\n"
"\n"
"\"Frames\" என்பதன் கீழ் வலதுபுறத்தில் உள்ள பைதான் ஆசிரியரில் இதைப் பார்க்கலாம். மேலே குளோபல் சட்டம், முழு நிரலும் இயங்கும்\n"
"மேல் நிலை சட்டகம். அடுத்து என்பதைக் சொடுக்கு செய்யும்போது, புதிய சட்டங்கள் தோன்றும், பின்னர் மறைந்துவிடும்.\n"
"ஒவ்வொன்றிலும் நீங்கள் மாறிகளின் மதிப்புகளைக் காணலாம்.\n"
"\n"
"இறுதியாக, `birdseye` மூலம் நிரலை இயக்கவும்."

#. https://futurecoder.io/course/#CallingFunctionsWithinFunctions
#: 
msgid "pages.CallingFunctionsWithinFunctions.steps.final_text.text"
msgstr "`birdseye` ஒரு நேரத்தில் ஒரு சட்டத்தை (செயல்பாட்டு அழைப்பு) மட்டுமே காட்டுகிறது. முதலில் நீங்கள் உலகளாவிய சட்டத்தைப் பார்க்கிறீர்கள்.\n"
"கீழே `print_twice` என்ற அழைப்பு உள்ளது. அந்த சட்டகத்திற்குள் உங்களை அழைத்துச் செல்ல சிறிய நீல அம்புக்குறியைக் சொடுக்கு செய்து,\n"
"அடுத்ததைக் சொடுக்கு செய்து `print_many` உள் செல்லவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#: 
msgid "pages.ReturningValuesFromFunctions.steps.first_return.text"
msgstr "மதிப்புகளை அச்சிடுவதை விட, அவை *திரும்ப* செய்யும் செயல்பாடுகள் மிகவும் பயனுள்ளதாக இருக்கும். இந்த உதாரணத்தை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#: 
msgid "pages.ReturningValuesFromFunctions.steps.losing_return_value.text"
msgstr "இங்கே நாம் `double` செயல்பாட்டிற்கு `x` என்ற வாதமாக `number` (இதன் மதிப்பு `5`) மற்றும் `double` * திரும்பியது*\n"
"`x * 2`, அதாவது `5 * 2`, அதாவது `10`, இது `twice` மாறியின் மதிப்பாக மாறியது. `double` உள்ளே `return` என்ற \n"
"சிறப்புச் சொல் `double(number)` ஒரு மதிப்பைக் கொண்ட வெளிப்பாடாக ஆக்குகிறது - குறிப்பாக திரும்பப் பெற்ற மதிப்பு.\n"
"இது `twice = double(number)` என்பது `twice = number * 2` க்கு சமமானதாகும், இருப்பினும்\n"
"அது சரியாக நடக்கவில்லை.\n"
"\n"
"கவனிக்கவும், `double(number)`என்பது *`number`ஐ மாற்றவில்லை*. முடிவில், `number` இன்னும் `5` ஆக உள்ளது. மாறாக, `double(number)`\n"
"புதிய மதிப்பை வழங்கியது. திரும்பிய மதிப்பை நிரல் பயன்படுத்தியது முக்கியம், இந்த வழக்கில் அதை ஒரு மாறியில் சேமிப்பதன் மூலம்.\n"
"உடனடியாக அதை `print(double(number))` என்று அச்சிடுவதும் வேலை செய்கிறது. மறுபுறம், இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.text"
msgstr "இங்கே `double(number)` இன்னும் `10` திரும்பி தந்தது, ஆனால் நாம் அதைப் பயன்படுத்தாததால் அது தொலைந்து போனது. `number` இன்னும் `5` தான்.\n"
"\n"
"ஒரு வாதத்தை `x` எடுத்து, அந்த வாதத்தை 4 ஆல் பெருக்கி வழங்கும் `quadruple` செயல்பாட்டை எழுதவும்.\n"
"நீங்கள் `double` செயல்பாட்டை மட்டுமே பயன்படுத்த வேண்டும் - `quadruple` உடலில் நேரடியாக எண்கள் அல்லது\n"
"பெருக்கல் அனுமதிக்கப்படாது."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#.     # __code0__:
#.     def quadruple(x):
#.         x = double(x)
#.         x = double(x)
#.         return x
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.quadruple
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.double
#: 
msgid "pages.ReturningValuesFromFunctions.steps.final_text.text"
msgstr "நல்லது! இங்கே இரண்டு சாத்தியமான தீர்வுகள் உள்ளன:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#TestingFunctions
#. 
#.     # __code0__:
#.     def assert_equal(actual, expected):
#.         if actual == expected:
#.             print("OK")
#.         else:
#.             print(f"Error! {repr(actual)} != {repr(expected)}")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.actual
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22OK%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.expected
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%22Error%21+%7Brepr%28actual%29%7D+%21%3D+%7Brepr%28expected%29%7D%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.TestingFunctions.steps.introducing_assert_equal.text"
msgstr "நிரல்களை எழுதுவதில் ஒரு முக்கிய பகுதி அவை சரியாக வேலை செய்கிறது என்பதை சோதிப்பதாகும். இதை நீங்கள் கைமுறையாகச் செய்யலாம்,\n"
"எ.கா. `print(double(5))` என்பது `10`ஐ அச்சிடுகிறதா என்பதைச் சரிபார்ப்பதன் மூலம், ஆனால் இதுபோன்ற செயலால் விரைவாகச் சோர்வடையலாம்.\n"
"உங்கள் நிரல்களை சோதிக்கும் நிரல்களை எழுதுவது பயனுள்ளதாக இருக்கும். இது *தானியங்கி சோதனை* என்றும்,\n"
"இந்த நிரல்களை *சோதனைகள்* என்றும் அழைக்கப்படுகிறது.\n"
"\n"
"சோதனைகளை எழுத நமக்கு உதவும் எளிய செயல்பாடு `assert_equal`:\n"
"\n"
"__code0__\n"
"\n"
"\n"
"(`repr` அது என்ன செயல்பாடு? ஒரு வித்தியாசத்தைக் காண `print(f\"{'abc'} {repr('abc')}\")` ஐ முயற்சிக்கவும், ஆனால் இதைப் பற்றி\n"
"அதிகம் கவலைப்பட வேண்டாம்.)\n"
"\n"
"இது நிலையான பைத்தானின் ஒரு பகுதி அல்ல (ஒத்த செயல்பாடுகள் இருந்தாலும்), ஆனால் இதை உங்கள் குறியீட்டு சூழலில் சேர்த்துள்ளோம்,\n"
"எனவே நீங்கள் எப்போதும் இதைப் பயன்படுத்தலாம். நீங்கள் முயற்சி செய்ய இதைப் பயன்படுத்துவதற்கான எடுத்துக்காட்டு இங்கே:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#TestingFunctions
#: 
msgid "pages.TestingFunctions.steps.make_tests_fail.text"
msgstr "சோதனைகள் தேர்ச்சி பெற்றதாக OK கள் நமக்குச் சொல்கிறது. நம் `double` செயல்பாடு சரியாக வேலை செய்வதாகத் தெரிகிறது.\n"
"அதற்குப் பதிலாக `x * 3` என்பதை தருமாறு மாற்றி, என்ன நடக்கிறது என்பதைப் பார்க்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#.     # __code0__:
#.     def double(x):
#.         return x * 2
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#.     assert_equal(quadruple(2))
#.     assert_equal(quadruple(5))
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.double
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.quadruple
#: 
msgid "pages.TestingFunctions.steps.complete_quadruple_tests.text"
msgstr "சிறப்பானது! நம் சோதனைகள் தோல்வியடைந்தன! நிச்சயமாக இது நல்லது அல்ல, ஆனால் சோதனைகள் தங்கள்\n"
"வேலையைச் செய்கின்றன என்பதை இது நமக்குச் சொல்கிறது. நம் `double` செயல்படுத்தல் சரியாக உள்ளதா என்பதை அவை உறுதி செய்கிறது.\n"
"\n"
"இந்த புதிய கருத்தை நடைமுறைப்படுத்துவோம். சில முழுமையடையாத சோதனைகளுடன் முன்பு இருந்த `quadruple` செயல்பாடு கீழே உள்ளது.\n"
"விடுபட்ட வாதங்களை `assert_equal` இல் சேர்ப்பதன் மூலம் நிரலைச் சரிசெய்யவும்.\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#TestingFunctions
#. 
#.     # __code0__:
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#. 
#.     # __code1__:
#.     def surround(string, sides):
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22%2B%2Bmore%2B%2B%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22more%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22the+same%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.surround
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22%3Dthe+same%3D%22
#: 
msgid "pages.TestingFunctions.steps.surround_exercise.text"
msgstr "சோதனைகளைப் பற்றிய மற்றொரு பயனுள்ள தகவல் என்னவென்றால், எவரும் அவற்றைப் படிக்கலாம் மற்றும் செயல்பாடு\n"
"என்ன செய்கிறது என்பதற்கான தெளிவான, எளிய எடுத்துக்காட்டுகளைக் காணலாம். ஒரு செயல்பாடு சிக்கலானதாகவும் ஆங்கிலத்தில் விவரிக்க\n"
"கடினமாகவும் இருக்கும் போது இது உதவியாக இருக்கும்.\n"
"\n"
"எடுத்துக்காட்டாக, இங்கே சில சோதனைகள் உள்ளன:\n"
"\n"
"__code0__\n"
"\n"
"`surround` என்ன செய்கிறது என்பதை நான் விளக்கத் தேவையில்லை, நீங்களே பார்க்கலாம்.\n"
"\n"
"இந்தச் சோதனைகளைக் கடந்து, இப்படித் தொடங்கும் `surround` செயல்பாட்டை எழுதவும்:\n"
"\n"
"__code1__"

#. https://futurecoder.io/course/#TestingFunctions
#. 
#.     # __code0__:
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#. 
#.     # __code1__:
#.     def alert(string, level):
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.alert
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Warning%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22%21%21%21%21+DANGER+%21%21%21%21%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22DANGER%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22%21%21+Warning+%21%21%22
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.text"
msgstr "சரியானது! இந்தச் சோதனைகளில் தேர்ச்சி பெறும் `alert` செயல்பாட்டை இப்போது எழுதவும்:\n"
"\n"
"__code0__\n"
"\n"
"`alert`யின் உடலில் `+` இருக்க அனுமதிக்கப்படவில்லை. அதற்குப் பதிலாக `surround` பயன்படுத்தவும். உங்கள் செயல்பாடு இப்படி தொடங்க வேண்டும்:\n"
"\n"
"__code1__"

#. https://futurecoder.io/course/#TestingFunctions
#: 
msgid "pages.TestingFunctions.steps.final_text.text"
msgstr "பெரிய வேலை! இந்த கருவிகள் வரும் அத்தியாயங்களில் மிகவும் உதவியாக இருக்கும்."

#. https://futurecoder.io/course/#MoreOnReturn
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.MoreOnReturn.steps.double_return_in_one_function.text"
msgstr "சில நேரங்களில் `return` என்பது புதிதாகக் கற்பவர்களுக்கு குழப்பம் மற்றும் தவறுகளுக்கு ஒரு ஆதாரமாக இருக்கலாம்.\n"
"இது எவ்வாறு செயல்படுகிறது என்பதைப் பற்றி மேலும் அறிந்து கொள்வோம்.\n"
"\n"
"இந்தக் குறியீட்டை இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#MoreOnReturn
#. 
#.     # __code0__:
#.     if condition:
#.         return value1
#.     else:
#.         return value2
#. 
#.     # __code1__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.value2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.value1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.condition
#: 
msgid "pages.MoreOnReturn.steps.cannot_return_multiple_values.text"
msgstr "ஒரு `return` அறிக்கையை இயக்கியவுடன், செயல்பாடு நின்றுவிடும், மீதமுள்ள குறியீடு புறக்கணிக்கப்படும்.\n"
"அதாவது, அதே தொகுதியில் `return` செய்த உடனேயே எந்தக் குறியீடும் *அடையாது*:\n"
"இந்தச் செயல்பாட்டை எத்தனை முறை இயக்கினாலும் `return 2`ஐ அடைய *முடியாது*!\n"
"\n"
"***ஒன்று, ஒரு செயல்பாட்டு அழைப்பிற்கு ஒரே ஒரு `return` செயல்படுத்தப்படும், பின்னர் செயல்படுத்தல் நிறுத்தப்படும்.***\n"
"\n"
"பல `return` அறிக்கைகள் சரியாகப் பயன்படுத்தப்படும்போதும் பயனுள்ளதாக இருக்கும், எ.கா `if-else` தொகுதியில்:\n"
"\n"
"__code0__\n"
"\n"
"ஒரு பொதுவான தவறு என்னவென்றால், `for` சுழல்களில் `return` என்ன செய்கிறது என்பதை தவறாகப் புரிந்துகொள்வது. பின்வருவனவற்றை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code1__"

#. https://futurecoder.io/course/#MoreOnReturn
#. 
#.     # __code0__:
#.     def double_numbers(numbers):
#.         doubles = []
#.         for x in numbers:
#.             doubles.append(x * 2)
#.         return doubles
#. 
#.     assert_equal(double_numbers([1, 2, 3]), [2, 4, 6])
#. 
#.     # __code1__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.doubles
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.double_numbers
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.numbers
#: 
msgid "pages.MoreOnReturn.steps.return_ends_whole_function.text"
msgstr "முதலில், `for` சுழலில் உள்ள ஒவ்வொரு மறு செய்கைக்கும் ஒரு மதிப்பை `return` செய்வது உள்ளுணர்வுடன் தோன்றலாம்.\n"
"ஆனால் அது அப்படி வேலை செய்யாது!\n"
"நீங்கள் குறியீட்டை `snoop` அல்லது பைதான் ஆசிரியர் மூலம் ஆய்வு செய்தால், செயல்பாடு முதல் சுழல் மறு செய்கையில் 2 ஐத் திருப்பிகொடுத்து\n"
"உடனடியாக முடிவடைவதைக் காணலாம்.\n"
"\n"
"ஒரே ஒரு `return` அறிக்கை இருக்கும்போது கூட, அது ஒருமுறை மட்டுமே செயல்படுத்தப்பட்டு ஒரு மதிப்பை வழங்கும்.\n"
"நீங்கள் பல மதிப்புகளை வழங்க விரும்பினால், பட்டியலை வழங்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"உள்ளமைக்கப்பட்ட சுழல்கள் இருந்தால் என்ன நடக்கும்? பின்வரும் செயல்பாட்டை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code1__"

#. https://futurecoder.io/course/#MoreOnReturn
#: 
msgid "pages.MoreOnReturn.steps.break_vs_return.text"
msgstr "முன்பு போலவே, `return` அனைத்து சுழல்களையும் சேர்த்து, ***முழு செயல்பாட்டையும் நிறுத்துகிறது***.\n"
"\n"
"முன்பு நாங்கள் காண்பித்தோம் [`break` மூலம் சுழலை நிறுத்துவது எப்படி](#UsingBreak).\n"
"`return letter` என்பதை `break` ஆக மாற்றி, வேறுபாடு என்ன என்பதைப் பார்க்கவும்."

#. https://futurecoder.io/course/#MoreOnReturn
#: 
msgid "pages.MoreOnReturn.steps.final_text.text"
msgstr "`return` போலல்லாமல், `break` அது பயன்படுத்தப்படும் உள் சுழலை மட்டும் நிறுத்துகிறது, இந்த வழக்கில் `for number in range(3):`.\n"
"இங்கே சரியாக என்ன நடக்கிறது:\n"
"\n"
"- `letter = b` க்கு, `print(f\"{letter} {number}\")` வரியானது `number = 0` க்கு மட்டுமே செயல்படுத்தப்படும்,\n"
"- பின்னர் உள் சுழல் `break` மூலம் நிறுத்தப்படும். ஆனால்\n"
"- வெளிப்புற சுழல் அதன் செயல்பாட்டைத் தொடர்கிறது, அடுத்த எழுத்து `c`க்கு நகர்கிறது\n"
"- இது `break` அறிக்கையைத் தூண்டாததால் முழுமையாக செயல்படுத்தப்படுகிறது."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.IntroducingOr.steps.InputAliceBob.text"
msgstr "If அறிக்கைகளை அறிமுகப்படுத்திய போது *பூலியன்கள்* (`True` மற்றும் `False`) பற்றி அறிந்தோம்.\n"
"ஒப்பீட்டு இயக்கிகள் `==`, `<`, `>`, `<=`, `>=` ஆகியவற்றைப் பற்றியும் அறிந்து கொண்டோம்.\n"
"இப்போது மிகவும் சிக்கலான நிலைமைகளை சரிபார்க்க பூலியன்களை இணைக்க விரும்புகிறோம்.\n"
"\n"
"இங்கே ஒரு எளிய உதாரணம்: உங்களுக்கு Alice மற்றும் Bob என்ற இரண்டு நண்பர்கள் இருப்பதாக கற்பனை செய்து பாருங்கள்.\n"
"கீழே உள்ள செயல்பாடு ஒரு அளவுருவான `name` என்பதை ஏற்றுக்கொண்டு, கொடுக்கப்பட்ட பெயரைக் கொண்ட நபர் உங்கள் நண்பர்களில்\n"
"உள்ளாரா என்பதைச் சரிபார்க்கும். தொகுப்பானில் குறியீட்டை நகலெடுத்து இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingOr
#: 
msgid "pages.IntroducingOr.steps.TrueOrTrue.text"
msgstr "இன்னும் சிறப்பாக செய்ய முடியுமா என்று பார்ப்போம்.\n"
"**`or`** ஐப் பயன்படுத்தி `if` மற்றும் `elif` அறிக்கைகளை இணைக்கலாம். `or` என்பது *பூலியன் இயக்கி*,\n"
"அதாவது இது இரண்டு பூலியன்களை (`True` அல்லது `False`) இணைக்கும் ஒரு இயக்கி (`+` அல்லது `-` போன்றவை).\n"
"\n"
"`A` அல்லது `B` `True` என்றால், `A or B` என்ற வெளிப்பாடு 'True' அதாவது `A` `True` அல்லது `B` `True`, அல்லது இரண்டும்.\n"
"`A` மற்றும் `B` இரண்டும் `False` என்றால்தான் அது `False`.\n"
"\n"
"ஓட்டில் பின்வருவனவற்றை முயற்சிக்கவும்.\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingOr
#: 
msgid "pages.IntroducingOr.steps.TrueOrFalse.text"
msgstr "நல்லது, இப்போது முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingOr
#: 
msgid "pages.IntroducingOr.steps.FalseOrFalse.text"
msgstr "இறுதியாக, முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingOr
#. 
#.     # __code0__:
#.     if name == "Alice":
#.         return True
#.     elif name == "Bob":
#.         return True
#. 
#.     # __code1__:
#.     if name == "Alice" or name == "Bob":
#.         return True
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Bob%22
#: 
msgid "pages.IntroducingOr.steps.ImprovingWithOr.text"
msgstr "தொகுப்பானில்,\n"
"\n"
"__code0__\n"
"\n"
"என்பதை இதனால் மாற்றவும்:\n"
"\n"
"__code1__\n"
"\n"
"நீங்கள் பார்க்கிறபடி, `name`என்பது Alice அல்லது Bob ஆக இருந்தால் மட்டுமே `is_friend`ஆனது `True` என்பதை வழங்கும்.\n"
"`name == \"Alice\"` மற்றும் `name == \"Bob\"` ஆகிய இரண்டு பூலியன்களுக்கு இடையில் `or` பயன்படுத்தப்படுகிறது."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#.     # __code1__:
#.     if x:
#.         return True
#.     else:
#.         return False
#. 
#.     # __code0__:
#.     name == "Alice" or name == "Bob"
#. 
#.     # __code2__:
#.     return x
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Bob%22
#: 
msgid "pages.IntroducingOr.steps.FurtherImprovement.text"
msgstr "நாம் இன்னும் சிறப்பாக செய்ய முடியும். கவனிக்கவும்\n"
"\n"
"__code0__\n"
"\n"
"என்பது பூலியன் என்பதையும், இரண்டு `return` அறிக்கைகளும் `True` அல்லது `False` என்ற பூலியன்களைத் திருப்பியளிக்கிறது.\n"
"செயல்பாடு:\n"
"\n"
" - `name == \"Alice\" அல்லது name == \"Bob\"` `True` ஆக இருக்கும் போது `True` ஐ வழங்குகிறது, மேலும்\n"
" - `name == \"Alice\" அல்லது name == \"Bob\"`False` ஆக இருக்கும் போது `False` ஐ வழங்கும் .\n"
"\n"
"எனவே இரண்டு சந்தர்ப்பங்களிலும் நாம் பூலியன் `name == \"Alice\" or name == \"Bob\"` என்பதைத் திருப்பி அனுப்பலாம்!\n"
"\n"
"இது உங்கள் குறியீட்டை எளிதாக்குவதற்கான பொதுவான வடிவமாகும். நீங்கள் எப்போதாவது குறியீட்டை எழுதுவதைக் கண்டால்:\n"
"\n"
"__code1__\n"
"\n"
"`x` ஒரு பூலியன் ஆகும், நீங்கள் எப்போது வேண்டுமானாலும் இந்தக் குறியீட்டை எளிதாக்கலாம்:\n"
"\n"
"__code2__\n"
"\n"
"இந்த எளிமைப்படுத்தலை நீங்களே குறியீட்டில் பயன்படுத்தவும், அதை மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#.     # __code0__:
#.     return name == "Alice" or name == "Bob"
#. 
#.     # __code1__:
#.     return name == "Alice" or "Bob"
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Bob%22
#: 
msgid "pages.IntroducingOr.steps.ACommonMistake.text"
msgstr "நிபந்தனையை நாங்கள் எப்படி எழுதினோம் என்பதை கவனமாகக் கவனியுங்கள்:\n"
"\n"
"__code0__\n"
"\n"
"இதற்குப் பதிலாக இதை எழுதுவது பொதுவான தவறு:\n"
"\n"
"__code1__\n"
"\n"
"நீங்கள் இதை தமிழ் போலப் படித்தால் புரிகிறது:\n"
"\n"
"> `name` என்பது `\"Alice\"` அல்லது `\"Bob\"` என்பதற்குச் சமமாக உள்ளதா என்பதை `return` அனுப்பவும் .\n"
"\n"
"ஆனால் பைதான் தமிழ் அல்ல, மேலும் `or` அப்படி வேலை செய்யாது.\n"
"\n"
"குறியீட்டில் உள்ள `return` வரியை மேலே உள்ள வரியுடன் மாற்றி, அதை மீண்டும் இயக்க முயற்சிக்கவும்."

#. https://futurecoder.io/course/#IntroducingOr
#: 
msgid "pages.IntroducingOr.steps.InspectWithBirdseye.text"
msgstr "இரண்டாவது மற்றும் மூன்றாவது சோதனை தோல்வி! எங்கள் செயல்பாடு தவறான செயலைச் செய்வதாகத் தெரிகிறது:\n"
"`name`என்பது `\"Bob\"` அல்லது `\"Charlie\"` ஆக இருக்கும்போது ``Bob`` (ஒரு சரம், பூலியன் அல்ல!) என்பதைத் தரும். என்ன நடந்து கொண்டிருக்கிறது?\n"
"அதே பிரச்சனைக்குரிய குறியீட்டை `birdseye` மூலம் மீண்டும் இயக்கவும். ஒவ்வொரு `is_friend` அழைப்பின் `return` அறிக்கைகளை கவனமாக\n"
"ஆய்வு செய்யவும். (நீல அம்பு பொத்தான்களைப் பயன்படுத்தவும்)"

#. https://futurecoder.io/course/#IntroducingOr
#. 
#.     # __code4__:
#.     assert_equal(is_valid_percentage(-1), False)
#.     assert_equal(is_valid_percentage(0), True)
#.     assert_equal(is_valid_percentage(50), True)
#.     assert_equal(is_valid_percentage(100), True)
#.     assert_equal(is_valid_percentage(101), False)
#. 
#.     # __code3__:
#.     return name in ["Alice", "Bob", "Charlie"]
#. 
#.     # __code2__:
#.     (name == "Alice") or ("Bob")
#. 
#.     # __code1__:
#.     name == ("Alice" or "Bob")
#. 
#.     # __code0__:
#.     name == "Alice" or "Bob"
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.name
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Bob%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.is_valid_percentage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Alice%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Charlie%22
#: 
msgid "pages.IntroducingOr.steps.AnExercise.text"
msgstr "`birdseye` மூலம் அதை ஆய்வு செய்யும் போது, நாம் இதைப் பார்க்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"மொழிபெயர்க்கப்படவில்லை \n"
"\n"
"__code1__\n"
"\n"
"ஆங்கிலத்தில் நாம் நினைக்கும் விதத்தில் இல்லை மாறாக:\n"
"\n"
"__code2__\n"
"\n"
"இது `name == \"Alice\"` ஆக இருக்கும் போது `\"Bob\"` என்பதை மதிப்பிடுகிறது `False`.\n"
"\n"
"ஒருவேளை நீங்கள் இதைப் போல் உணரலாம்:\n"
"\n"
"[![இப்போது என்னிடம் கூடுதல் கேள்விகள் உள்ளன](https://i.imgur.com/jN57tGt.png)](https://imgur.com/a/icKzI)\n"
"\n"
"உங்களுக்கு உண்மையிலேயே தேவைப்படும் ஒரே பொருள் தெரிந்துகொள்வது இதுதான்: நீங்கள் என்ன செய்கிறீர்கள் என்று உங்களுக்குத் தெரியும் வரை,\n"
"எப்போதும் `or` இன் இருபுறமும் பூலியன்களை வைப்பதை உறுதிப்படுத்திக் கொள்ளுங்கள், ஏனெனில் இது ஒரு பூலியன் இயக்கி.\n"
"`name == \"Alice\" or \"Bob\"` அந்த விதியை மீறுகிறது.\n"
"\n"
"நீங்கள் ஆர்வமாக இருந்தால், பதில்கள் கீழே உள்ளன, ஆனால் நீங்கள் விரும்பினால் அவற்றைத் தவிர்த்துவிட்டு கீழே உள்ள பயிற்சிக்குச் செல்லலாம்.\n"
"\n"
"----\n"
"\n"
"> ஏன் `(name == \"Alice\") or (\"Bob\")`எனபது `\"Bob\"`க்கு சமம்? அது ஏன் எதற்கும் சமம்? `\"Bob\"` ஒரு பூலியன் கூட இல்லை!\n"
"\n"
"`A` அல்லது `B` என்பது `True` என்றால், \"`A or B` என்பது `True` என்பது எளிமைப்படுத்தப்பட்டதாகும். பெரும்பாலான நேரங்களில்\n"
"`or` பற்றி சிந்திக்க இது எளிதான வழியாகும், குறிப்பாக `if` அறிக்கைகளை எழுதுவதற்கு.\n"
"உண்மையான வரையறை என்னவென்றால், `A` உண்மையாக இருந்தால் `A or B` வெறும் `A` (உண்மையில் `B` மதிப்பிடப்பட கூடவில்லை),\n"
"இல்லையெனில் அது `B`.\n"
"`A` மற்றும் `B` ஆகியவை பூலியன்கள் என்றால் இரண்டு வரையறைகளும் சமமானவை என்பதை நீங்களே பார்க்கலாம்.\n"
"இந்த எடுத்துக்காட்டில் `A` என்பது `name == \"Alice\"` இது `False`, எனவே `A or B` என்பது `B` இது `\"Bob\"` ஆகும்.\n"
"\n"
"> ஒவ்வொரு முறையும் `name ==` என்பதை மீண்டும் கூறாமல் நிபந்தனையை எழுத சிறந்த வழி உள்ளதா?\n"
"\n"
"ஆம்! [செயல்பாடுகள் மற்றும் பட்டியல்களுக்கான முறைகள்](#FunctionsAndMethodsForLists) இல் நாங்கள் `in`\n"
"இயக்கியைக் குறிப்பிட்டுள்ளோம், இதைப் போல் பட்டியலுடன் நீங்கள் பயன்படுத்தலாம்:\n"
"\n"
"__code3__\n"
"\n"
"ஆனால் நீங்கள் எப்போதும் `or` அதை அகற்ற முடியாது.\n"
"\n"
"----\n"
"\n"
"பயிற்சி: ஒரு எண்ணியல் `x` வாதத்தை ஏற்றுக்கொண்டு `is_valid_percentage` என்ற செயல்பாட்டை எழுதவும்.\n"
" `x` 0 மற்றும் 100 (உள்ளடக்க) இடையே இருந்தால் அது `True` ஐ வழங்க வேண்டும், இல்லையெனில் `False` என்பதை வழங்க வேண்டும்.\n"
"உங்கள் செயல்பாடு `or` ஐப் பயன்படுத்த வேண்டும், மேலும் இந்த சோதனைகளில் தேர்ச்சி பெற வேண்டும்:\n"
"\n"
"    __copyable__\n"
"__code4__"

#. https://futurecoder.io/course/#IntroducingOr
#: 
msgid "pages.IntroducingOr.steps.final_text.text"
msgstr "நல்ல வேலை!"

#. https://futurecoder.io/course/#IntroducingAnd
#: 
msgid "pages.IntroducingAnd.steps.TrueAndTrue.text"
msgstr "பைத்தானில் உள்ள மற்றொரு பூலியன் இயக்கி `and`.\n"
"`A` மற்றும் `B` இரண்டும் `True` என்றால் மட்டுமே `A and B` என்பது `True` ஆகும். இல்லையெனில் அது `False`.\n"
"ஓட்டில் இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingAnd
#: 
msgid "pages.IntroducingAnd.steps.TrueAndFalse.text"
msgstr "சரி, இப்போது முயற்சிக்கவும்:\n"
"\n"
"__program_indented__\n"
"\n"
"நீங்கள் என்ன எதிர்பார்க்கிறீர்கள்?"

#. https://futurecoder.io/course/#IntroducingAnd
#: 
msgid "pages.IntroducingAnd.steps.FalseAndFalse.text"
msgstr "இறுதியாக, முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#.     # __code0__:
#.     def is_valid_percentage(x):
#.         if x < 0 or x > 100:
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(is_valid_percentage(-1), False)
#.     assert_equal(is_valid_percentage(0), True)
#.     assert_equal(is_valid_percentage(50), True)
#.     assert_equal(is_valid_percentage(100), True)
#.     assert_equal(is_valid_percentage(101), False)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.is_valid_percentage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.IntroducingAnd.steps.AndExercise.text"
msgstr "இப்போது பயிற்சி செய்வோம். முன்பு `or` ஐப் பயன்படுத்தி `is_valid_percentage` என்ற செயல்பாட்டை எழுதினோம்.\n"
"இதோ ஒரு எடுத்துக்காட்டு தீர்வு:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"அதற்குப் பதிலாக `and` ஐப் பயன்படுத்தி இந்தச் செயல்பாட்டை மீண்டும் எழுதவும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#.     # __code5__:
#.     def all_equal(row):
#.         ...
#. 
#.     assert_equal(all_equal(["X", "X", "X"]), True)
#.     assert_equal(all_equal(["O", "O", "O"]), True)
#.     assert_equal(all_equal(["X", "O", "X"]), False)
#. 
#.     # __code0__:
#.     def is_valid_percentage(x):
#.         if 0 <= x and x <= 100:
#.             return True
#.         else:
#.             return False
#. 
#.     # __code1__:
#.     def is_valid_percentage(x):
#.         return 0 <= x and x <= 100
#. 
#.     # __code4__:
#.     def is_valid_percentage(x):
#.         return 0 <= x <= 100
#. 
#.     # __code2__:
#.     a < b and b < c
#. 
#.     # __code3__:
#.     a < b < c
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.all_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.is_valid_percentage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.IntroducingAnd.steps.TicTacToeWinningRow.text"
msgstr "அருமை! இதோ ஒரு சாத்தியமான தீர்வு:\n"
"\n"
"__code0__\n"
"\n"
"முன்பு போலவே, இந்த தீர்வை நாம் எளிதாக்கலாம்:\n"
"\n"
"__code1__\n"
"\n"
"இதை மேலும் மேம்படுத்த மற்றொரு தந்திரம் உள்ளது ஒப்பீடு சங்கிலி என்று. இது போன்ற எந்த நிபந்தனையும்:\n"
"\n"
"__code2__\n"
"\n"
"கூடுதல் `and b` ஐ அகற்றுவதன் மூலம் சுருக்கலாம்:\n"
"\n"
"__code3__\n"
"\n"
"இது `==` உட்பட எந்த ஒப்பீட்டு இயக்கிகளுக்கும் வேலை செய்யும், மேலும் இரண்டு இயக்கிகளும் வேறுபட்டிருக்கலாம்.\n"
"எனவே தீர்வை எளிமையாக்கலாம்:\n"
"\n"
"__code4__\n"
"\n"
"அடுத்த பயிற்சி: மூன்று உறுப்புகளின் பட்டியலைக் கொடுத்து, மூன்று உறுப்புகளும் சமமாக உள்ளதா எனச் சரிபார்க்கவும்.\n"
"\n"
"    __copyable__\n"
"__code5__"

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#.     # __code0__:
#.     def all_equal(row):
#.         return row[0] == row[1] and row[0] == row[2]
#. 
#.     # __code2__:
#.         return row == [row[0], row[0], row[0]]
#. 
#.     # __code1__:
#.         return row[0] == row[1] == row[2]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.all_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#: 
msgid "pages.IntroducingAnd.steps.final_text.text"
msgstr "நல்ல வேலை. இங்கே பல சாத்தியமான சரியான தீர்வுகள் உள்ளன:\n"
"\n"
"__code0__\n"
"\n"
"அல்லது ஒப்பீட்டு சங்கிலியை மீண்டும் பயன்படுத்துதல்:\n"
"\n"
"__code1__\n"
"\n"
"அல்லது முதல் உறுப்பு மூன்று முறை உள்ள பட்டியலுக்கு சமமாக உள்ளதா என சரிபார்க்கவும்:\n"
"\n"
"__code2__"

#. https://futurecoder.io/course/#MultiLineExpressions
#: 
msgid "pages.MultiLineExpressions.steps.invalid_multiline.text"
msgstr "எங்கள் குறியீடு வரிகள் மிக நீளமாகத் தொடங்குகின்றன.\n"
"நல்லவேளையாக பைதான் ஒரு அறிக்கையை பல வரிகளில் பரப்ப சில வழிகளை வழங்குகிறது,\n"
"ஆனால் அது தானாகவே இல்லை. நீங்கள் என்ன செய்கிறீர்கள் என்பதை பைதான் புரிந்துகொள்வதை நீங்கள் உறுதிசெய்ய வேண்டும்.\n"
"எடுத்துக்காட்டாக, இந்த குறியீடு தவறான தொடரியல் மற்றும் உங்களுக்கு ஒரு பிழையைக் கொடுக்கும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#MultiLineExpressions
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.MultiLineExpressions.steps.valid_multiline.text"
msgstr "பைதான் இதை இரண்டு தனித்தனி குறியீடுகளாகப் புரிந்துகொள்ள முயற்சித்து குழப்பமடைகிறது. முதல் வரி இரண்டாவது வரியில் தொடர்கிறது \n"
"என்பதை நீங்கள் சொல்ல வேண்டும்.\n"
"\n"
"இதைச் செய்வதற்கான ஒரு வழி, வரி முறிவை 'escape' செய்ய, வரியின் முடிவில் `\\` சேர்ப்பதாகும்.\n"
"\n"
"மற்றொரு வழி, வரி முறிவு சில வகையான அடைப்புக்குறிக்குள் இருப்பதை உறுதி செய்வது. வரியின் தொடர்ச்சி\n"
"குறிக்கப்படுகிறது, ஏனெனில் பைதான் அனைத்து அடைப்புக்குறிகளும் மூடப்படும் வரை காத்திருக்கும், ஒரு கோடு\n"
"முழுமையுள்ளதாகக் கருதும். உங்களிடம் ஏற்கனவே அடைப்புக்குறிகள் இருந்தால், உதாரணமாக நீங்கள் ஒரு செயல்பாட்டை அழைக்கிறீர்கள்\n"
"அல்லது பட்டியலை உருவாக்குகிறீர்கள் என்றால், நீங்கள் எதுவும் செய்ய வேண்டியதில்லை! இல்லையெனில், வரியின் தொடர்ச்சியைக்\n"
"குறிக்க நீங்கள் எந்த வெளிப்பாட்டிற்கும் அடைப்புக்குறிகளைச் சேர்க்கலாம்.\n"
"\n"
"இங்கே சில உதாரணங்கள். விவரங்களில் கவனம் செலுத்துங்கள்.\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#MultiLineExpressions
#: 
msgid "pages.MultiLineExpressions.steps.final_text.text"
msgstr "எனவே உங்களுக்கு மர்மமான `SyntaxError` கிடைத்தால், நீங்கள் எந்த வரியையும் தவறாகப் பிரிக்கவில்லை என்பதை உறுதிப்படுத்திக் கொள்ளுங்கள்!"

#. https://futurecoder.io/course/#CombiningAndAndOr
#: 
msgid "pages.CombiningAndAndOr.steps.CombiningAndOr.text"
msgstr "நீங்கள் `and` மற்றும் `or` இரண்டையும் ஒரே வெளிப்பாட்டில் பயன்படுத்தினால், அது `*` மற்றும் `+` ஆகியவற்றை இணைப்பது போன்றது.\n"
"இயக்கிகள் ஒரு குறிப்பிட்ட வரிசையில் மதிப்பிடப்படுகிறார்கள்.\n"
"\n"
"எடுத்துக்காட்டாக, ஓட்டில் பின்வரும் குறியீட்டை முயற்சிக்கவும்.\n"
"நீ என்ன எதிர்பார்க்கிறாய்?\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#.     # __code4__:
#.     def diagonal_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'O', 'X'],
#.                 ['X', 'X', 'O'],
#.                 ['O', 'O', 'X']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'X', 'O'],
#.                 ['X', 'O', 'O'],
#.                 ['O', 'X', 'X']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['O', 'X', 'O'],
#.                 ['X', 'X', 'X'],
#.                 ['O', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#. 
#.     # __code3__:
#.     board = [
#.         ['X', 'O', 'X'],
#.         ['X', 'X', 'O'],
#.         ['O', 'O', 'X']
#.     ]
#. 
#.     # __code1__:
#.     (True or False) and False
#. 
#.     # __code2__:
#.     True or (False and False)
#. 
#.     # __code0__:
#.     True or False and False
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.text"
msgstr "நீங்கள் அதை இடமிருந்து வலமாக சாதாரணமாகப் படித்தால், நீங்கள் இவ்வாறு நினைக்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"என்பது\n"
"\n"
"__code1__\n"
"\n"
"க்கு சமம் ஆனால் அது உண்மையில்\n"
"\n"
"__code2__\n"
"\n"
"க்கு சமமானதாகும், ஏனெனில் `and` க்கு `or` ஐ விட அதிக முன்னுரிமை உள்ளது.\n"
"இது முக்கியமானது, ஏனென்றால் முதல் விளக்கம் `True and False` ஆகக் குறைகிறது, அது `False`, இரண்டாவது விளக்கம்\n"
"`True or False` அது `True` என்று குறைகிறது!\n"
"உறுதிப்படுத்த, ஓட்டில் அடைப்புக்குறிக்குள் இரு விருப்பங்களையும் முயற்சி செய்யலாம்.\n"
"\n"
"**இயக்கிகளை இணைக்கும்போது கூடுதல் கவனமாக இருக்க வேண்டும் என்பதே இங்கு பாடம்.**பாதுகாப்பாக இருக்க அடைப்புக்குறிகளைச் சேர்க்கவும்\n"
"அல்லது உங்கள் வெளிப்பாட்டை சிறிய பகுதிகளாக பிரித்து ஒவ்வொரு பகுதியையும் ஒரு மாறிக்கு ஒதுக்கவும்.\n"
"இது உங்கள் குறியீட்டை தெளிவாகவும், படிக்கக்கூடியதாகவும், தெளிவற்றதாகவும் மாற்றும், மேலும் வலிமிகுந்த தவறுகளிலிருந்து உங்களைக் காப்பாற்றும்.\n"
"\n"
"ஒரு பயிற்சிக்கான நேரம். டிக்-டாக்-டோ விளையாடுவதற்கு நீங்கள் ஒரு நிரலை எழுதுகிறீர்கள் என்று வைத்துக்கொள்வோம்,\n"
"இது சுழியம் மற்றும் குறுக்குகள் அல்லது Xs மற்றும் Os என்றும் அழைக்கப்படுகிறது. டிக்-டாக்-டோ பற்றி நீங்கள் கேள்விப்பட்டிருக்கவில்லை என்றால்,\n"
"நீங்கள் விதிகளைப் படித்து சில கேம்களை விளையாடலாம் [இங்கே](https://gametable.org/games/tic-tac-toe/).\n"
"\n"
"ஒரு விளையாட்டில் யாராவது வெற்றி பெற்றாரா என்பதை நாம் சரிபார்க்க வேண்டும். எங்கள் செயல்பாடு `all_equal` ஏற்கனவே வரிசைகளைச் சரிபார்க்க உதவியாக உள்ளது.\n"
"\n"
"ஒரே மாதிரியான 3 துண்டுகளை மூலைவிட்டக் கோடுகளில் ஒன்றில் வைத்து யாராவது ஒரு விளையாட்டை வென்றார்களா என்பதைச் சரிபார்க்க ஒரு செயல்பாட்டை எழுதவும்.\n"
"பலகை 3 துணைப்பட்டியல்களின் உள்ளமைப் பட்டியலான `board` என வழங்கப்படுகிறது, ஒவ்வொரு துணைப் பட்டியலிலும் 3 சரங்கள் உள்ளன, இது ஒரு வரிசையைக் குறிக்கிறது. எடுத்துக்காட்டாக:\n"
"\n"
"__code3__\n"
"\n"
"செயல்பாடு ஒரு பூலியனைத் தர வேண்டும்: மூலைவிட்டங்களில் ஒன்றில் ஒரே மாதிரியான 3 துண்டுகள் இருந்தால் `True`, இல்லையெனில் `False`.\n"
"கீழே உள்ள குறியீட்டுடன் தொடங்க, நகலெடு பொத்தானைக் சொடுக்கவும்.\n"
"நாங்கள் உங்களுக்காக சில சோதனைகளை வழங்கினோம், உங்கள் வேலை `...`ஐ உங்கள் குறியீட்டை கொண்டு மாற்றுவது.\n"
"\n"
"    __copyable__\n"
"__code4__"

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#.     # __code0__:
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#.     # __code1__:
#.         diagonal1 = all_equal([board[0][0], board[1][1], board[2][2]])
#.         diagonal2 = all_equal([board[2][0], board[1][1], board[0][2]])
#.         return diagonal1 or diagonal2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.middle
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.all_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal_winner
#: 
msgid "pages.CombiningAndAndOr.steps.final_text.text"
msgstr "நல்லது! இது கடினமான ஒன்றாக இருந்தது. இதோ சில சாத்தியமான தீர்வுகள்:\n"
"\n"
"__code0__\n"
"\n"
"அல்லது:\n"
"\n"
"__code1__"

#. https://futurecoder.io/course/#IntroducingNotPage
#: 
msgid "pages.IntroducingNotPage.steps.IntroducingNot.text"
msgstr "மற்ற இரண்டு பூலியன் இயக்கிகள் `and` மற்றும் `or` போலல்லாமல்,\n"
"இவை இரண்டு பூலியன்களுக்கு இடையே பயன்படுத்தப்படுகின்றன (*இரும* இயக்கிகள்),\n"
"`not` என்பது ஒரே ஒரு பூலியன் (*ஒரும* இயக்கி எனப்படும்) முன் பயன்படுத்தப்படுகிறது.\n"
"இது பயன்படுத்தப்படும் வெளிப்பாட்டை நிராகரிக்கிறது, இது ஒரு கழித்தல் அடையாளம் போன்றது. ஓட்டில் முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingNotPage
#: 
msgid "pages.IntroducingNotPage.steps.NotFalse.text"
msgstr "இப்போது பின்வருவனவற்றை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.IntroducingNotPage.steps.NotTrueOrTrue.text"
msgstr "`and` மற்றும் `or` உடன் ஒப்பிடும்போது `not` என்பதன் முன்னுரிமை என்ன? `birdseye` இல் பின்வருவனவற்றை முயற்சிக்கவும்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#.     # __code7__:
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#. 
#.     # __code6__:
#.     if invalid_image(filename):
#.         print("I can't process " + filename)
#. 
#.     # __code1__:
#.     (not True) or True
#. 
#.     # __code2__:
#.     not (True or True)
#. 
#.     # __code0__:
#.     not True or True
#. 
#.     # __code4__:
#.     (-1) + 2
#. 
#.     # __code5__:
#.     -(1 + 2)
#. 
#.     # __code3__:
#.     -1 + 2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.filename
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.invalid_image
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.jpg%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.png%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22I+can%27t+process+%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22dog.png%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22cat.jpg%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22invoice.pdf%22
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.text"
msgstr "நீங்கள் `birdseye` இல்\n"
"\n"
"__code0__\n"
"\n"
"என்பது பைத்தானால்\n"
"\n"
"__code1__\n"
"\n"
"என விளக்கப்படுவதைக் காணலாம்:\n"
"\n"
"__code2__\n"
"\n"
"எனவே, அடைப்புக்குறிகள் இல்லை என்றால் `or` ஐ விட `not` க்கு அதிக முன்னுரிமை உள்ளது.\n"
"\n"
"__code3__\n"
"\n"
"என்பது எப்படி பொருள்:\n"
"\n"
"__code4__\n"
"\n"
"என்பதற்குப் பதிலாக\n"
"\n"
"__code5__\n"
"\n"
"`not` என்பது `and` ஐ விட அதிக முன்னுரிமையைக் கொண்டுள்ளது.\n"
"\n"
"மீண்டும், நினைவில் கொள்ள வேண்டிய முக்கிய கருத்து, சந்தேகம் இருக்கும்போது அடைப்புக்குறிகள் அல்லது கூடுதல் மாறிகளைப் பயன்படுத்துவதாகும்.\n"
"\n"
"பயிற்சி: படங்களை செயலாக்கும் ஒரு நிரலை நீங்கள் எழுதுகிறீர்கள் என்று வைத்துக்கொள்வோம். சில வகையான கோப்புகளை மட்டுமே செயலாக்க முடியும்.\n"
"பயனர் செயலாக்க முடியாத கோப்பை உங்களுக்கு வழங்கினால், நீங்கள் ஒரு பிழையைக் காட்ட விரும்புகிறீர்கள்:\n"
"\n"
"__code6__\n"
"\n"
".png மற்றும் .jpg கோப்புகளை செயலாக்க முடியாது, ஆனால் மற்ற கோப்பு வகைகளால் முடியும்.\n"
"அதைச் செய்வதற்கான ஒரு எடுத்துக்காட்டு செயல்பாடு இங்கே:\n"
"\n"
"    __copyable__\n"
"__code7__\n"
"\n"
"இது தேவைப்படுவதை விட நீளமானது. `invalid_image` என்பதை மீண்டும் எழுதவும், இதன் மூலம் உடல் ஒற்றை வரியாக `return <expression>`,\n"
"அதாவது `if` அறிக்கை இல்லை. அதே சோதனைகளில் தேர்ச்சி பெற வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#.     # __code0__:
#.     def invalid_image(filename):
#.         return not (filename.endswith(".png") or filename.endswith(".jpg"))
#. 
#.     def invalid_image(filename):
#.         return not filename.endswith(".png") and not filename.endswith(".jpg")
#. 
#.     # __code1__:
#.     if x:
#.         return False
#.     else:
#.         return True
#. 
#.     # __code2__:
#.     return not x
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.jpg%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.png%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.filename
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.invalid_image
#: 
msgid "pages.IntroducingNotPage.steps.final_text.text"
msgstr "நல்லது! இங்கே இரண்டு செல்லுபடியாகும் தீர்வுகள் உள்ளன:\n"
"\n"
"__code0__\n"
"\n"
"(நீங்கள் ஆர்வமாக இருந்தால், டி மோர்கனின் சட்டம் என்று அழைக்கப்படும் ஏதோவொன்றின் காரணமாக இவை சமமானவை)\n"
"\n"
"மேலும் இது எளிமைப்படுத்தக்கூடிய மற்றொரு பொதுவான வடிவமாகும் என்பதைக் கவனியுங்கள்: உங்கள் குறியீட்டு இந்த வடிவத்தில் இருந்தால்:\n"
"\n"
"__code1__\n"
"\n"
"இங்கு `x` அது ஒரு பூலியன், பின்னர் அதை எளிமைப்படுத்தலாம்:\n"
"\n"
"__code2__"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#.     # __code2__:
#.     def row_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         row_winner(
#.             [
#.                 ['A', 'A', 'B', 'A'],
#.                 [' ', ' ', ' ', ' '],
#.                 ['A', ' ', ' ', 'A'],
#.                 ['B', ' ', 'B', 'A']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         row_winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'X'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     # __code1__:
#.     board = [
#.         ['A', 'B', 'A', 'A'],
#.         ['B', ' ', ' ', 'A'],
#.         [' ', 'A', 'B', 'B'],
#.         [' ', 'A', 'B', ' ']
#.     ]
#. 
#.     # __code0__:
#.     board = [
#.         ['X', 'O', 'X'],
#.         ['O', ' ', ' '],
#.         [' ', 'X', 'O']
#.     ]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.text"
msgstr "ஒரு சிறிய சிக்கலைத் தீர்க்க நீங்கள் பல குறுகிய பயிற்சிகளைச் செய்துள்ளீர்கள். இப்போது நாங்கள் ஒரு பெரிய, மிகவும் சிக்கலான\n"
"திட்டத்தைச் சமாளிக்கப் போகிறோம், இது உண்மையில் உங்கள் அறிவை சோதிக்கும் மற்றும் பல சிறிய பகுதிகளை ஒன்றாக இணைக்க வேண்டும்.\n"
"இது மிகவும் வேடிக்கையாக இருக்கும்!\n"
"\n"
"2 மனிதர்கள் விளையாடும் உரை அடிப்படையிலான ஊடாடத்தக்க டிக்-டாக்-டோ விளையாட்டை நீங்கள் உருவாக்குவீர்கள்.\n"
"விளையாட்டில் முடிக்கப்பட்ட விளையாட்டு எப்படி இருக்கும் என்பதற்கான சிறிய முன்னோட்டம் இங்கே:\n"
"\n"
"      1 2 3\n"
"    1  | |\n"
"      -+-+-\n"
"    2  | |\n"
"      -+-+-\n"
"    3  | |\n"
"\n"
"    X விளையாட:\n"
"    1\n"
"    1\n"
"\n"
"      1 2 3\n"
"    1 X| |\n"
"      -+-+-\n"
"    2  | |\n"
"      -+-+-\n"
"    3  | |\n"
"\n"
"    O விளையாட:\n"
"    2\n"
"    2\n"
"\n"
"      1 2 3\n"
"    1 X| |\n"
"      -+-+-\n"
"    2  |O|\n"
"      -+-+-\n"
"    3  | |\n"
"\n"
"    X விளையாட:\n"
"    1\n"
"    3\n"
"\n"
"      1 2 3\n"
"    1 X| |X\n"
"      -+-+-\n"
"    2  |O|\n"
"      -+-+-\n"
"    3  | |\n"
"\n"
"நாங்கள் திட்டத்தை பல சிறிய செயல்பாடுகளாகப் பிரிப்போம், அவை பயிற்சிகளாக இருக்கும்.\n"
"\n"
"நீங்கள் இதுவரை கற்றுக்கொண்ட பல கருத்துகளைப் பயன்படுத்துவீர்கள்:சரங்கள், உள்ளமைப்பட்ட பட்டியல்கள்,\n"
"உள்ளமைக்கப்பட்ட சுழல்கள், `range`, செயல்பாடுகளுக்குள் அழைப்பு செயல்பாடுகள், ஒப்பீடுகள் மற்றும் பூலியன்கள்.\n"
"\n"
"வழியில் புதிய வரி எழுத்துக்கள், வகைகள் மற்றும் `input()` உள்ளிட்ட சில புதிய கருத்துகளையும் நீங்கள் கற்றுக் கொள்வீர்கள்.\n"
"\n"
"திட்டத்தின் தோராயமான சுருக்கம் இதோ:\n"
"\n"
"- மூன்று செயல்பாடுகள் `row_winner`, `column_winner`, `diagonal_winner` ஆகியவை வரிசைகள், நெடுவரிசைகள் மற்றும் மூலைவிட்டங்களை\n"
"வென்றதற்காக முழுப் பலகையையும் சரிபார்க்கும்\n"
"- ஒரு செயல்பாடு `winner` ஒரு வெற்றியாளருக்கான முழுப் பலகையையும் சரிபார்க்கும், மேலே உள்ள செயல்பாடுகளை ஒருங்கிணைத்தல்\n"
"- விளையாட்டின் தற்போதைய நிலையைக் காட்டும் செயல்பாடு `format_board`\n"
"- ஒரு நகர்வை விளையாட பயனர் உள்ளீட்டை எடுக்கும் செயல்பாடு `play_move`,\n"
"- இறுதியாக ஒரு `play_game` செயல்பாடு அனைத்தையும் ஒன்றாக இணைத்து விளையாட்டை இயக்குகிறது ஊடாடும் வகையில்.\n"
"- பின்னர் மேலும் மேம்பாடுகளைச் சேர்ப்போம்.\n"
"\n"
"தொடங்குவோம்!\n"
"\n"
"கடைசி அத்தியாயத்தைப் போலவே, டிக்-டாக்-டோ பலகை உள்ளமைக்கப்பட்ட சரங்களின் பட்டியலாகக் குறிப்பிடுவோம்.\n"
"ஒரு பொதுவான விளையாட்டுக்கு இது 3x3 பட்டியலாக இருக்கும், அதாவது 3 பட்டியல்கள் ஒவ்வொன்றும் 3 சரங்களைக் கொண்டிருக்கும்,\n"
"ஆட்டக்காரர்களை `'X'` அல்லது `'O'` குறிப்பிடுகிறது. வெற்று சதுரங்கள் இடைவெளியால் குறிக்கப்படும், அதாவது `' '`. எடுத்துக்காட்டாக:\n"
"\n"
"__code0__\n"
"\n"
"இருப்பினும் பொருட்களை மிகவும் ஆர்வமாக்க உங்கள் குறியீடு எந்த அளவிலான (4x4, 5x5, முதலியன) சதுர பலகைகளுக்கு வேலை செய்ய வேண்டும்,\n"
"அங்கு ஆட்டக்காரர்களை எந்த சரங்களாலும் குறிப்பிடலாம், எ.கா.\n"
"\n"
"__code1__\n"
"\n"
"`row_winner` செயல்பாட்டை எழுதவும், `board` ஆனது வெற்றிபெறும் வரிசையைக் கொண்டிருந்தால் இது `True`,\n"
"அதாவது அதன் அனைத்து உள்ளீடுகளிலும் ஒரே எழுத்தைக் கொண்ட கிடைமட்டக் கோடு (`' '` தவிர):\n"
"\n"
"    __copyable__\n"
"__code2__\n"
"\n"
"இரண்டாவது எடுத்துக்காட்டில், `O` கீழ் வரிசையில் வெற்றி பெறும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#.     # __code0__:
#.     def column_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         column_winner(
#.             [
#.                 ['X', 'O', ' '],
#.                 ['X', 'O', ' '],
#.                 ['O', 'X', ' ']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         column_winner(
#.             [
#.                 ['X', 'O', ' ', 'X'],
#.                 [' ', 'O', 'X', 'O'],
#.                 ['O', 'O', 'X', 'X'],
#.                 ['O', 'O', 'X', ' ']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.text"
msgstr "பெரிய வேலை!\n"
"\n"
"இப்போது ஒரே மாதிரியான `column_winner` செயல்பாட்டை எழுதவும், இது வெற்றிபெறும் *நெடுவரிசை* (ஒரு செங்குத்து கோடு) ஒன்றைச் சரிபார்க்கிறது:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"இங்கே `O` இரண்டாவது பலகையின் இரண்டாவது நெடுவரிசையில் வென்றது."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#.     # __code1__:
#.     def diagonal_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['O', 'X', 'O', 'X'],
#.                 [' ', 'O', 'X', ' '],
#.                 ['X', 'X', ' ', 'X'],
#.                 ['X', ' ', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'X', ' '],
#.                 ['X', ' ', 'O'],
#.                 [' ', 'O', 'O']
#.             ]
#.         ),
#.         False
#.     )
#. 
#.     # __code0__:
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.middle
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.text"
msgstr "சிறப்பானது! அது சவாலாக இருந்தது.\n"
"\n"
"இறுதியாக நாம் வெற்றிபெறும் மூலைவிட்டங்களைச் சரிபார்க்க வேண்டும். முந்தைய அத்தியாயத்தில், 3-பை-3 பலகைகளுக்குச் செய்ய, நீங்கள் ஏற்கனவே ஒரு செயல்பாட்டை எழுதியுள்ளீர்கள்:\n"
"\n"
"__code0__\n"
"\n"
"இப்போது எந்த அளவிலான சதுர பலகைகளுக்கும் வேலை செய்யும் `diagonal_winner` என்பதை எழுதவும்: 4-பை-4, 5-பை-5, மற்றும் பல...\n"
"\n"
"    __copyable__\n"
"__code1__\n"
"\n"
"முதல் எடுத்துக்காட்டில், கீழிருந்து இடது மேல் வலதுபுறம் செல்லும் மூலைவிட்டத்தில் `X` வென்றது."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#.     # __code0__:
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.piece
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.winning_line
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.entry
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.col
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.column_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.column
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.winner.text"
msgstr "அற்புதம்! அது மிகவும் கடினமாக இருந்தது.\n"
"\n"
"இப்போது நாம் மூன்று செயல்பாடுகளை ஒன்றாக இணைக்கலாம்! முன்பு போல் ஒரு வாதம் `board` எடுக்கும் `winner` செயல்பாட்டை எழுதவும்,\n"
"மேலும் `board` என்பதில் வெற்றிபெறும் வரிசை, நெடுவரிசை அல்லது மூலைவிட்டம் இருந்தால் `True` என்பதை வழங்கும் மற்றபடி `False` வழங்கும்.\n"
"\n"
"மூன்று செயல்பாடுகளை அழைப்பதன் மூலம் உங்கள் தீர்வு செயல்பட வேண்டும். `winner` தானே சுழல, சந்தா\n"
"போன்றவற்றைச் செய்யக்கூடாது.\n"
"\n"
"இங்கே `row_winner`, `column_winner` மற்றும் `diagonal_winner` என்பதற்கான சில குறியீடுகளும் `winner` என்பதற்கான சில சோதனைகளும் உள்ளன.\n"
"நகலெடு பொத்தானைக் சொடுக்கு செய்து, உங்கள் `winner` செயல்பாட்டிற்கான வெற்றிடங்களை நிரப்பவும்.\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#: 
msgid "pages.IntroducingTicTacToe.steps.final_text.text"
msgstr "பெரிய வேலை!\n"
"\n"
"இப்போது பலகையில் வெற்றிபெறும் நிலையைத் தீர்மானிப்பதற்கான குறியீடு எங்களிடம் உள்ளது."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.NewlinesAndFormatBoard.steps.one_way_to_print_board.text"
msgstr "அடுத்து டிக்-டாக்-டோ பலகையை காண்பிப்பதில் உள்ள சிக்கலைச் சமாளிக்க விரும்புகிறோம். இதைச் செய்வதற்கான ஒரு வழி: \n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"(`\"\".join` என்றால் என்ன? இணையத்தில் தேடு!)"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#.     # __code1__:
#.     def format_board(board):
#.         ...
#.         return ...
#. 
#.     assert_equal(format_board([...]), "...")
#. 
#.     # __code0__:
#.     assert_equal(print_board([...]), "...")
#. 
#.     # __code2__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.print_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.format_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.text"
msgstr "இது ஒரு நல்ல தொடக்கமாகும், ஆனால் அதை அச்சிடுவதை விட ஒரு சரத்தை *திருப்பி* வழங்கும் செயல்பாட்டை நாங்கள் விரும்புகிறோம்.\n"
"இந்த வழியில் மற்ற குறியீடு வெவ்வேறு வழிகளில் சரத்தை எளிதாகப் பயன்படுத்த முடியும். சரத்தை நாம் கையாள விரும்பலாம்\n"
"(எ.கா. அதைச் சுற்றி ஒரு பெட்டியை வரையலாம் அல்லது முதல் சில வரிகளை மட்டும் பிரித்தெடுக்கலாம்), அதை திரையைத் தவிர வேறு எங்காவது\n"
"அனுப்ப விரும்பலாம் (எ.கா. கோப்பு) மற்றும் இந்த குறிப்பிட்ட செயலில் நாம் அதைச் செய்ய விரும்புகிறோம். அதை `assert_equal` மூலம் சோதிக்கவும்.\n"
"இது வேலை செய்யாது:\n"
"\n"
"__code0__\n"
"\n"
"ஏனெனில் `print_board` `return` ஐப் பயன்படுத்தாததால் அது இயல்பாக `None` என்பதைத் தரும்.\n"
"எனவே இதற்குப் பதிலாக நமக்கு இது போன்ற குறியீடு தேவை:\n"
"\n"
"__code1__\n"
"\n"
"பிறகு `print(format_board(board))` என்பது நாம் ஆரம்பத்தில் பார்த்ததைப் போன்ற ஒன்றை அச்சிட வேண்டும்.\n"
"ஆனால் பல வரிகளைக் கொண்ட ஒரு சரத்தை எவ்வாறு திருப்பி அனுப்புவது? மற்றும் அதை எப்படி சோதிப்பது? நாங்கள் இதைப் போன்ற ஒன்றைச் செய்ய விரும்புகிறோம்:\n"
"\n"
"    __copyable__\n"
"__code2__\n"
"\n"
"இது எப்படி வேலை செய்யாது என்பதை நீங்களே பாருங்கள்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#: 
msgid "pages.NewlinesAndFormatBoard.steps.multi_line_strings_triple_quotes.text"
msgstr "பொதுவாக ஒரு சரம் ஒரு வரியில் இருக்க வேண்டும், எனவே இது தவறானது:\n"
"\n"
"    string = \"First line\n"
"    Second line\"\n"
"    print(string)\n"
"\n"
"ஆனால் பைதான் ஒரு வழியை வழங்குகிறது! தீர்வாக *மூன்று மேற்கோள்கள்*, அதாவது சரத்தின் உள்ளடக்கத்தைச் சுற்றி ஒரு வரிசையில் \n"
"மூன்று மேற்கோள் எழுத்துகள் (`'''` அல்லது `\"\"\"`) பயன்படுத்த வேண்டும். பின்வருவனவற்றை இயக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#: 
msgid "pages.NewlinesAndFormatBoard.steps.discovering_newline.text"
msgstr "அருமை! ஒரு *மூன்று மேற்கோள் சரம்* பல வரிகளை பரப்ப அனுமதிக்கப்படுகிறது, மேலும் அவை வெளியீட்டில் காண்பிக்கப்படும்.\n"
"\n"
"ஒற்றை மற்றும் இரட்டை மேற்கோள்களைப் போலவே, மூன்று மேற்கோள்களும் மற்றொரு வகையான குறியீடாகும், புதிய வகையான சரம் அல்ல.\n"
"`\"\"\"abc\"\"\"` என்பது `\"abc\"` என்பதுதான்.\n"
"\n"
" இருப்பினும் `string` புதியதைக் கொண்டுள்ளது. பார்க்க ஓட்டில் `__program__` ஐ இயக்கவும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.NewlinesAndFormatBoard.steps.introducing_newline.text"
msgstr "அங்கே தான் ரகசியம்!\n"
"\n"
"`\\n` என்பது ***புதியவரி*** எழுத்தைக் குறிக்கிறது. இது ஒரு எழுத்து அல்லது இடைவெளி (`' '`) போன்ற மற்றொரு எழுத்து.\n"
"உங்கள் விசைப்பலகையில் Enter ஐ அழுத்துவதன் மூலம் நீங்கள் தட்டச்சு செய்யும் இரண்டு தனித்தனி வரிகளுக்கு இடையே உள்ள எழுத்து இது.\n"
"\n"
"மீண்டும், `\\n` என்பது பைதான் சரத்தில் உள்ள புதிய வரி எழுத்தைக் *குறிக்கிறது*.\n"
"சரம் உண்மையில் `\\` மற்றும் `n` ஐக் கொண்டிருக்கவில்லை, அதில் ஒரு எழுத்து மட்டுமே உள்ளது. இதை ஓட்டில் சரிபார்க்கவும்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#.     # __code0__:
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'XOX\nO  \n XO'
#.     )
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27XOX%5CnO++%5Cn+XO%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.format_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.text"
msgstr "இப்போது `format_board` செயல்பாட்டை எழுத புதிய வரி எழுத்தைப் பயன்படுத்தவும் (உங்கள் தீர்வு எந்த அளவிலான சதுர `board`க்கு வேலை செய்ய வேண்டும்):\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#.     # __code0__:
#.     def format_board(board):
#.         result = ''
#.         for i in range(len(board)):
#.             for char in board[i]:
#.                 result += char
#.             if i != len(board) - 1:
#.                 result += '\n'
#.         return result
#. 
#.     # __code3__:
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'X|O|X\n-+-+-\nO| | \n-+-+-\n |X|O'
#.     )
#. 
#.     # __code1__:
#.     def format_board(board):
#.         joined_rows = []
#.         for row in board:
#.             joined_rows.append("".join(row))
#.         return "\n".join(joined_rows)
#. 
#.     # __code2__:
#.     board = [
#.         ['X', 'O', 'X'],
#.         [' ', 'O', 'O'],
#.         [' ', 'X', ' ']
#.     ]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.format_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27X%7CO%7CX%5Cn-%2B-%2B-%5CnO%7C+%7C+%5Cn-%2B-%2B-%5Cn+%7CX%7CO%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.result
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27%5Cn%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.joined_rows
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22%5Cn%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text"
msgstr "சிறப்பானது! ஒரு பொதுவான தீர்வு இப்படித் தெரிகிறது:\n"
"\n"
"__code0__\n"
"\n"
"`join` எவ்வாறு செயல்படுகிறது என்பதைப் பார்த்து, அதை உங்கள் தீர்வில் பயன்படுத்தியிருந்தால், அது மிகவும் அருமை!\n"
"நீங்கள் இதைப் போன்ற ஏதாவது ஒன்றைக் கொண்டு தீர்த்திருக்கலாம்:\n"
"\n"
"__code1__\n"
"\n"
"நீங்கள் விரும்பினால், இப்போது [அடுத்த பக்கம்](#Types) தொடரலாம். அல்லது கூடுதல் சவாலை நீங்கள் செய்யலாம்!\n"
"\n"
"வரிசை மற்றும் நெடுவரிசை பிரிப்பான்களைக் காண்பிக்கும் `format_board` இன் மேம்படுத்தப்பட்ட பதிப்பை எழுதவும். எடுத்துக்காட்டாக,\n"
"\n"
"__code2__\n"
"\n"
"என்றால் `print(format_board(board))`இதை அச்சிடி வேண்டும்\n"
"\n"
"    X|O|X\n"
"    -+-+-\n"
"     |O|O\n"
"    -+-+-\n"
"     |X|\n"
"\n"
"மீண்டும் அது *எந்த அளவிலும்* ஆன ஒரு சதுர `board`க்கு வேலை செய்ய வேண்டும்.\n"
"\n"
"இந்தப் பயிற்சியில் `join` பயன்படுத்துவதற்கு நீங்கள் வலுவாக ஊக்குவிக்கப்படுகிறீர்கள். நாங்கள் முன்பு போலவே ஒரு சோதனையை வழங்குகிறோம், நீங்கள் கூடுதல் சோதனைகளை எழுதலாம்:\n"
"\n"
"    __copyable__\n"
"__code3__"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#: 
msgid "pages.NewlinesAndFormatBoard.steps.final_text.text"
msgstr "பெரிய வேலை! அது மிகவும் சவாலாக இருந்தது.\n"
"\n"
"இப்போது நீங்கள் பல வரிகளின் உரையை எவ்வாறு உருவாக்குவது என்பதில் தேர்ச்சி பெற்றுள்ளீர்கள், மேலும் பலகையை ஆட்டக்காரர்களுக்குக் காண்பிப்பதில் உள்ள சிக்கலைத் தீர்த்துவிட்டீர்கள்.\n"
"\n"
"அடுத்து நீங்கள் பைத்தானில் உள்ள வகைகள் மற்றும் அவற்றை எவ்வாறு மாற்றுவது மற்றும் ஆட்டக்காரர்களிடமிருந்து உள்ளீட்டைப் பெறுவது பற்றி மேலும் அறிந்து கொள்வீர்கள்.\n"
"நீங்கள் ஏற்கனவே திட்டத்தை பாதியிலேயே முடித்துவிட்டீர்கள். தொடருங்கள்!"

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Types.steps.five_different_types.text"
msgstr "இதுவரை பல்வேறு வகையான தரவுகளைப் பார்த்தோம்: சரங்கள், பட்டியல்கள், எண்கள் மற்றும் பூலியன்கள்.\n"
"இவை *வகைகள்* எனப்படும். ஒவ்வொரு மதிப்புக்கும் ஒரு வகை உள்ளது, அது எவ்வாறு செயல்படுகிறது என்பதைப் பாதிக்கிறது\n"
"மற்றும் `type` செயல்பாட்டின் மூலம் வெளிப்படுத்தலாம்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#Types
#: 
msgid "pages.Types.steps.check_type_manually.text"
msgstr "`type('Hello World')` என்பது `<class 'str'>` என்று பைதான் முதலில் தெரிவிக்கிறது. இப்போதைக்கு `class` பற்றி கவலைப்பட வேண்டாம்.\n"
"`str` என்பது *சரம்* என்பதன் சுருக்கம்.\n"
"\n"
"பின்னர் `True` என்பது `bool` (*பூலியன்* என்பதன் சுருக்கம்) மற்றும் `[1, 2, 3]` என்பது `list` வகையைக் கொண்டுள்ளது.\n"
"\n"
" எண்களுக்கு இரண்டு வகைகள் உள்ளன என்பதை நினைவில் கொள்ளவும்:\n"
"\n"
"- `int`, 'integer' என்பதன் சுருக்கம், முழு எண்களுக்கானது, அதாவது பின்னங்கள் அல்லது தசம புள்ளிகள் இல்லை.\n"
"- `float`, 'floating point number' என்பதன் சுருக்கம், தசம புள்ளி மற்றும் ஒரு பகுதியளவு கொண்ட எண்களுக்கானது.\n"
"\n"
"பெரும்பாலான சந்தர்ப்பங்களில், வெவ்வேறு வகையான எண்களைப் பற்றி நீங்கள் கவலைப்பட வேண்டியதில்லை,\n"
"ஏனெனில் நீங்கள் கணிதத்தைச் செய்யும்போது இரண்டையும் கலக்கலாம்.\n"
"\n"
"வகைகள் என்பது மற்ற மதிப்புகளைப் போலவே பல்வேறு வழிகளில் பயன்படுத்தக்கூடிய மதிப்புகள்.\n"
"எடுத்துக்காட்டாக, ஓட்டில் இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Types.steps.different_types_look_same.text"
msgstr "வெவ்வேறு வகைகளைக் கொண்ட மதிப்புகள் பொதுவாக ஒன்றுக்கொன்று முற்றிலும் வேறுபட்டவை, ஆனால் அச்சிடும்போது அவை ஒரே மாதிரியாக இருக்கும்,\n"
"இது குழப்பமானதாக இருக்கலாம். இதை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"(வித்தியாசத்தைக் கூற நீங்கள் `print(repr(123))` மற்றும் `print(repr('123'))` ஆகியவற்றைப் பயன்படுத்தலாம். `repr` என்றால் என்ன? இணையத்தில் தேடுங்கள்!)"

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Types.steps.plus_has_two_meanings.text"
msgstr "வெவ்வேறு வகைகள் வெவ்வேறு முறைகளைக் கொண்டுள்ளன மற்றும் வெவ்வேறு இயக்கிகளை ஆதரிக்கின்றன.\n"
"அதே முறை அல்லது இயக்கி வெவ்வேறு பொருட்களையும் குறிக்கலாம்.\n"
"எடுத்துக்காட்டாக, `str` மற்றும் `int` என்பதற்கு `+` எப்படி வெவ்வேறு பொருள்களைக் கொண்டுள்ளது என்பதைப் பார்க்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Types.steps.less_than_has_two_meanings.text"
msgstr "இரண்டு முழு எண்களுக்கு `+` கூட்டலாக செயல்படுகிறது, அதேசமயம் இரண்டு சரங்களுக்கு இது சரம் இணைப்பாக செயல்படுகிறது.\n"
" உள்ளீடுகளின் வகைகளிலிருந்து `+` என்பதன் பொருளை பைதான் தானாகவே கண்டுபிடிக்கும்.\n"
"இதேபோல் `<` இரண்டு சரங்கள் மற்றும் இரண்டு முழு எண்களில் வித்தியாசமாக செயல்படுகிறது:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.Types.steps.less_than_sorting_strings.text"
msgstr "எனவே `<` இரண்டு முழு எண்களுக்கு இடையில் வழக்கமான 'குறைவாக' செயல்படுகிறது,\n"
"ஏனெனில் `13` என்பது `120` ஐ விடக் குறைவாக உள்ளது,\n"
"ஆனால் இது இரண்டு சரங்களுக்கு இடையில் அகராதி வரிசையாக செயல்படுகிறது: `13` என்பது `120`க்குப் பிறகு\n"
" 'அகர வரிசைப்படி' என்பதால் `2`க்குப் பிறகு `3` வருகிறது.\n"
"\n"
"பட்டியலை வரிசைப்படுத்தும்போது இது என்ன வித்தியாசத்தை ஏற்படுத்துகிறது என்பதைப் பார்க்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#Types
#: 
msgid "pages.Types.steps.common_type_errors.text"
msgstr "`str` மற்றும் `int` க்கு இடையில் ஒரு இயக்கியைப் பயன்படுத்தினால் என்ன நடக்கும்? ஓட்டில் முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     number = '3'
#.     for i in range(number):
#.         print('Starting... ' + i + 1)
#.     print('Go!')
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Go%21%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.number
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27Starting...+%27
#: 
msgid "pages.Types.steps.fixing_type_errors_with_conversion.text"
msgstr "`range('5')` போன்ற `range` இல் முழு எண்ணுக்குப் பதிலாக அல்லது `list['3']`\n"
"போன்ற பட்டியல் சந்தாக்களில் ஒரு சரத்தைப் பயன்படுத்துவதும் பிழைக்கு வழிவகுக்கும்.\n"
"\n"
"இந்தச் சிக்கல்களில் பெரும்பாலானவை, சரத்தை முழு எண்ணாக மாற்றுவதன் மூலம், `int` ஒரு செயல்பாடாகப் பயன்படுத்துவதன் மூலம் தீர்க்க முடியும்:\n"
"`int('5')` ஆனது முழு எண்ணை `5` வழங்கும்.\n"
"அதேபோல, `str` ஒரு செயல்பாடாகப் பயன்படுத்தி ஒரு முழு எண்ணை சரமாக மாற்றலாம்:\n"
"`str(5)` சரத்தை `'5'` வழங்கும்.\n"
"\n"
"இந்தப் புதிய அறிவைப் பயன்படுத்தி, இந்த உடைந்த நிரலைச் சரிசெய்யவும்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"சரியான நிரல் அச்சிட வேண்டும்:\n"
"\n"
"    Starting... 1\n"
"    Starting... 2\n"
"    Starting... 3\n"
"    Go!\n"
"\n"
"`number` என்ற மாறியின் எந்த மதிப்புக்கும் உங்கள் தீர்வு வேலை செய்ய வேண்டும்."

#. https://futurecoder.io/course/#Types
#. 
#.     # __code0__:
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         ' 123\n1XOX\n2O  \n3 XO'
#.     )
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.format_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27+123%5Cn1XOX%5Cn2O++%5Cn3+XO%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#: 
msgid "pages.Types.steps.format_board_with_numbers.text"
msgstr "வரிசை மற்றும் நெடுவரிசை எண்களைக் கொண்ட `format_board` இன் மேம்படுத்தப்பட்ட பதிப்பை எழுதவும்:\n"
"\n"
"     123\n"
"    1XOX\n"
"    2 OO\n"
"    3 X\n"
"\n"
"எந்த ஒற்றை இலக்க அளவிலான பலகைகளுக்கும் இது வேலை செய்ய வேண்டும். இதோ ஒரு சோதனை வழக்கு:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#Types
#: 
msgid "pages.Types.steps.final_text.text"
msgstr "சிறப்பானது!\n"
"\n"
"இதன் மூலம், நீங்கள் சரங்களையும் எண்களையும் இணைக்க வேண்டியிருக்கும் போது, நீங்கள் f-சரங்களையும் பயன்படுத்தலாம்\n"
"என்பதை நினைவில் கொள்ளுங்கள். அவை பெரும்பாலும் அழகாக இருக்கும்.\n"
"\n"
"பைத்தானில் உள்ள வகைகள் மற்றும் வகைகளை மாற்றுவதன் மூலம் பொதுவான பிழைகளைத் தவிர்ப்பது எப்படி என்பதை நீங்கள் கற்றுக்கொண்டீர்கள்.\n"
"மீதமுள்ள திட்டத்துடன் தொடரவும்!"

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.InteractiveProgramsWithInput.steps.first_input.text"
msgstr "இதுவரை நாம் எழுதிய திட்டங்கள் ஊடாடக்கூடியவை அல்ல.\n"
"எங்கள் ஊடாடும் டிக்-டாக்-டோ விளையாட்டை உருவாக்க, வீரர்களிடமிருந்து உள்ளீட்டைப் பெறுவதற்கான ஒரு முறை எங்களுக்குத் தேவைப்படும்.\n"
"உள்ளமைக்கப்பட்ட `input` செயல்பாட்டின் மூலம் அதைச் செய்ய பைதான் நம்மை அனுமதிக்கிறது. இந்த நிரலை இயக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"`name = input()` இயங்கும் போது, நிரல் உண்மையில் நின்று, ஓட்டில் தட்டச்சு செய்து Enter ஐ அழுத்தும் வரை காத்திருக்கும்,\n"
"எனவே அதை முடிக்க நீங்கள் அதைச் செய்ய வேண்டும்."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#.     # __code0__:
#.     super_secret_number = 7
#.     print("What number am I thinking of?")
#.     guess = input()
#.     if guess == super_secret_number:
#.         print("Amazing! Are you psychic?")
#.     else:
#.         print("Nope!")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.guess
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Amazing%21+Are+you+psychic%3F%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.super_secret_number
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22What+number+am+I+thinking+of%3F%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22Nope%21%22
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text"
msgstr "நீங்கள் தட்டச்சு செய்த அனைத்தும் (இறுதியில் Enter ஐ அழுத்துவது உட்பட) `input()` செயல்பாட்டிலிருந்து ஒரு சரமாக திரும்பும்.\n"
"\n"
"பயனர் என்ன தட்டச்சு செய்தாலும், `input()` ***எப்பொழுதும் ஒரு சரத்தை வழங்கும் என்பதைப் புரிந்துகொள்வது அவசியம்.\n"
"அந்த சரத்தை உங்களுக்குத் தேவையான வகைக்கு மாற்றுவது உங்களுடையது.\n"
"இந்த விவரத்தை மறந்துவிடுவது குழப்பமான பிழைகளின் பொதுவான ஆதாரமாகும்.\n"
"\n"
"எடுத்துக்காட்டாக, இந்த நிரல் ஒரு பார்வையில் நன்றாகத் தெரிகிறது, ஆனால் நீங்கள் அதை முயற்சித்தால், அது உண்மையில் வேலை செய்யவில்லை என்பதை நீங்கள் காண்பீர்கள்:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"நிரலை சரிசெய்யவும், இதனால் பயனர் `7` ஐ உள்ளிடும்போது நிரல் `அற்புதம்! நீங்கள் மனநோயாளியா?` என எதிர்பார்த்தது."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#.     # __code0__:
#.     if int(guess) == super_secret_number:
#. 
#.     # __code1__:
#.     if guess == str(super_secret_number):
#. 
#.     # __code2__:
#.     super_secret_number = '7'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.guess
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.super_secret_number
#: 
msgid "pages.InteractiveProgramsWithInput.steps.final_text.text"
msgstr "சரியானது!\n"
"\n"
"குறைந்தது மூன்று திருத்தங்கள் இங்கே வேலை செய்யும். நீங்கள் உள்ளீட்டை ஒரு எண்ணாக மாற்றலாம்:\n"
"\n"
"__code0__\n"
"\n"
"அல்லது சரியான பதிலை ஒரு சரமாக மாற்றலாம்:\n"
"\n"
"__code1__\n"
"\n"
"அல்லது இதை ஒரு சரமாக மாற்றவும்:\n"
"\n"
"__code2__"

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.NestedListAssignment.steps.modify_list_in_function.text"
msgstr "பயனரிடமிருந்து உள்ளீட்டை எப்படிப் பெறுவது என்று பார்த்தோம், இப்போது அதைப் பயன்படுத்தி பலகையில் துண்டுகளை\n"
"வைத்து விளையாட்டை விளையாடுவோம். தொடங்குபவர்களுக்கு, இந்தக் குறியீட்டை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_two_lines.text"
msgstr "`play_move(game_board, 'X')` என அழைப்பது உண்மையில்  `game_board` ஐ நேரடியாக எவ்வாறு *மாற்றுகிறது* என்பதைக் கவனியுங்கள்.\n"
" `play_move` அழைப்பின் உள்ளே உள்ள மாறி `board` மற்றும் `play_game`க்கான \n"
"அழைப்பின் உள்ளே உள்ள மாறி `game_board` ஆகியவை ஒரே பட்டியல் பொருளைக் குறிக்கும். \n"
"நகலெடுப்பது இல்லை.பைதான் ஆசிரியர் இதை அம்புகளால் காட்டுவதில் வல்லவர்.\n"
"\n"
"இந்தச் சந்தர்ப்பத்தில் எதையும் திரும்பப் பெறுவதற்கு `play_move` தேவையில்லை, அது `board` ஐ மாற்றியமைக்கலாம்\n"
"மற்றும் அழைப்பாளர் (இந்த வழக்கில் `play_game`) விளைவைக் காண்பார். \n"
"\n"
"இருப்பினும், எங்கள் பலகை இரு பரிமாணமானது, உள்ளமை பட்டியலால் குறிப்பிடப்படுகிறது.\n"
"எனவே உள் பட்டியலின் ஒரு உறுப்புக்கு `player` ஒதுக்க வேண்டும், இது போன்றது:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#.     # __code3__:
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#.     # __code0__:
#.     row = board[1]
#.     row[0] = player
#. 
#.     # __code1__:
#.     board[1][0] = player
#. 
#.     # __code2__:
#.     2
#.     1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.play_game
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.joined_row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.player
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.format_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.first_row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.play_move
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27%5CnX+to+play%3A%5Cn%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%27%5CnO+to+play%3A%5Cn%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.joined_rows
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22%5Cn%22
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.text"
msgstr "இந்த இரண்டு வரிகள்:\n"
"\n"
"__code0__\n"
"\n"
"ஒன்றை ஒன்றாக இணைக்கலாம்:\n"
"\n"
"__code1__\n"
"\n"
"இரண்டு குறியீடுகளும் சரியாகச் சமமானவை. உள் பட்டியலை *பெற* பைதான் முதலில் `board[1]`ஐ மதிப்பிடுகிறது,\n"
"அதே சமயம் `[0] = ...` ஆனது `board[1]` இன் உறுப்பை அமைக்கிறது.\n"
"`birdseye` இல் `board[1]` மதிப்பைக் காணலாம், ஏனெனில் இது ஒரு வெளிப்பாடு,\n"
"மேலும் நீங்கள் அதை வேறு எந்த வெளிப்பாட்டிலும் மாற்றலாம்.\n"
"\n"
"உள்ளமைக்கப்பட்ட பட்டியல்களில் கூறுகளை எவ்வாறு அமைப்பது என்பது இப்போது உங்களுக்குத் தெரியும், இதை ஊடாடுவதற்கான நேரம் இது!\n"
"எப்போதும் `board[1][0]` இல் விளையாடுவதற்குப் பதிலாக, எங்கு விளையாடுவது என்பதைத் தீர்மானிக்க\n"
"பயனரிடமிருந்து உள்ளீட்டைப் பெறும் `play_move` இன் சொந்தப் பதிப்பை எழுதவும்.\n"
"இது `input()` என்பதை இரண்டு முறை அழைக்க வேண்டும், எனவே பயனர் வரிசையையும் நெடுவரிசையையும்\n"
"இரண்டு தனித்தனி எண்களாகக் கொடுக்கலாம். மேலும், எங்கள் பயனர்கள் நிரலாளர்கள் அல்ல, எனவே அது\n"
"1 இல் இருந்து எண்ணத் தொடங்குகிறார்கள், 0 அல்ல.\n"
"\n"
"எடுத்துக்காட்டாக, பயனர் இந்த உள்ளீடுகளில் தட்டச்சு செய்தால்:\n"
"\n"
"__code2__\n"
"\n"
"அதாவது அவர்கள் இரண்டாவது வரிசையிலும் முதல் நெடுவரிசையிலும் ஒரு நகர்வை இயக்க விரும்புகிறார்கள்.\n"
"எங்கள் அசல் உதாரணம்.\n"
"\n"
"இதோ சில தொடக்கக் குறியீடு:\n"
"\n"
"    __copyable__\n"
"__code3__\n"
"\n"
"இது `play_move` என இருமுறை அழைக்கிறது, எனவே பயனர் இரண்டு இணை எண்களை உள்ளிட வேண்டும்.\n"
"ஒரு 'game' எப்படி இருக்க வேண்டும் என்பதற்கான உதாரணம்:\n"
"\n"
"     123\n"
"    1\n"
"    2\n"
"    3\n"
"\n"
"    X விளையாட:\n"
"\n"
"__code2__\n"
"     123\n"
"    1\n"
"    2X\n"
"    3\n"
"\n"
"    O விளையாட:\n"
"\n"
"    1\n"
"    3\n"
"     123\n"
"    1  O\n"
"    2X\n"
"    3\n"
"\n"
"கொடுக்கப்பட்ட குறியீட்டை நீங்கள் சரியாகப் பயன்படுத்த வேண்டியதில்லை. என்ன நடக்கிறது என்ற உணர்வை உங்களுக்கு வழங்குவதற்காக.\n"
"முக்கியமான பொருள் என்னவென்றால், உங்கள் `play_move` செயல்பாடு `board` வாதத்தை சரியாக மாற்றியமைக்கிறது.\n"
"இது எதையும் திரும்பப் பெறவோ அச்சிடவோ தேவையில்லை, அது சரிபார்க்கப்படாது.\n"
"\n"
"பயனர் எப்போதும் சரியான எண்களை உள்ளிடுவார் என்று நீங்கள் கருதலாம். வரம்பிற்கு வெளியே உள்ள எண்கள் அல்லது எண்களே\n"
"இல்லாத உள்ளீடுகள் போன்ற தவறான உள்ளீடுகளை எவ்வாறு கையாள்வது என்பதை பின்னர் கற்றுக்கொள்வோம்."

#. https://futurecoder.io/course/#NestedListAssignment
#: 
msgid "pages.NestedListAssignment.steps.final_text.text"
msgstr "புத்திசாலித்தனம்! எல்லாவற்றையும் ஒன்றாக இணைக்க நீங்கள் கிட்டத்தட்ட தயாராகிவிட்டீர்கள், தொடரவும்!"

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.MakingTheBoard.steps.naive_make_board.text"
msgstr "இதுவரை பலகை உங்களுக்காக உள்ளமைக்கப்பட்ட பட்டியலாக வழங்கப்பட்டுள்ளது.\n"
"ஆனால் முழு நிரலுக்கும், அதை நீங்களே உருவாக்க வேண்டும்.\n"
"எளிதாக இருக்க வேண்டும், இல்லையா? அதைச் செய்வதற்கான சில குறியீடுகள் இங்கே:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"இது நெருக்கமாக உள்ளது, ஆனால் அதில் ஒரு நுட்பமான சிக்கல் உள்ளது.\n"
"நீங்கள் குறியீட்டை புரிந்துகொண்டுள்ளீர்கள் என்பதை உறுதிப்படுத்திக் கொள்ளுங்கள்,\n"
"மற்றும் பிழையைக் கண்டறிய முடிந்தால் கூடுதல் புள்ளிகள்!\n"
"இல்லையெனில், வருத்தப்பட வேண்டாம் அல்லது அதிக நேரத்தை வீணாக்காதீர்கள்."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#.     # __code0__:
#.     board[0][0] = 'X'
#.     board[1][0] = 'X'
#.     board[2][0] = 'X'
#. 
#.     # __code4__:
#.     board[1][0] = 'X'
#.     board[2][0] = 'X'
#. 
#.     # __code1__:
#.     board = [row, row, row]
#. 
#.     # __code2__:
#.     board[0][0] = 'X'
#. 
#.     # __code3__:
#.     row[0] = 'X'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.text"
msgstr "என்ன நடந்தது என்று பார்க்க முடியுமா?\n"
"\n"
" ஒவ்வொரு வரிசையும் முதல் நிலையில் `'X'` கிடைத்தது!\n"
"குறியீடு உண்மையில் இதைச் செய்தது போல் உள்ளது:\n"
"\n"
"__code0__\n"
"\n"
"என்ன தவறு என்பதை நீங்களே கண்டுபிடிக்க முயற்சிக்கவும்.\n"
"ஆனால் மீண்டும், இது தந்திரமானது, அதனால் உங்களை பைத்தியமாக ஆக்கி கொள்ளாதீர்கள்.\n"
"\n"
"நீங்கள் விரும்பினால், இங்கே சில குறிப்புகள் உள்ளன:\n"
"\n"
" - சில பிழைத்திருத்தங்கள் மூலம் குறியீட்டை இயக்க முயற்சிக்கவும்.\n"
" - பரிசோதனை. குறியீட்டில் மாற்றங்களைச் செய்து என்ன நடக்கிறது என்பதைப் பார்க்கவும்.\n"
" - இல்லை, நான் மேலே பரிந்துரைத்தபடி குறியீடு 3 பணிகளைச் செய்யவில்லை. ஒரே ஒரு பட்டியல் ஒதுக்கீடு இருந்தது.\n"
" - மறைக்கப்பட்ட சுழல்கள் அல்லது எதுவும் இல்லை.\n"
" -  `board` எத்தனை பட்டியல்களைக் கொண்டுள்ளது? 3?\n"
" - முந்தைய பக்கத்தில் என்ன நடந்தது என்பதற்கான நுட்பமான குறிப்பு உள்ளது.\n"
" - இந்த வகையான பிரச்சனை நேரடியாக விளக்கப்பட்ட முந்தைய அத்தியாயத்திலிருந்து ஒரு பக்கம் உள்ளது.\n"
" - குறிப்பாக [இந்தப் பக்கம்](#EqualsVsIs).\n"
" - பைதான் ஆசிரியர் மூலம் குறியீட்டை இயக்க முயற்சிக்கவும்.\n"
"\n"
" சரி, நீங்கள் தயாராக இருந்தால், இதோ பதில்.\n"
"\n"
" பட்டியல் `row` ஒரு முறை மட்டுமே உருவாக்கப்பட்டது, மேலும் பல முறை மீண்டும் பயன்படுத்தப்பட்டது.\n"
"`board` ஒரே பட்டியலை மூன்று முறை கொண்டுள்ளது. பிரதிகள் அல்ல, மூன்று இடங்களில் ஒரே ஒரு பட்டியல்.\n"
"இது இதைச் செய்தது போல் உள்ளது:\n"
"\n"
"__code1__\n"
"\n"
"அதாவது இந்தக் குறியீடு:\n"
"\n"
"__code2__\n"
"\n"
"என்பதற்குச் சமம்:\n"
"\n"
"__code3__\n"
"\n"
"இது `board` இல் உள்ள 'all the lists' ஐ பாதிக்கிறது, ஏனெனில் அவை அனைத்தும் ஒரே பட்டியல் `row`.\n"
"வேறு வார்த்தைகளில் கூறுவதானால், மேலே உள்ள வரியானது இந்த இரண்டு வரிகளில் ஒவ்வொன்றிற்கும் *மேலும்* சமமானதாகும்:\n"
"\n"
"__code4__\n"
"\n"
"ஏனெனில் `row` என்பது `board[0]`, `board[1]` மற்றும் `board[2]` அனைத்தும் ஒரே நேரத்தில்.\n"
"\n"
"இந்தப் பிரச்சனை ஏற்படாமல் இருக்க `make_board` ஐச் சரிசெய்வதே இப்போது உங்கள் வேலை.\n"
"இது இன்னும் நீளமான `size` பட்டியலை வழங்க வேண்டும், அங்கு ஒவ்வொரு உறுப்பும் நீளம் `size`\n"
"பட்டியலாகவும் இருக்கும், அங்கு ஒவ்வொரு உறுப்பும் சரம் `' '` ஆகும்.\n"
"துணைப்பட்டியல்கள் அனைத்தும் தனித்தனி பட்டியல் பொருள்களாக இருக்க வேண்டும், ஒரே பட்டியல்\n"
"மீண்டும் வரக்கூடாது."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#.     # __code2__:
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#. 
#.     # __code0__:
#.     def make_board(size):
#.         board = []
#.         for _ in range(size):
#.             row = []
#.             for _ in range(size):
#.                 row.append(' ')
#.             board.append(row)
#.         return board
#. 
#.     # __code1__:
#.     board.append(row.copy())
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.make_cube
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.test
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.size
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.make_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.cube
#: 
msgid "pages.MakingTheBoard.steps.final_text.text"
msgstr "நல்லது!\n"
"\n"
"ஒவ்வொரு முறையும் புதிய `row`வை உருவாக்க, முதல் சுழலை இரண்டாவது உள்ளே நகர்த்துவதன் மூலம் இதைத் தீர்க்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"ஒவ்வொரு முறையும் `row`இன் நகலை உருவாக்குவது மற்றொரு வழி, எ.கா அசல் குறியீட்டை வைத்திருங்கள் ஆனால் ஒரு வரியை மாற்றலாம்:\n"
"\n"
"__code1__\n"
"\n"
"உங்களால் முடியும் `row[:]` அல்லது `list(row)` உடன் `row` ஐயும் நகலெடுக்கவும். ஆனால் இந்த முறைகள்\n"
"அனைத்தும் பட்டியலின் *மேலோட்டமான நகலை* உருவாக்குகின்றன என்பதை அறிவது முக்கியம்.\n"
"அதாவது ஒவ்வொரு உறுப்புக்கும் நகல்களை உருவாக்காமல், முழுப் பட்டியலையும் மேல் மட்டத்தில் நகலெடுக்கிறார்கள்.\n"
"இந்தச் சந்தர்ப்பத்தில், `row` என்பது மாற்ற முடியாத மற்றும் நகலெடுக்கத் தேவையில்லாத சரங்களை மட்டுமே கொண்டுள்ளது.\n"
"ஆனால் உறுப்புகள் பட்டியல்கள் போன்ற மாறக்கூடிய பொருள்களாக இருந்தால்,\n"
"`board` போன்று, நீங்கள் மீண்டும் அதே சிக்கலை எதிர்கொள்ளலாம்.\n"
"இதோ ஒரு உதாரணம்:\n"
"\n"
"    __copyable__\n"
"__code2__\n"
"\n"
"இங்கு `cube`ன் ஒவ்வொரு உறுப்பும் தனித்தனி பட்டியல், `board`ன் நகல்.\n"
"அந்த நகல்களில் ஒவ்வொன்றிலும், ஒவ்வொரு உறுப்பும் தனித்தனி பட்டியல், `row`யின் நகல்.\n"
"ஆனால் `board` இன் ஆழமற்ற பிரதிகள் அனைத்தும் ஒன்றோடொன்று இருக்கும் அதே முதல் உறுப்பு (`row`வின் முதல் நகல்),\n"
"அதே இரண்டாவது உறுப்பு மற்றும் பல.\n"
"`make_board` ஐ மாற்றுவது இங்கு எதையும் சரிசெய்யாது, தீர்வு:\n"
"\n"
"- ஒவ்வொரு முறையும் புதிய `board` ஐ உருவாக்க `make_board` ஐ மீண்டும் மீண்டும் அழைக்கவும் அல்லது\n"
"- `board.copy()` என்பதற்குப் பதிலாக `deepcopy` செயல்பாட்டைப் பயன்படுத்தவும்.\n"
"   உள்ளமைக்கப்பட்ட பொருட்களின் ஒவ்வொரு மட்டத்திலும் `deepcopy` நகல்களை உருவாக்குகிறது.\n"
"\n"
"நீங்கள் இன்னும் குழப்பமாக இருந்தால், கவலைப்பட வேண்டாம்.\n"
"எதிர்காலத்தில் உங்கள் குறியீடு வித்தியாசமாக நடந்து கொள்வதைச் சமாளிக்க இது உங்களைத் தயார்படுத்துகிறது.\n"
"நீங்கள் இப்போது இதைப் புரிந்து கொள்ள வேண்டிய அவசியமில்லை, இந்தப் பாடம் இன்னும் மதிப்புமிக்கதாக இருக்கும்.\n"
"\n"
"எப்படியிருந்தாலும், நாங்கள் முழு விளையாட்டையும் செய்ய தயாராக இருக்கிறோம். உன்னால் முடியும்!"

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#.     # __code0__:
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22It%27s+a+draw%21%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.print_draw
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%27%5Cn++%7B%22%2B%22.join%28%22-%22+%2A+size%29%7D%5Cn%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%27%7Bi+%2B+1%7D+%7B%22%7C%22.join%28row%29%7D%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.print_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.winning_line
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.make_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.column_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.board_size
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.play_game
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.format_board
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.size
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.strings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.main_diagonal_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.player1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.player2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.col
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.line
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.diagonal_winner
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.player
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%27++%7B%22+%22.join%28str%28i+%2B+1%29+for+i+in+range%28size%29%29%7D%5Cn%7Bline.join%28rows%29%7D%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.play_move
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.rows
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.row
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%27%7Bplayer%7D+wins%21%27
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.f%27%7Bplayer%7D+to+play%3A%27
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.text"
msgstr "எல்லாவற்றையும் ஒன்றாக இணைக்க வேண்டிய நேரம் இது! தொடங்குவதற்கு சில குறியீடு கீழே உள்ளது.\n"
"\n"
"சிக்கலின் சில பகுதிகளைத் தீர்ப்பதற்காக முந்தைய பக்கங்களில் நாங்கள் வரையறுத்த பல்வேறு செயல்பாடுகளின் செயலாக்கங்கள்\n"
"இதில் அடங்கும், அவற்றைக் குறைக்க இன்னும் நீங்கள் கற்றுக் கொள்ளாத சில தந்திரங்களைப் பயன்படுத்துகிறது. அவைகளை மாற்ற வேண்டாம்.\n"
"\n"
"`play_game` ஐச் சரியாகச் செயல்படுத்துவதே உங்கள் பணி. தற்போதைய செயல்படுத்தல் விளையாட்டின்\n"
"தொடக்கத்தில் என்ன நடக்க வேண்டும் என்பதைக் காட்டுகிறது, ஆனால் அது முழுமையடையாது.\n"
"தீர்வு எந்த பலகை அளவிற்கும் வேலை செய்ய வேண்டும் மற்றும் அது முடியும் வரை விளையாட்டை தொடர வேண்டும்.\n"
"`play_game` செய்ய வேண்டிய கடைசி செயல், `winner(board)` உண்மையாக இருந்தால் `print_winner(player)`\n"
"அல்லது வெற்றியாளர் இல்லாமல் பலகை நிரப்பப்பட்டால் `print_draw()`வை அழைக்க வேண்டும்.\n"
"\n"
"பயனர் செல்லுபடியாகும் உள்ளீடுகளை மட்டுமே உள்ளிடுவார்,\n"
"அதாவது 1 முதல் `board_size` வரையிலான எண்கள், பலகையில் ஏற்கனவே எடுக்கப்படாத கலத்தைத் தேர்வுசெய்யும்.\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#: 
msgid "pages.TheFullTicTacToeGame.steps.final_text.text"
msgstr "### ***வாழ்த்துக்கள்!!!***\n"
"\n"
"நீங்கள் செய்தீர்கள்!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.final_text.text
#. 
#.     'hello ' + 'world'
#.     'hello' + ' world'
#.     'hello' + ' ' + 'world'
#: 
msgid "code_bits.'hello '"
msgstr "'hello '"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.final_text.text
#. 
#.     'hello ' + 'world'
#.     'hello' + ' world'
#.     'hello' + ' ' + 'world'
#: 
msgid "code_bits.'world'"
msgstr "'world'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.final_text.text
#. 
#.     'hello ' + 'world'
#.     'hello' + ' world'
#.     'hello' + ' ' + 'world'
#: 
msgid "code_bits.'hello'"
msgstr "'hello'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.final_text.text
#. 
#.     'hello ' + 'world'
#.     'hello' + ' world'
#.     'hello' + ' ' + 'world'
#: 
msgid "code_bits.' world'"
msgstr "' world'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.text
#. 
#.     word = 'Goodbye'
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.final_text.text
#. 
#.     if word.lower() == 'yes':
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_lower_upper.text
#. 
#.     word.lower()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign.text
#. 
#.     word = 'Hello'
#: 
msgid "code_bits.word"
msgstr "word"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign.text
#. 
#.     word = 'Hello'
#: 
msgid "code_bits.'Hello'"
msgstr "'Hello'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.EqualsVsIs.steps.two_separate_lists.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.append_vs_concatenate.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.one_indented_line.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.two_indented_lines.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.first_input.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.birdseye_loop_example.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.first_birdseye_example.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotTrueOrTrue.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.InputAliceBob.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.naive_make_board.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ModifyingWhileIterating.steps.run_broken_with_python_tutor.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.cannot_return_multiple_values.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.double_return_in_one_function.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MultiLineExpressions.steps.valid_multiline.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.modify_list_in_function.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_two_lines.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.introducing_newline.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.one_way_to_print_board.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.brokn_kyboard.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.mutation_string_append.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_count_index.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_in_step.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_lower_upper.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.if_equals_replacing_characters.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.different_types_look_same.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.five_different_types.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.less_than_has_two_meanings.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.less_than_sorting_strings.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.plus_has_two_meanings.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithPythonTutor.steps.run_with_python_tutor.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.first_print.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_assign_goodbye.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_plus_name.text
#. 
#.     __program_indented__
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.WritingPrograms.steps.editor_hello_world.text
#. 
#.     __program_indented__
#: 
msgid "code_bits.__program_indented__"
msgstr "__program_indented__"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.text
#. 
#.     word = 'Goodbye'
#.     print(sentence)
#: 
msgid "code_bits.'Goodbye'"
msgstr "'Goodbye'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.final_text.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     new_sentence = ''
#.     for char in sentence:
#.         new_sentence += char
#.         if excited:
#.             new_sentence += '!'
#. 
#.     sentence = new_sentence
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.undefined_char.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     if excited:
#.         char = '!'
#.     sentence += char
#. 
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_confused_exercise.text
#. 
#.     sentence = 'Hello World'
#.     excited = False
#.     confused = True
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.text
#. 
#.     word = 'Goodbye'
#.     print(sentence)
#: 
msgid "code_bits.sentence"
msgstr "sentence"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_1.text
#. 
#.     name = 'World'
#. 
#.     for character in name:
#.         print(character)
#.         print('---')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.missing_indentation.text
#. 
#.     for character in name:
#.         print(character)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.missing_indentation.text
#. 
#.     for character in name: print(character)
#: 
msgid "code_bits.character"
msgstr "character"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_1.text
#. 
#.     name = 'World'
#. 
#.     for character in name:
#.         print(character)
#.         print('---')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_spaced.text
#. 
#.     name = 'World'
#.     line = ''
#.     for char in name:
#.         line = line + char
#.         print(line)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name.text
#. 
#.     name = "Alice"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#.     name = "Bob"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you.text
#. 
#.     def greet(name):
#.         print(f"Hello {name}!")
#.         print("How are you?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.missing_indentation.text
#. 
#.     for character in name:
#.         print(character)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.missing_indentation.text
#. 
#.     for character in name: print(character)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     print(f"{name} went to {meal} with {friend}.")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake.text
#. 
#.     return name == "Alice" or "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake.text
#. 
#.     return name == "Alice" or name == "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     (name == "Alice") or ("Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     name == "Alice" or "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     name == ("Alice" or "Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     return name in ["Alice", "Bob", "Charlie"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.FurtherImprovement.text
#. 
#.     name == "Alice" or name == "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr.text
#. 
#.     if name == "Alice" or name == "Bob":
#.         return True
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr.text
#. 
#.     if name == "Alice":
#.         return True
#.     elif name == "Bob":
#.         return True
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.text
#. 
#.     name = 'Alice'
#: 
msgid "code_bits.name"
msgstr "name"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_1.text
#. 
#.     name = 'World'
#. 
#.     for character in name:
#.         print(character)
#.         print('---')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_spaced.text
#. 
#.     name = 'World'
#.     line = ''
#.     for char in name:
#.         line = line + char
#.         print(line)
#: 
msgid "code_bits.'World'"
msgstr "'World'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle.text
#. 
#.     temp = hello
#.     hello = temp + '!'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle.text
#. 
#.     temp = hello + '!'
#.     hello = temp
#: 
msgid "code_bits.temp"
msgstr "temp"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle.text
#. 
#.     temp = hello
#.     hello = temp + '!'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle.text
#. 
#.     temp = hello + '!'
#.     hello = temp
#: 
msgid "code_bits.hello"
msgstr "hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_spaced.text
#. 
#.     name = 'World'
#.     line = ''
#.     for char in name:
#.         line = line + char
#.         print(line)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined.text
#. 
#.     line += char
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined.text
#. 
#.     line = line + char
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.line"
msgstr "line"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_spaced.text
#. 
#.     name = 'World'
#.     line = ''
#.     for char in name:
#.         line = line + char
#.         print(line)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined.text
#. 
#.     line += char
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined.text
#. 
#.     line = line + char
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.final_text.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     new_sentence = ''
#.     for char in sentence:
#.         new_sentence += char
#.         if excited:
#.             new_sentence += '!'
#. 
#.     sentence = new_sentence
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.undefined_char.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     if excited:
#.         char = '!'
#.     sentence += char
#. 
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_elif.text
#. 
#.     if char == 'A':
#.         char = 'T'
#.     elif char == 'T':
#.         char = 'A'
#.     elif char == 'G':
#.         char = 'C'
#.     elif char == 'C':
#.         char = 'G'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_else.text
#. 
#.     if char == 'A':
#.         char = 'T'
#.     else:
#.         if char == 'T':
#.             char = 'A'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         result = ''
#.         for i in range(len(board)):
#.             for char in board[i]:
#.                 result += char
#.             if i != len(board) - 1:
#.                 result += '\n'
#.         return result
#: 
msgid "code_bits.char"
msgstr "char"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.final_text.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     new_sentence = ''
#.     for char in sentence:
#.         new_sentence += char
#.         if excited:
#.             new_sentence += '!'
#. 
#.     sentence = new_sentence
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.undefined_char.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     if excited:
#.         char = '!'
#.     sentence += char
#. 
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_confused_exercise.text
#. 
#.     sentence = 'Hello World'
#.     excited = False
#.     confused = True
#: 
msgid "code_bits.'Hello World'"
msgstr "'Hello World'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.final_text.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     new_sentence = ''
#.     for char in sentence:
#.         new_sentence += char
#.         if excited:
#.             new_sentence += '!'
#. 
#.     sentence = new_sentence
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.undefined_char.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     if excited:
#.         char = '!'
#.     sentence += char
#. 
#.     print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_confused_exercise.text
#. 
#.     sentence = 'Hello World'
#.     excited = False
#.     confused = True
#: 
msgid "code_bits.excited"
msgstr "excited"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_confused_exercise.text
#. 
#.     sentence = 'Hello World'
#.     excited = False
#.     confused = True
#: 
msgid "code_bits.confused"
msgstr "confused"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.final_text.text
#. 
#.     sentence = 'Hello World'
#.     excited = True
#. 
#.     new_sentence = ''
#.     for char in sentence:
#.         new_sentence += char
#.         if excited:
#.             new_sentence += '!'
#. 
#.     sentence = new_sentence
#.     print(sentence)
#: 
msgid "code_bits.new_sentence"
msgstr "new_sentence"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     first = x1
#. 
#.     if x2 < first:
#.         first = x2
#. 
#.     if x3 < first:
#.         first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     if x1 < x2:
#.         if x1 < x3:
#.             first = x1
#.         else:
#.             first = x3
#.     else:
#.         if x2 < x3:
#.             first = x2
#.         else:
#.             first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise.text
#. 
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#: 
msgid "code_bits.x1"
msgstr "x1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.final_text.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise.text
#. 
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#: 
msgid "code_bits.'Charlie'"
msgstr "'Charlie'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     first = x1
#. 
#.     if x2 < first:
#.         first = x2
#. 
#.     if x3 < first:
#.         first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     if x1 < x2:
#.         if x1 < x3:
#.             first = x1
#.         else:
#.             first = x3
#.     else:
#.         if x2 < x3:
#.             first = x2
#.         else:
#.             first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise.text
#. 
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#: 
msgid "code_bits.x2"
msgstr "x2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.final_text.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise.text
#. 
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.text
#. 
#.     name = 'Alice'
#: 
msgid "code_bits.'Alice'"
msgstr "'Alice'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     first = x1
#. 
#.     if x2 < first:
#.         first = x2
#. 
#.     if x3 < first:
#.         first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     if x1 < x2:
#.         if x1 < x3:
#.             first = x1
#.         else:
#.             first = x3
#.     else:
#.         if x2 < x3:
#.             first = x2
#.         else:
#.             first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise.text
#. 
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#: 
msgid "code_bits.x3"
msgstr "x3"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.final_text.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise.text
#. 
#.     x1 = 'Charlie'
#.     x2 = 'Alice'
#.     x3 = 'Bob'
#: 
msgid "code_bits.'Bob'"
msgstr "'Bob'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     first = x1
#. 
#.     if x2 < first:
#.         first = x2
#. 
#.     if x3 < first:
#.         first = x3
#. 
#.     print(first)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.final_text.text
#. 
#.     if x1 < x2:
#.         if x1 < x3:
#.             first = x1
#.         else:
#.             first = x3
#.     else:
#.         if x2 < x3:
#.             first = x2
#.         else:
#.             first = x3
#. 
#.     print(first)
#: 
msgid "code_bits.first"
msgstr "first"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers.text
#. 
#.     numbers = [1, 2] + [3, 4]
#.     print(numbers)
#.     new_numbers = []
#.     new_numbers += numbers
#.     new_numbers += [5]
#.     print(new_numbers)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers.text
#. 
#.     numbers = [3, 1, 4, 1, 5, 9, 2, 6, 5]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers.text
#. 
#.     numbers = [3, 1, 4, 1, 5, 9, 2, 6, 5]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.nested_list_nested_loop_example.text
#. 
#.     for sublist in numbers:
#.         for num in sublist:
#.             print(num)
#.         print('---')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.nested_list_nested_loop_example.text
#. 
#.     numbers = [[1, 2, 3], [4, 5], [6], []]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ModifyingWhileIterating.steps.make_copy.text
#. 
#.     for number in numbers.copy():
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function.text
#. 
#.     def double_numbers(numbers):
#.         doubles = []
#.         for x in numbers:
#.             doubles.append(x * 2)
#.         return doubles
#. 
#.     assert_equal(double_numbers([1, 2, 3]), [2, 4, 6])
#: 
msgid "code_bits.numbers"
msgstr "numbers"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers.text
#. 
#.     numbers = [1, 2] + [3, 4]
#.     print(numbers)
#.     new_numbers = []
#.     new_numbers += numbers
#.     new_numbers += [5]
#.     print(new_numbers)
#: 
msgid "code_bits.new_numbers"
msgstr "new_numbers"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers.text
#. 
#.     some_list += [element]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers.text
#. 
#.     some_list.append(element)
#: 
msgid "code_bits.element"
msgstr "element"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers.text
#. 
#.     some_list += [element]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers.text
#. 
#.     some_list.append(element)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.index_predict_exercise.text
#. 
#.     some_list.index(value)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_predict_exercise.text
#. 
#.     some_list.pop(index)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_predict_exercise.text
#. 
#.     some_list.remove(value)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_predict.text
#. 
#.     some_list[index] = new_value
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_predict_exercise.text
#. 
#.     some_list.count(value)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.in_predict_exercise.text
#. 
#.     value in some_list
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sorted_predict_exercise.text
#. 
#.     sorted(some_list)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sum_predict_exercise.text
#. 
#.     sum(some_list)
#: 
msgid "code_bits.some_list"
msgstr "some_list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#.             break
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     found = False
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#. 
#.     print(found)
#: 
msgid "code_bits.found"
msgstr "found"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters.text
#. 
#.     thing = "Hello"
#.     n = 3
#.     for _ in range(n):
#.         print(thing)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#.             break
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     found = False
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#. 
#.     print(found)
#: 
msgid "code_bits.thing"
msgstr "thing"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#.             break
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     found = False
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#. 
#.     print(found)
#: 
msgid "code_bits.things"
msgstr "things"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#.             break
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.final_text.text
#. 
#.     found = False
#.     for thing in things:
#.         if thing == thing_to_find:
#.             found = True
#. 
#.     print(found)
#: 
msgid "code_bits.thing_to_find"
msgstr "thing_to_find"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range.text
#. 
#.     [0, 1, 2, ..., len(words) - 2, len(words) - 1]
#: 
msgid "code_bits.words"
msgstr "words"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise.text
#. 
#.     for i in range(len(string1)):
#.         char1 = string1[i]
#.         char2 = string2[i]
#.         print(char1 + ' ' + char2)
#: 
msgid "code_bits.char1"
msgstr "char1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise.text
#. 
#.     for i in range(len(string1)):
#.         char1 = string1[i]
#.         char2 = string2[i]
#.         print(char1 + ' ' + char2)
#: 
msgid "code_bits.char2"
msgstr "char2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise.text
#. 
#.     for i in range(len(string1)):
#.         char1 = string1[i]
#.         char2 = string2[i]
#.         print(char1 + ' ' + char2)
#: 
msgid "code_bits.string1"
msgstr "string1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise.text
#. 
#.     for i in range(len(string1)):
#.         char1 = string1[i]
#.         char2 = string2[i]
#.         print(char1 + ' ' + char2)
#: 
msgid "code_bits.string2"
msgstr "string2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_predict.text
#. 
#.     some_list[index] = new_value
#: 
msgid "code_bits.new_value"
msgstr "new_value"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_predict_exercise.text
#. 
#.     some_list.pop(index)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_predict.text
#. 
#.     some_list[index] = new_value
#: 
msgid "code_bits.index"
msgstr "index"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.index_predict_exercise.text
#. 
#.     some_list.index(value)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_predict_exercise.text
#. 
#.     some_list.remove(value)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_predict_exercise.text
#. 
#.     some_list.count(value)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.in_predict_exercise.text
#. 
#.     value in some_list
#: 
msgid "code_bits.value"
msgstr "value"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.text
#. 
#.     x = ['a', 'b', 'c']
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.text
#. 
#.     x = ['a', 'b', 'c']
#.     (insert_one_line_from_above)
#.     print(x)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.text
#. 
#.     x = ['a', 'b', 'c']
#.     (insert_one_line_from_above)
#.     print(x)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.average_exercise.text
#. 
#.     x = [15, 12, -6, 3]
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.text
#. 
#.     x = [12, -6, 2, -1, 3]
#.     y = (insert_one_line_from_above)
#.     print(y)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sum_range_exercise.text
#. 
#.     x = 100
#.     y = (insert_one_line_from_above)
#.     print(y)
#: 
msgid "code_bits.insert_one_line_from_above"
msgstr "insert_one_line_from_above"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.final_text.text
#. 
#.     if word.lower() == 'yes':
#: 
msgid "code_bits.'yes'"
msgstr "'yes'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.list_insert.text
#. 
#.     nums = [1, 2, 3, 4, 5]
#.     nums.append(9)
#.     print(nums)
#: 
msgid "code_bits.nums"
msgstr "nums"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.EqualsVsIs.steps.final_text.text
#. 
#.     list2 = list1.copy()
#: 
msgid "code_bits.list2"
msgstr "list2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.EqualsVsIs.steps.final_text.text
#. 
#.     list2 = list1.copy()
#: 
msgid "code_bits.list1"
msgstr "list1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ModifyingWhileIterating.steps.make_copy.text
#. 
#.     for number in numbers.copy():
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion.text
#. 
#.     number = '3'
#.     for i in range(number):
#.         print('Starting... ' + i + 1)
#.     print('Go!')
#: 
msgid "code_bits.number"
msgstr "number"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name.text
#. 
#.     name = "Alice"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#.     name = "Bob"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise.text
#. 
#.     players = ["Alice", "Bob", "Charlie"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake.text
#. 
#.     return name == "Alice" or "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake.text
#. 
#.     return name == "Alice" or name == "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     (name == "Alice") or ("Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     name == "Alice" or "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     name == ("Alice" or "Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     return name in ["Alice", "Bob", "Charlie"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.FurtherImprovement.text
#. 
#.     name == "Alice" or name == "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr.text
#. 
#.     if name == "Alice" or name == "Bob":
#.         return True
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr.text
#. 
#.     if name == "Alice":
#.         return True
#.     elif name == "Bob":
#.         return True
#: 
msgid "code_bits.\"Alice\""
msgstr "\"Alice\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     print(f"{name} went to {meal} with {friend}.")
#: 
msgid "code_bits.friend"
msgstr "friend"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     print(f"{name} went to {meal} with {friend}.")
#: 
msgid "code_bits.meal"
msgstr "meal"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#: 
msgid "code_bits.\"lunch\""
msgstr "\"lunch\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#: 
msgid "code_bits.\" with \""
msgstr "\" with \""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     name = "Alice"
#.     friend = 'Bob'
#.     meal = "lunch"
#.     print(name + " went to " + meal + " with " + friend + '.')
#: 
msgid "code_bits.\" went to \""
msgstr "\" went to \""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings.text
#. 
#.     print(f"{name} went to {meal} with {friend}.")
#: 
msgid "code_bits.f\"{name} went to {meal} with {friend}.\""
msgstr "f\"{name} went to {meal} with {friend}.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.final_text.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise.text
#. 
#.     players = ["Alice", "Bob", "Charlie"]
#: 
msgid "code_bits.players"
msgstr "players"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name.text
#. 
#.     name = "Alice"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#.     name = "Bob"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise.text
#. 
#.     players = ["Alice", "Bob", "Charlie"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake.text
#. 
#.     return name == "Alice" or "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake.text
#. 
#.     return name == "Alice" or name == "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     (name == "Alice") or ("Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     name == "Alice" or "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     name == ("Alice" or "Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     return name in ["Alice", "Bob", "Charlie"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.FurtherImprovement.text
#. 
#.     name == "Alice" or name == "Bob"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr.text
#. 
#.     if name == "Alice" or name == "Bob":
#.         return True
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr.text
#. 
#.     if name == "Alice":
#.         return True
#.     elif name == "Bob":
#.         return True
#: 
msgid "code_bits.\"Bob\""
msgstr "\"Bob\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise.text
#. 
#.     players = ["Alice", "Bob", "Charlie"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     return name in ["Alice", "Bob", "Charlie"]
#: 
msgid "code_bits.\"Charlie\""
msgstr "\"Charlie\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise.text
#. 
#.     letters = "ABCD"
#: 
msgid "code_bits.letters"
msgstr "letters"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise.text
#. 
#.     letters = "ABCD"
#: 
msgid "code_bits.\"ABCD\""
msgstr "\"ABCD\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.text
#. 
#.     size = 5
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         board = []
#.         for _ in range(size):
#.             row = []
#.             for _ in range(size):
#.                 row.append(' ')
#.             board.append(row)
#.         return board
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.size"
msgstr "size"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.final_text.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#: 
msgid "code_bits.'Dylan'"
msgstr "'Dylan'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.final_text.text
#. 
#.     players = ['Charlie', 'Alice', 'Dylan', 'Bob']
#.     for i in range(len(players)):
#.         for j in range(len(players)):
#.             if i < j:
#.                 print(f'{players[i]} vs {players[j]}')
#: 
msgid "code_bits.f'{players[i]} vs {players[j]}'"
msgstr "f'{players[i]} vs {players[j]}'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting.text
#. 
#.     print(strings[1][0])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting.text
#. 
#.     string = strings[1]
#.     print(string[0])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.final_text.text
#. 
#.     strings[1].append("today?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.strings"
msgstr "strings"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#: 
msgid "code_bits.\"abc\""
msgstr "\"abc\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#: 
msgid "code_bits.\"def\""
msgstr "\"def\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.text
#. 
#.     strings = ["abc", "def", "ghi"]
#: 
msgid "code_bits.\"ghi\""
msgstr "\"ghi\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting.text
#. 
#.     string = strings[1]
#.     print(string[0])
#: 
msgid "code_bits.string"
msgstr "string"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.final_text.text
#. 
#.     strings[1].append("today?")
#: 
msgid "code_bits.\"today?\""
msgstr "\"today?\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.nested_list_nested_loop_example.text
#. 
#.     for sublist in numbers:
#.         for num in sublist:
#.             print(num)
#.         print('---')
#: 
msgid "code_bits.sublist"
msgstr "sublist"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.nested_list_nested_loop_example.text
#. 
#.     for sublist in numbers:
#.         for num in sublist:
#.             print(num)
#.         print('---')
#: 
msgid "code_bits.num"
msgstr "num"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#: 
msgid "code_bits.\"hello\""
msgstr "\"hello\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#: 
msgid "code_bits.\"hello there\""
msgstr "\"hello there\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#: 
msgid "code_bits.\"how are you\""
msgstr "\"how are you\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#: 
msgid "code_bits.\"goodbye world\""
msgstr "\"goodbye world\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "hello"
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#: 
msgid "code_bits.\"hello world\""
msgstr "\"hello world\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "goodbye"
#: 
msgid "code_bits.\"goodbye\""
msgstr "\"goodbye\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise.text
#. 
#.     strings = [
#.         [
#.             "hello there",
#.             "how are you",
#.         ],
#.         [
#.             "goodbye world",
#.             "hello world",
#.         ]
#.     ]
#.     word = "Python"
#: 
msgid "code_bits.\"Python\""
msgstr "\"Python\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you.text
#. 
#.     def greet(name):
#.         print(f"Hello {name}!")
#.         print("How are you?")
#: 
msgid "code_bits.greet"
msgstr "greet"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name.text
#. 
#.     name = "Alice"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#.     name = "Bob"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you.text
#. 
#.     def greet(name):
#.         print(f"Hello {name}!")
#.         print("How are you?")
#: 
msgid "code_bits.f\"Hello {name}!\""
msgstr "f\"Hello {name}!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name.text
#. 
#.     name = "Alice"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#.     name = "Bob"
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you.text
#. 
#.     def greet(name):
#.         print(f"Hello {name}!")
#.         print("How are you?")
#: 
msgid "code_bits.\"How are you?\""
msgstr "\"How are you?\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise.text
#. 
#.     Hello
#.     Hello
#: 
msgid "code_bits.Hello"
msgstr "Hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters.text
#. 
#.     thing = "Hello"
#.     n = 3
#.     for _ in range(n):
#.         print(thing)
#: 
msgid "code_bits.\"Hello\""
msgstr "\"Hello\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters.text
#. 
#.     def print_many(n, thing):
#: 
msgid "code_bits.print_many"
msgstr "print_many"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.final_text.text
#. 
#.     def quadruple(x):
#.         x = double(x)
#.         x = double(x)
#.         return x
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.complete_quadruple_tests.text
#. 
#.     def double(x):
#.         return x * 2
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#.     assert_equal(quadruple(2))
#.     assert_equal(quadruple(5))
#: 
msgid "code_bits.quadruple"
msgstr "quadruple"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.final_text.text
#. 
#.     def quadruple(x):
#.         x = double(x)
#.         x = double(x)
#.         return x
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.complete_quadruple_tests.text
#. 
#.     def double(x):
#.         return x * 2
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#.     assert_equal(quadruple(2))
#.     assert_equal(quadruple(5))
#: 
msgid "code_bits.double"
msgstr "double"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority.text
#. 
#.     def diagonal_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'O', 'X'],
#.                 ['X', 'X', 'O'],
#.                 ['O', 'O', 'X']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'X', 'O'],
#.                 ['X', 'O', 'O'],
#.                 ['O', 'X', 'X']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['O', 'X', 'O'],
#.                 ['X', 'X', 'X'],
#.                 ['O', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise.text
#. 
#.     def is_valid_percentage(x):
#.         if x < 0 or x > 100:
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(is_valid_percentage(-1), False)
#.     assert_equal(is_valid_percentage(0), True)
#.     assert_equal(is_valid_percentage(50), True)
#.     assert_equal(is_valid_percentage(100), True)
#.     assert_equal(is_valid_percentage(101), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow.text
#. 
#.     def all_equal(row):
#.         ...
#. 
#.     assert_equal(all_equal(["X", "X", "X"]), True)
#.     assert_equal(all_equal(["O", "O", "O"]), True)
#.     assert_equal(all_equal(["X", "O", "X"]), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     assert_equal(is_valid_percentage(-1), False)
#.     assert_equal(is_valid_percentage(0), True)
#.     assert_equal(is_valid_percentage(50), True)
#.     assert_equal(is_valid_percentage(100), True)
#.     assert_equal(is_valid_percentage(101), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner.text
#. 
#.     def column_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         column_winner(
#.             [
#.                 ['X', 'O', ' '],
#.                 ['X', 'O', ' '],
#.                 ['O', 'X', ' ']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         column_winner(
#.             [
#.                 ['X', 'O', ' ', 'X'],
#.                 [' ', 'O', 'X', 'O'],
#.                 ['O', 'O', 'X', 'X'],
#.                 ['O', 'O', 'X', ' ']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner.text
#. 
#.     def diagonal_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['O', 'X', 'O', 'X'],
#.                 [' ', 'O', 'X', ' '],
#.                 ['X', 'X', ' ', 'X'],
#.                 ['X', ' ', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'X', ' '],
#.                 ['X', ' ', 'O'],
#.                 [' ', 'O', 'O']
#.             ]
#.         ),
#.         False
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner.text
#. 
#.     def row_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         row_winner(
#.             [
#.                 ['A', 'A', 'B', 'A'],
#.                 [' ', ' ', ' ', ' '],
#.                 ['A', ' ', ' ', 'A'],
#.                 ['B', ' ', 'B', 'A']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         row_winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'X'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function.text
#. 
#.     def double_numbers(numbers):
#.         doubles = []
#.         for x in numbers:
#.             doubles.append(x * 2)
#.         return doubles
#. 
#.     assert_equal(double_numbers([1, 2, 3]), [2, 4, 6])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'X|O|X\n-+-+-\nO| | \n-+-+-\n |X|O'
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'XOX\nO  \n XO'
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.text
#. 
#.     assert_equal(print_board([...]), "...")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.text
#. 
#.     def format_board(board):
#.         ...
#.         return ...
#. 
#.     assert_equal(format_board([...]), "...")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.complete_quadruple_tests.text
#. 
#.     def double(x):
#.         return x * 2
#. 
#.     def quadruple(x):
#.         return double(double(x))
#. 
#.     assert_equal(quadruple(2))
#.     assert_equal(quadruple(5))
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.introducing_assert_equal.text
#. 
#.     def assert_equal(actual, expected):
#.         if actual == expected:
#.             print("OK")
#.         else:
#.             print(f"Error! {repr(actual)} != {repr(expected)}")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         ' 123\n1XOX\n2O  \n3 XO'
#.     )
#: 
msgid "code_bits.assert_equal"
msgstr "assert_equal"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.introducing_assert_equal.text
#. 
#.     def assert_equal(actual, expected):
#.         if actual == expected:
#.             print("OK")
#.         else:
#.             print(f"Error! {repr(actual)} != {repr(expected)}")
#: 
msgid "code_bits.actual"
msgstr "actual"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.introducing_assert_equal.text
#. 
#.     def assert_equal(actual, expected):
#.         if actual == expected:
#.             print("OK")
#.         else:
#.             print(f"Error! {repr(actual)} != {repr(expected)}")
#: 
msgid "code_bits.expected"
msgstr "expected"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.introducing_assert_equal.text
#. 
#.     def assert_equal(actual, expected):
#.         if actual == expected:
#.             print("OK")
#.         else:
#.             print(f"Error! {repr(actual)} != {repr(expected)}")
#: 
msgid "code_bits.\"OK\""
msgstr "\"OK\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.introducing_assert_equal.text
#. 
#.     def assert_equal(actual, expected):
#.         if actual == expected:
#.             print("OK")
#.         else:
#.             print(f"Error! {repr(actual)} != {repr(expected)}")
#: 
msgid "code_bits.f\"Error! {repr(actual)} != {repr(expected)}\""
msgstr "f\"Error! {repr(actual)} != {repr(expected)}\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#: 
msgid "code_bits.\"++more++\""
msgstr "\"++more++\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#: 
msgid "code_bits.\"=the same=\""
msgstr "\"=the same=\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     def surround(string, sides):
#: 
msgid "code_bits.surround"
msgstr "surround"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#: 
msgid "code_bits.\"more\""
msgstr "\"more\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise.text
#. 
#.     assert_equal(surround("more", "++"), "++more++")
#.     assert_equal(surround("the same", "="), "=the same=")
#: 
msgid "code_bits.\"the same\""
msgstr "\"the same\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#: 
msgid "code_bits.\"!! Warning !!\""
msgstr "\"!! Warning !!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#: 
msgid "code_bits.\"!!!! DANGER !!!!\""
msgstr "\"!!!! DANGER !!!!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     def alert(string, level):
#: 
msgid "code_bits.alert"
msgstr "alert"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#: 
msgid "code_bits.\"Warning\""
msgstr "\"Warning\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise.text
#. 
#.     assert_equal(alert("Warning", 2), "!! Warning !!")
#.     assert_equal(alert("DANGER", 4), "!!!! DANGER !!!!")
#: 
msgid "code_bits.\"DANGER\""
msgstr "\"DANGER\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.cannot_return_multiple_values.text
#. 
#.     if condition:
#.         return value1
#.     else:
#.         return value2
#: 
msgid "code_bits.condition"
msgstr "condition"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.cannot_return_multiple_values.text
#. 
#.     if condition:
#.         return value1
#.     else:
#.         return value2
#: 
msgid "code_bits.value1"
msgstr "value1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.cannot_return_multiple_values.text
#. 
#.     if condition:
#.         return value1
#.     else:
#.         return value2
#: 
msgid "code_bits.value2"
msgstr "value2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function.text
#. 
#.     def double_numbers(numbers):
#.         doubles = []
#.         for x in numbers:
#.             doubles.append(x * 2)
#.         return doubles
#. 
#.     assert_equal(double_numbers([1, 2, 3]), [2, 4, 6])
#: 
msgid "code_bits.double_numbers"
msgstr "double_numbers"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function.text
#. 
#.     def double_numbers(numbers):
#.         doubles = []
#.         for x in numbers:
#.             doubles.append(x * 2)
#.         return doubles
#. 
#.     assert_equal(double_numbers([1, 2, 3]), [2, 4, 6])
#: 
msgid "code_bits.doubles"
msgstr "doubles"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise.text
#. 
#.     def is_valid_percentage(x):
#.         if x < 0 or x > 100:
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(is_valid_percentage(-1), False)
#.     assert_equal(is_valid_percentage(0), True)
#.     assert_equal(is_valid_percentage(50), True)
#.     assert_equal(is_valid_percentage(100), True)
#.     assert_equal(is_valid_percentage(101), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow.text
#. 
#.     def is_valid_percentage(x):
#.         if 0 <= x and x <= 100:
#.             return True
#.         else:
#.             return False
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow.text
#. 
#.     def is_valid_percentage(x):
#.         return 0 <= x <= 100
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow.text
#. 
#.     def is_valid_percentage(x):
#.         return 0 <= x and x <= 100
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise.text
#. 
#.     assert_equal(is_valid_percentage(-1), False)
#.     assert_equal(is_valid_percentage(0), True)
#.     assert_equal(is_valid_percentage(50), True)
#.     assert_equal(is_valid_percentage(100), True)
#.     assert_equal(is_valid_percentage(101), False)
#: 
msgid "code_bits.is_valid_percentage"
msgstr "is_valid_percentage"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.         diagonal1 = all_equal([board[0][0], board[1][1], board[2][2]])
#.         diagonal2 = all_equal([board[2][0], board[1][1], board[0][2]])
#.         return diagonal1 or diagonal2
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow.text
#. 
#.     def all_equal(row):
#.         ...
#. 
#.     assert_equal(all_equal(["X", "X", "X"]), True)
#.     assert_equal(all_equal(["O", "O", "O"]), True)
#.     assert_equal(all_equal(["X", "O", "X"]), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.final_text.text
#. 
#.     def all_equal(row):
#.         return row[0] == row[1] and row[0] == row[2]
#: 
msgid "code_bits.all_equal"
msgstr "all_equal"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.final_text.text
#. 
#.         return row == [row[0], row[0], row[0]]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.final_text.text
#. 
#.         return row[0] == row[1] == row[2]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.final_text.text
#. 
#.     def all_equal(row):
#.         return row[0] == row[1] and row[0] == row[2]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     board.append(row.copy())
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         board = []
#.         for _ in range(size):
#.             row = []
#.             for _ in range(size):
#.                 row.append(' ')
#.             board.append(row)
#.         return board
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board.text
#. 
#.     board = [row, row, row]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board.text
#. 
#.     row[0] = 'X'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     row = board[1]
#.     row[0] = player
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         joined_rows = []
#.         for row in board:
#.             joined_rows.append("".join(row))
#.         return "\n".join(joined_rows)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.row"
msgstr "row"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority.text
#. 
#.     def diagonal_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'O', 'X'],
#.                 ['X', 'X', 'O'],
#.                 ['O', 'O', 'X']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'X', 'O'],
#.                 ['X', 'O', 'O'],
#.                 ['O', 'X', 'X']
#.             ]
#.         ),
#.         True
#.     )
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['O', 'X', 'O'],
#.                 ['X', 'X', 'X'],
#.                 ['O', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner.text
#. 
#.     def diagonal_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['O', 'X', 'O', 'X'],
#.                 [' ', 'O', 'X', ' '],
#.                 ['X', 'X', ' ', 'X'],
#.                 ['X', ' ', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         diagonal_winner(
#.             [
#.                 ['X', 'X', ' '],
#.                 ['X', ' ', 'O'],
#.                 [' ', 'O', 'O']
#.             ]
#.         ),
#.         False
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner.text
#. 
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.diagonal_winner"
msgstr "diagonal_winner"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority.text
#. 
#.     board = [
#.         ['X', 'O', 'X'],
#.         ['X', 'X', 'O'],
#.         ['O', 'O', 'X']
#.     ]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.         diagonal1 = all_equal([board[0][0], board[1][1], board[2][2]])
#.         diagonal2 = all_equal([board[2][0], board[1][1], board[0][2]])
#.         return diagonal1 or diagonal2
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner.text
#. 
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner.text
#. 
#.     board = [
#.         ['A', 'B', 'A', 'A'],
#.         ['B', ' ', ' ', 'A'],
#.         [' ', 'A', 'B', 'B'],
#.         [' ', 'A', 'B', ' ']
#.     ]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner.text
#. 
#.     board = [
#.         ['X', 'O', 'X'],
#.         ['O', ' ', ' '],
#.         [' ', 'X', 'O']
#.     ]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     board.append(row.copy())
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         board = []
#.         for _ in range(size):
#.             row = []
#.             for _ in range(size):
#.                 row.append(' ')
#.             board.append(row)
#.         return board
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board.text
#. 
#.     board = [row, row, row]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board.text
#. 
#.     board[0][0] = 'X'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board.text
#. 
#.     board[0][0] = 'X'
#.     board[1][0] = 'X'
#.     board[2][0] = 'X'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board.text
#. 
#.     board[1][0] = 'X'
#.     board[2][0] = 'X'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     board[1][0] = player
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     row = board[1]
#.     row[0] = player
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     board = [
#.         ['X', 'O', 'X'],
#.         [' ', 'O', 'O'],
#.         [' ', 'X', ' ']
#.     ]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         joined_rows = []
#.         for row in board:
#.             joined_rows.append("".join(row))
#.         return "\n".join(joined_rows)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         result = ''
#.         for i in range(len(board)):
#.             for char in board[i]:
#.                 result += char
#.             if i != len(board) - 1:
#.                 result += '\n'
#.         return result
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.board"
msgstr "board"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner.text
#. 
#.     def diagonal_winner(board):
#.         middle = board[1][1]
#.         return (
#.                 (middle == board[0][0] and middle == board[2][2]) or
#.                 (middle == board[0][2] and middle == board[2][0])
#.         )
#: 
msgid "code_bits.middle"
msgstr "middle"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.         diagonal1 = all_equal([board[0][0], board[1][1], board[2][2]])
#.         diagonal2 = all_equal([board[2][0], board[1][1], board[0][2]])
#.         return diagonal1 or diagonal2
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#: 
msgid "code_bits.diagonal1"
msgstr "diagonal1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.final_text.text
#. 
#.         diagonal1 = all_equal([board[0][0], board[1][1], board[2][2]])
#.         diagonal2 = all_equal([board[2][0], board[1][1], board[0][2]])
#.         return diagonal1 or diagonal2
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#: 
msgid "code_bits.diagonal2"
msgstr "diagonal2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     if invalid_image(filename):
#.         print("I can't process " + filename)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.final_text.text
#. 
#.     def invalid_image(filename):
#.         return not (filename.endswith(".png") or filename.endswith(".jpg"))
#. 
#.     def invalid_image(filename):
#.         return not filename.endswith(".png") and not filename.endswith(".jpg")
#: 
msgid "code_bits.invalid_image"
msgstr "invalid_image"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#: 
msgid "code_bits.\"dog.png\""
msgstr "\"dog.png\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#: 
msgid "code_bits.\"cat.jpg\""
msgstr "\"cat.jpg\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#: 
msgid "code_bits.\"invoice.pdf\""
msgstr "\"invoice.pdf\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.final_text.text
#. 
#.     def invalid_image(filename):
#.         return not (filename.endswith(".png") or filename.endswith(".jpg"))
#. 
#.     def invalid_image(filename):
#.         return not filename.endswith(".png") and not filename.endswith(".jpg")
#: 
msgid "code_bits.\".png\""
msgstr "\".png\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.final_text.text
#. 
#.     def invalid_image(filename):
#.         return not (filename.endswith(".png") or filename.endswith(".jpg"))
#. 
#.     def invalid_image(filename):
#.         return not filename.endswith(".png") and not filename.endswith(".jpg")
#: 
msgid "code_bits.\".jpg\""
msgstr "\".jpg\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     def invalid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return False
#.         else:
#.             return True
#. 
#.     assert_equal(invalid_image("dog.png"), False)
#.     assert_equal(invalid_image("cat.jpg"), False)
#.     assert_equal(invalid_image("invoice.pdf"), True)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     if invalid_image(filename):
#.         print("I can't process " + filename)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.final_text.text
#. 
#.     def invalid_image(filename):
#.         return not (filename.endswith(".png") or filename.endswith(".jpg"))
#. 
#.     def invalid_image(filename):
#.         return not filename.endswith(".png") and not filename.endswith(".jpg")
#: 
msgid "code_bits.filename"
msgstr "filename"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.text
#. 
#.     if invalid_image(filename):
#.         print("I can't process " + filename)
#: 
msgid "code_bits.\"I can't process \""
msgstr "\"I can't process \""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner.text
#. 
#.     def row_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         row_winner(
#.             [
#.                 ['A', 'A', 'B', 'A'],
#.                 [' ', ' ', ' ', ' '],
#.                 ['A', ' ', ' ', 'A'],
#.                 ['B', ' ', 'B', 'A']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         row_winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'X'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.row_winner"
msgstr "row_winner"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner.text
#. 
#.     def column_winner(board):
#.         ...
#. 
#.     assert_equal(
#.         column_winner(
#.             [
#.                 ['X', 'O', ' '],
#.                 ['X', 'O', ' '],
#.                 ['O', 'X', ' ']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         column_winner(
#.             [
#.                 ['X', 'O', ' ', 'X'],
#.                 [' ', 'O', 'X', 'O'],
#.                 ['O', 'O', 'X', 'X'],
#.                 ['O', 'O', 'X', ' ']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.column_winner"
msgstr "column_winner"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.winner"
msgstr "winner"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.winning_line"
msgstr "winning_line"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#: 
msgid "code_bits.piece"
msgstr "piece"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#: 
msgid "code_bits.entry"
msgstr "entry"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.col"
msgstr "col"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner.text
#. 
#.     def winner(board):
#.         ...
#. 
#.     def winning_line(strings):
#.         piece = strings[0]
#.         if piece == ' ':
#.             return False
#.         for entry in strings:
#.             if piece != entry:
#.                 return False
#.         return True
#. 
#.     def row_winner(board):
#.         for row in board:
#.             if winning_line(row):
#.                 return True
#.         return False
#. 
#.     def column_winner(board):
#.         for col in range(len(board[0])):
#.             column = []
#.             for row in board:
#.                 column.append(row[col])
#.             if winning_line(column):
#.                 return True
#.         return False
#. 
#.     def diagonal_winner(board):
#.         diagonal1 = []
#.         diagonal2 = []
#.         for i in range(len(board)):
#.             diagonal1.append(board[i][i])
#.             diagonal2.append(board[i][-i-1])
#.         return winning_line(diagonal1) or winning_line(diagonal2)
#. 
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', 'X', 'X', ' '],
#.                 ['X', 'X', ' ', ' '],
#.                 ['X', ' ', 'O', 'X'],
#.                 [' ', ' ', 'O', 'X']
#.             ]
#.         ),
#.         False
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' ', 'X'],
#.                 ['O', 'X', 'O'],
#.                 ['O', 'O', 'O']
#.             ]
#.         ),
#.         True
#.     )
#.     assert_equal(
#.         winner(
#.             [
#.                 ['X', ' '],
#.                 ['X', 'O']
#.             ]
#.         ),
#.         True
#.     )
#: 
msgid "code_bits.column"
msgstr "column"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'X|O|X\n-+-+-\nO| | \n-+-+-\n |X|O'
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         joined_rows = []
#.         for row in board:
#.             joined_rows.append("".join(row))
#.         return "\n".join(joined_rows)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         result = ''
#.         for i in range(len(board)):
#.             for char in board[i]:
#.                 result += char
#.             if i != len(board) - 1:
#.                 result += '\n'
#.         return result
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'XOX\nO  \n XO'
#.     )
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.text
#. 
#.     def format_board(board):
#.         ...
#.         return ...
#. 
#.     assert_equal(format_board([...]), "...")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         ' 123\n1XOX\n2O  \n3 XO'
#.     )
#: 
msgid "code_bits.format_board"
msgstr "format_board"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.text
#. 
#.     assert_equal(print_board([...]), "...")
#: 
msgid "code_bits.print_board"
msgstr "print_board"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'XOX\nO  \n XO'
#.     )
#: 
msgid "code_bits.'XOX\\nO  \\n XO'"
msgstr "'XOX\\nO  \\n XO'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         result = ''
#.         for i in range(len(board)):
#.             for char in board[i]:
#.                 result += char
#.             if i != len(board) - 1:
#.                 result += '\n'
#.         return result
#: 
msgid "code_bits.result"
msgstr "result"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         result = ''
#.         for i in range(len(board)):
#.             for char in board[i]:
#.                 result += char
#.             if i != len(board) - 1:
#.                 result += '\n'
#.         return result
#: 
msgid "code_bits.'\\n'"
msgstr "'\\n'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         'X|O|X\n-+-+-\nO| | \n-+-+-\n |X|O'
#.     )
#: 
msgid "code_bits.'X|O|X\\n-+-+-\\nO| | \\n-+-+-\\n |X|O'"
msgstr "'X|O|X\\n-+-+-\\nO| | \\n-+-+-\\n |X|O'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         joined_rows = []
#.         for row in board:
#.             joined_rows.append("".join(row))
#.         return "\n".join(joined_rows)
#: 
msgid "code_bits.joined_rows"
msgstr "joined_rows"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.text
#. 
#.     def format_board(board):
#.         joined_rows = []
#.         for row in board:
#.             joined_rows.append("".join(row))
#.         return "\n".join(joined_rows)
#: 
msgid "code_bits.\"\\n\""
msgstr "\"\\n\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion.text
#. 
#.     number = '3'
#.     for i in range(number):
#.         print('Starting... ' + i + 1)
#.     print('Go!')
#: 
msgid "code_bits.'Go!'"
msgstr "'Go!'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion.text
#. 
#.     number = '3'
#.     for i in range(number):
#.         print('Starting... ' + i + 1)
#.     print('Go!')
#: 
msgid "code_bits.'Starting... '"
msgstr "'Starting... '"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers.text
#. 
#.     def format_board(board):
#.         ...
#. 
#.     assert_equal(
#.         format_board([
#.             ['X', 'O', 'X'],
#.             ['O', ' ', ' '],
#.             [' ', 'X', 'O']
#.         ]),
#.         ' 123\n1XOX\n2O  \n3 XO'
#.     )
#: 
msgid "code_bits.' 123\\n1XOX\\n2O  \\n3 XO'"
msgstr "' 123\\n1XOX\\n2O  \\n3 XO'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text
#. 
#.     super_secret_number = 7
#.     print("What number am I thinking of?")
#.     guess = input()
#.     if guess == super_secret_number:
#.         print("Amazing! Are you psychic?")
#.     else:
#.         print("Nope!")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.final_text.text
#. 
#.     if guess == str(super_secret_number):
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.final_text.text
#. 
#.     if int(guess) == super_secret_number:
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.final_text.text
#. 
#.     super_secret_number = '7'
#: 
msgid "code_bits.super_secret_number"
msgstr "super_secret_number"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text
#. 
#.     super_secret_number = 7
#.     print("What number am I thinking of?")
#.     guess = input()
#.     if guess == super_secret_number:
#.         print("Amazing! Are you psychic?")
#.     else:
#.         print("Nope!")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.final_text.text
#. 
#.     if guess == str(super_secret_number):
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.final_text.text
#. 
#.     if int(guess) == super_secret_number:
#: 
msgid "code_bits.guess"
msgstr "guess"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text
#. 
#.     super_secret_number = 7
#.     print("What number am I thinking of?")
#.     guess = input()
#.     if guess == super_secret_number:
#.         print("Amazing! Are you psychic?")
#.     else:
#.         print("Nope!")
#: 
msgid "code_bits.\"What number am I thinking of?\""
msgstr "\"What number am I thinking of?\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text
#. 
#.     super_secret_number = 7
#.     print("What number am I thinking of?")
#.     guess = input()
#.     if guess == super_secret_number:
#.         print("Amazing! Are you psychic?")
#.     else:
#.         print("Nope!")
#: 
msgid "code_bits.\"Amazing! Are you psychic?\""
msgstr "\"Amazing! Are you psychic?\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text
#. 
#.     super_secret_number = 7
#.     print("What number am I thinking of?")
#.     guess = input()
#.     if guess == super_secret_number:
#.         print("Amazing! Are you psychic?")
#.     else:
#.         print("Nope!")
#: 
msgid "code_bits.\"Nope!\""
msgstr "\"Nope!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.play_game"
msgstr "play_game"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.play_move"
msgstr "play_move"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#: 
msgid "code_bits.first_row"
msgstr "first_row"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#: 
msgid "code_bits.joined_row"
msgstr "joined_row"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#: 
msgid "code_bits.'\\nX to play:\\n'"
msgstr "'\\nX to play:\\n'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     def format_board(board):
#.         first_row = ' '
#.         for i in range(len(board)):
#.             first_row += str(i + 1)
#.         joined_rows = [first_row]
#.         for i in range(len(board)):
#.             joined_row = str(i + 1) + ''.join(board[i])
#.             joined_rows.append(joined_row)
#.         return "\n".join(joined_rows)
#. 
#.     def play_game():
#.         board = [
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.             [' ', ' ', ' '],
#.         ]
#.         print(format_board(board))
#.         print('\nX to play:\n')
#.         play_move(board, 'X')
#.         print(format_board(board))
#.         print('\nO to play:\n')
#.         play_move(board, 'O')
#.         print(format_board(board))
#. 
#.     def play_move(board, player):
#.         ...
#. 
#.     play_game()
#: 
msgid "code_bits.'\\nO to play:\\n'"
msgstr "'\\nO to play:\\n'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     board[1][0] = player
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input.text
#. 
#.     row = board[1]
#.     row[0] = player
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.player"
msgstr "player"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         board = []
#.         for _ in range(size):
#.             row = []
#.             for _ in range(size):
#.                 row.append(' ')
#.             board.append(row)
#.         return board
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.make_board"
msgstr "make_board"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#: 
msgid "code_bits.make_cube"
msgstr "make_cube"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#: 
msgid "code_bits.test"
msgstr "test"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.final_text.text
#. 
#.     def make_board(size):
#.         row = []
#.         for _ in range(size):
#.             row.append(' ')
#.         board = []
#.         for _ in range(size):
#.             board.append(row.copy())
#.         return board
#. 
#.     def make_cube(size):
#.         cube = []
#.         board = make_board(size)
#.         for _ in range(size):
#.             cube.append(board.copy())
#.         return cube
#. 
#.     def test():
#.         cube = make_cube(2)
#.         print(cube)
#.         cube[0][0][0] = 'X'
#.         print(cube)
#.         print(cube[0] is cube[1])
#.         print(cube[0][0] is cube[0][1])
#.         print(cube[0][0] is cube[1][0])
#. 
#.     test()
#: 
msgid "code_bits.cube"
msgstr "cube"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.main_diagonal_winner"
msgstr "main_diagonal_winner"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.print_winner"
msgstr "print_winner"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.print_draw"
msgstr "print_draw"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.f'\\n  {\"+\".join(\"-\" * size)}\\n'"
msgstr "f'\\n  {\"+\".join(\"-\" * size)}\\n'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.rows"
msgstr "rows"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.f'  {\" \".join(str(i + 1) for i in range(size))}\\n{line.join(rows)}'"
msgstr "f'  {\" \".join(str(i + 1) for i in range(size))}\\n{line.join(rows)}'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.f'{i + 1} {\"|\".join(row)}'"
msgstr "f'{i + 1} {\"|\".join(row)}'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.f'{player} to play:'"
msgstr "f'{player} to play:'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.f'{player} wins!'"
msgstr "f'{player} wins!'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.\"It's a draw!\""
msgstr "\"It's a draw!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.board_size"
msgstr "board_size"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.player1"
msgstr "player1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game.text
#. 
#.     def winning_line(strings):
#.         strings = set(strings)
#.         return len(strings) == 1 and ' ' not in strings
#. 
#.     def row_winner(board):
#.         return any(winning_line(row) for row in board)
#. 
#.     def column_winner(board):
#.         return row_winner(zip(*board))
#. 
#.     def main_diagonal_winner(board):
#.         return winning_line(row[i] for i, row in enumerate(board))
#. 
#.     def diagonal_winner(board):
#.         return main_diagonal_winner(board) or main_diagonal_winner(reversed(board))
#. 
#.     def winner(board):
#.         return row_winner(board) or column_winner(board) or diagonal_winner(board)
#. 
#.     def format_board(board):
#.         size = len(board)
#.         line = f'\n  {"+".join("-" * size)}\n'
#.         rows = [f'{i + 1} {"|".join(row)}' for i, row in enumerate(board)]
#.         return f'  {" ".join(str(i + 1) for i in range(size))}\n{line.join(rows)}'
#. 
#.     def play_move(board, player):
#.         print(f'{player} to play:')
#.         row = int(input()) - 1
#.         col = int(input()) - 1
#.         board[row][col] = player
#.         print(format_board(board))
#. 
#.     def make_board(size):
#.         return [[' '] * size for _ in range(size)]
#. 
#.     def print_winner(player):
#.         print(f'{player} wins!')
#. 
#.     def print_draw():
#.         print("It's a draw!")
#. 
#.     def play_game(board_size, player1, player2):
#.         board = make_board(board_size)
#.         print(format_board(board))
#. 
#.         play_move(board, player1)
#.         play_move(board, player2)
#.         play_move(board, player1)
#.         play_move(board, player2)
#. 
#.     play_game(3, 'X', 'O')
#: 
msgid "code_bits.player2"
msgstr "player2"

#. https://futurecoder.io/course/#BuildingUpStrings
#: 
msgid "pages.BuildingUpStrings.steps.empty_string.text"
msgstr "`print(line)` ஏற்கனவே கடைசியாக இயங்கிய பிறகு, `name` இல் உள்ள கடைசி எழுத்து சுழலின் முடிவில் `line` இல் மட்டுமே சேர்க்கப்படும். எனவே அந்த எழுத்தும் முழு `name` முக்கோணத்தின் அடிப்பகுதியில் அச்சிடப்படாது. நீங்கள் குழப்பமடைந்தால், `line = line + char` என்பதற்கு முன்னும் பின்னும் `print(line)` ஐப் போட முயற்சிக்கவும்.\n"
"\n"
"வெளியீட்டில் உள்ள அந்த `-` எழுத்துக்களை அகற்றுவோம். எப்படி என்பதை நீங்கள் ஏற்கனவே ஊகிக்க முடியும்.\n"
"\n"
"ஒரு *வெற்று சரம்* என்பது எழுத்துகள் எதுவும் இல்லாத சரம்.\n"
"இது எதையும் சுற்றியுள்ள மேற்கோள்களின் இணையாக எழுதப்பட்டுள்ளது: `''`.\n"
"இது சரங்களின் சுழியத்தைப் போன்றது. அதை மற்றொரு சரத்தில் சேர்த்தால், மற்ற சரம் மாறாமல் இருக்கும்,\n"
"அதே வழியில் `0 + 5` வெறும் `5` ஆகும்.\n"
"\n"
"ஓட்டில் இதை முயற்சிக்கவும்:\n"
"\n"
"__program_indented__"

#. https://futurecoder.io/course/#BuildingUpStrings
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.text"
msgstr "வெற்று சரத்தை `' '` உடன் குழப்ப வேண்டாம், இது ஒரு எழுத்துக்குறியைக் கொண்ட காலியாக இல்லாத சரம்: ஒரு இடைவெளி.\n"
"\n"
"அசல் நிரலை சரிசெய்து வெளியீட்டில் உள்ள அந்த வரிகளை அகற்றவும் மற்றும்\n"
"`name = 'World'` என்பதற்க்கு இவ்வாறு அச்சிட வேண்டும்: \n"
"\n"
"    __no_auto_translate__\n"
"    W\n"
"    Wo\n"
"    Wor\n"
"    Worl\n"
"    World"

#. https://futurecoder.io/course/#AddingStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.hello_world_space
#: 
msgid "pages.AddingStrings.steps.hello_world_space.hints.0.text"
msgstr "இடைவெளி என்பது `o` அல்லது `w` போன்ற மற்ற எழுத்துக்களைப் போலவே."

#. https://futurecoder.io/course/#AddingStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.hello_world_space
#: 
msgid "pages.AddingStrings.steps.hello_world_space.hints.1.text"
msgstr "இடைவெளி எழுத்து மேற்கோள்களுக்குள் எங்காவது இருக்க வேண்டும்."

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_plus_name_with_space
#: 
msgid "pages.UsingVariables.steps.word_plus_name_with_space.hints.0.text"
msgstr "நீங்கள் இருமுறை `+` பயன்படுத்த வேண்டும், 1+2+3 போல."

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_plus_name_with_space
#: 
msgid "pages.UsingVariables.steps.word_plus_name_with_space.hints.1.text"
msgstr "உங்கள் பதிலில் மாறிகள் (மேற்கோள்கள் இல்லை) மற்றும் சரம் எழுத்துகள் (மேற்கோள்கள்) ஆகியவற்றின் கலவை இருக்க வேண்டும்."

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_plus_name_with_space
#: 
msgid "pages.UsingVariables.steps.word_plus_name_with_space.hints.2.text"
msgstr "மேற்கோள்களுக்குள் ஒரு இடைவெளி எழுத்து இருக்க வேண்டும்."

#. https://futurecoder.io/course/#BasicForLoopExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_1
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.hints.0.text"
msgstr "ஒவ்வொரு அச்சு வெளியீடுகளும் வெவ்வேறு வரியில் இருப்பதால், நீங்கள் ஒரே ஒரு `print` பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#BasicForLoopExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_1
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.hints.1.text"
msgstr "நீங்கள் `+` பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#BasicForLoopExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_2
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.0.text"
msgstr "ஒரு கணம் சுழல்களை மறந்து விடுங்கள். `name` 3 முறை அச்சிடும் நிரலை எப்படி எழுதுவீர்கள்?"

#. https://futurecoder.io/course/#BasicForLoopExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_2
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.1.text"
msgstr "தீர்வு இந்த பிரிவில் நாம் பார்த்த மற்ற நிரல்களுடன் மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#BasicForLoopExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BasicForLoopExercises.steps.loop_exercise_2
#: 
msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.2.text"
msgstr "for சுழல் ஆனது `character` போன்ற ஒரு மாறியை உருவாக்கும், ஆனால் நிரல் அதைப் பயன்படுத்தத் தேவையில்லை."

#. https://futurecoder.io/course/#BuildingUpStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_empty_string
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.0.text"
msgstr "இந்தப் பக்கத்தில் உள்ள முந்தைய நிரலின் உடைந்த பதிப்பிலிருந்து நீங்கள் வேலை செய்யவில்லை என்பதை முதலில் உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#BuildingUpStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_empty_string
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.1.text"
msgstr "அதாவது, `line = line + char` `print(line)` க்கு முன் வர வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_empty_string
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.2.text"
msgstr "அது தவிர, நீங்கள் ஒரு ***சிறிய*** மாற்றத்தை மட்டும் செய்ய வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_empty_string
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.3.text"
msgstr "`-` ஐ அகற்ற விரும்புகிறோம். எனவே அதை மட்டும் செய்யுங்கள். உண்மையாகவே."

#. https://futurecoder.io/course/#BuildingUpStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_empty_string
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.4.text"
msgstr "வெற்று சரத்தைப் பயன்படுத்தவும்!"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_spaced
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_spaced.hints.0.text"
msgstr "நீங்கள் மேலும் ஒரு `+` பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_spaced
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_spaced.hints.1.text"
msgstr "நீங்கள் ஒரு இடைவெளி கொண்ட சரத்தைப் பயன்படுத்த வேண்டும்: `' '`."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_backwards
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_backwards.hints.0.text"
msgstr "தீர்வு அசல் முக்கோண நிரலைப் போலவே உள்ளது, ஒரு சிறிய மாற்றத்தை மட்டும் செய்யுங்கள்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_backwards
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_backwards.hints.1.text"
msgstr "நீங்கள் இன்னும் ஒரு நேரத்தில் `line` இல் ஒரு எழுத்தைச் சேர்க்க விரும்புகிறீர்கள், அதை நீங்கள் எங்கு சேர்க்கிறீர்கள் என்பதுதான் கேள்வி."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_backwards
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_backwards.hints.2.text"
msgstr "நீங்கள் வரிகளை தலைகீழாக மாற்ற வேண்டும், எனவே நீங்கள் எதையாவது தலைகீழாக மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_backwards
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_backwards.hints.3.text"
msgstr "பின் என்பதற்குப் பதிலாக, சரத்திற்கு முன் எழுத்தைச் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_triangle_backwards
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_triangle_backwards.hints.4.text"
msgstr "3 + 7 என்பது 7 + 3. எல்லா எண்களுக்கும் சமம். சரங்களுக்கு இதுவும் உண்மையா?"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_underlined.hints.0.text"
msgstr "உத்வேகத்திற்காக முக்கோண நிரலைப் பாருங்கள்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_underlined.hints.1.text"
msgstr "உத்வேகத்திற்காக ஒவ்வொரு எழுத்துக்கும் ஒருமுறை நீங்கள் `name` அச்சிட்ட நிரலைப் பாருங்கள்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_underlined.hints.2.text"
msgstr "நீங்கள் ஒரு நேரத்தில் ஒரு எழுத்து (`-`) கோடுகளின் சரத்தை உருவாக்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_underlined
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_underlined.hints.3.text"
msgstr "for சுழல் ஆனது `char` போன்ற ஒரு மாறியை உருவாக்கும், ஆனால் நிரல் அதைப் பயன்படுத்தத் தேவையில்லை."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.hints.0.text"
msgstr "முந்தைய பயிற்சியில் நீங்கள் அனைத்து கடினமான பொருட்களையும் செய்தீர்கள். இப்போது இது சரங்களைச் சேர்ப்பது மட்டுமே."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.hints.1.text"
msgstr "உங்களுக்கு ஒரு for சுழலு மட்டுமே தேவை - முந்தைய பயிற்சியிலிருந்து கோடுகளின் வரிசையை உருவாக்கப் பயன்படுத்தப்பட்டது."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.hints.2.text"
msgstr "எல்லாவற்றையும் ஒரே நேரத்தில் செய்ய முயற்சிக்காதீர்கள். சிக்கலை சிறிய, எளிதான துணைப் பிரச்சனைகளாகப் பிரிக்கவும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.hints.3.text"
msgstr "இதை வெளியிடும் நிரலை எழுத முயற்சிக்கவும்:\n"
"\n"
"    -----\n"
"    World\n"
"    -----"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.hints.4.text"
msgstr "நீங்கள் மூன்று தனித்தனி வரிகளை வெளியிட வேண்டும் என்பதால், நீங்கள் மூன்று முறை `print()` ஐ அழைக்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.hints.5.text"
msgstr "இதை வெளியிடும் நிரலை எழுத முயற்சிக்கவும்:\n"
"\n"
"    |World|"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box_2
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box_2.hints.0.text"
msgstr "`name` க்கு மேல் இரண்டு தனித்தனி சுழல்கள் தேவைப்படும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box_2
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box_2.hints.1.text"
msgstr "முதல் மற்றும் கடைசி வரியைத் தவிர ஒவ்வொரு வரியிலும் நடுவில் ஒரே எழுத்துகள் உள்ளன. அதாவது நீங்கள் எதையாவது மீண்டும் பயன்படுத்தலாம்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box_2
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box_2.hints.2.text"
msgstr "நடுவில் உள்ள இடைவெளிகளைக் கொண்ட ஒரு மாறியை உருவாக்கி அதை பல முறை பயன்படுத்தவும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box_2
#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box_2.hints.3.text"
msgstr "இடைவெளிகளின் தொகுப்பை உருவாக்க ஒரு சுழலைப் பயன்படுத்தவும், முன்பு உருவாக்கப்பட்ட இடைவெளிகளைப் பயன்படுத்தி வரிகளின் தொகுப்பை அச்சிட இரண்டாவது சுழலைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.hints.0.text"
msgstr "முதல் எழுத்துக்கு முன் 0 இடைவெளிகள் இருக்க வேண்டும், இரண்டாவது எழுத்துக்கு முன் 1 இடைவெளி இருக்க வேண்டும், மூன்றாவது எழுத்து 2 இருக்க வேண்டும்..."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.hints.1.text"
msgstr "நீங்கள் இடைவெளிகளை ஒரு மாறியில் வைத்து, அவற்றை முன்பு போல் ஒரு சுழற்சியில் உருவாக்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.hints.2.text"
msgstr "வேறுபாடு என்னவென்றால், இடைவெளிகளை உருவாக்கும் அதே நேரத்தில் எழுத்துக்களை அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.hints.3.text"
msgstr "வேறு வார்த்தைகளில் கூறுவதானால், இரண்டையும் செய்யும் ஒற்றை சுழல் உங்களுக்குத் தேவை."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.hints.4.text"
msgstr "சுழலின் உடல் இடைவெளிகளையும் எழுத்தையும் அச்சிட வேண்டும், மேலும் ஒரு இடைவெளியையும் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.hints.5.text"
msgstr "முதல் எழுத்துக்கு முன் இடைவெளிகள் இருக்கக்கூடாது என்பதால், ஒரு எழுத்தை அச்சிட்ட பிறகு ஒரு இடைவெளி சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingIfStatements
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_confused_exercise
#: 
msgid "pages.IntroducingIfStatements.steps.excited_confused_exercise.hints.0.text"
msgstr "ஏற்கனவே உள்ள நிரலில் சில வரிகளைச் சேர்த்தால் போதும். ஏற்கனவே உள்ள அனைத்து குறியீடுகளையும் அப்படியே விட வேண்டும்."

#. https://futurecoder.io/course/#IntroducingIfStatements
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_confused_exercise
#: 
msgid "pages.IntroducingIfStatements.steps.excited_confused_exercise.hints.1.text"
msgstr "நீங்கள் சேர்க்கும் குறியீடு ஏற்கனவே உள்ள குறியீட்டைப் போலவே இருக்க வேண்டும்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_first_character.hints.0.text"
msgstr "குறியீடு கிட்டத்தட்ட ஒரே மாதிரியாக இருக்க வேண்டும், இரண்டு சிறிய மாற்றங்களைச் செய்யுங்கள்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_first_character.hints.1.text"
msgstr "உள்ளே உள்ள குறியீடு `if include:` சுழலின் தொடக்கத்தில், முதல் மறு செய்கையில் இயங்குவதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_first_character.hints.2.text"
msgstr "அதாவது `include` என்பது அந்த இடத்தில் `True` ஆக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_first_character.hints.3.text"
msgstr "`if include:` என்பதன் உள்ளே உள்ள குறியீடு, முதல் மறு செய்கைக்குப் பிறகு இயங்காது என்பதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_first_character.hints.4.text"
msgstr "அதாவது முதல் மறு செய்கைக்குப் பிறகு `include` `False` ஆக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#: 
msgid "pages.IfAndElse.steps.capitalise.hints.0.text"
msgstr "இதற்கு தேவையான அனைத்து கருவிகளையும் நீங்கள் கற்றுக்கொண்டீர்கள். நான் உன்னை நம்புகிறேன்! உத்வேகத்திற்காக முந்தைய திட்டங்களைப் பாருங்கள்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#: 
msgid "pages.IfAndElse.steps.capitalise.hints.1.text"
msgstr "புதிய வாக்கியத்தை எழுத்தின் அடிப்படையில் உருவாக்க உங்களுக்கு ஒரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#: 
msgid "pages.IfAndElse.steps.capitalise.hints.2.text"
msgstr "பெரிய எழுத்து அல்லது சிறிய எழுத்தைச் சேர்க்க வேண்டுமா என்பதைத் தேர்வுசெய்ய உங்களுக்கு `if/else` தேவைப்படும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#: 
msgid "pages.IfAndElse.steps.capitalise.hints.3.text"
msgstr "உங்கள் `if/else` ஆனது எந்த சுழலின் மறு செய்கையைப் பொறுத்து வெவ்வேறு உடல்களை இயக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#: 
msgid "pages.IfAndElse.steps.capitalise.hints.4.text"
msgstr "அதாவது உங்கள் `if` நிபந்தனையானது சுழலின் உள்ளே மாறும் மாறியாக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#: 
msgid "pages.IfAndElse.steps.capitalise.hints.5.text"
msgstr "முதல் மறு செய்கையில் உங்களுக்கு ஒரு பெரிய எழுத்து தேவை. பின்வரும் மறு செய்கைகளில் உங்களுக்கு ஒரு சிறிய எழுத்து தேவை."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#: 
msgid "pages.IfAndElse.steps.spongebob.hints.0.text"
msgstr "இது முந்தைய பயிற்சியைப் போன்றது. நிபந்தனை மாறியை எப்போது, எங்கே அமைக்கிறீர்கள் என்பதுதான் வேறுபாடு."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#: 
msgid "pages.IfAndElse.steps.spongebob.hints.1.text"
msgstr "ஒவ்வொரு மறு செய்கையிலும் மாறும் பூலியன் மாறி உங்களிடம் இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#: 
msgid "pages.IfAndElse.steps.spongebob.hints.2.text"
msgstr "முதலில் ஒரு சிறிய நிரலை எழுதவும், அதில் ஒரு பூலியன் மாறியை எடுத்து புரட்டவும், அதாவது மாறி `True` என்றால் அது `False` ஆகவும், அது `False` எனத் தொடங்கினால் `True` ஆகவும் மாறும். சுழல்கள் இல்லை, ஒரு `if/else`."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#: 
msgid "pages.IfAndElse.steps.spongebob.hints.3.text"
msgstr "நீங்கள் `if` நிலையில் மாறியைப் பயன்படுத்த வேண்டும், மேலும் உடலில் உள்ள அதே மாறிக்கு ஒதுக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#: 
msgid "pages.IfAndElse.steps.spongebob.hints.4.text"
msgstr "பெரிய எழுத்து அல்லது சிறிய எழுத்தைத் தேர்ந்தெடுக்கும் `if/else` என்பதை புரட்டுவதை இணைக்கவும்."

#. https://futurecoder.io/course/#TheEqualityOperator
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.if_equals_replacing_characters_exercise
#: 
msgid "pages.TheEqualityOperator.steps.if_equals_replacing_characters_exercise.hints.0.text"
msgstr "ஏற்கனவே உள்ளவற்றைப் போலவே குறியீட்டின் சில வரிகளைச் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingElif
#. 
#.     # __code0__:
#.     if char == 'A':
#.         char = 'T'
#.     if char == 'T':
#.         char = 'A'
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_else
#: 
msgid "pages.IntroducingElif.steps.dna_example_with_else.hints.0.text"
msgstr "மாற்றவும்:\n"
"\n"
"__code0__\n"
"\n"
"திருத்தப்பட்ட துணுக்கைப் போல் இருக்கும். இது ஒரு சிறிய மாற்றம், நகல்-ஒட்டு செய்யாமல் செய்யுங்கள்."

#. https://futurecoder.io/course/#IntroducingElif
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_else
#: 
msgid "pages.IntroducingElif.steps.dna_example_with_else.hints.1.text"
msgstr "இப்போது G மற்றும் C ஐ மாற்றும் குறியீட்டில் அதே வகையான மாற்றத்தைச் செய்யுங்கள்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise
#: 
msgid "pages.OtherComparisonOperators.steps.min_three_exercise.hints.0.text"
msgstr "`x1` மற்றும் `x2` இல் சிறியவற்றை அச்சிடும் நிரலை எழுத முயற்சிக்கவும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.min_three_exercise
#: 
msgid "pages.OtherComparisonOperators.steps.min_three_exercise.hints.1.text"
msgstr "உங்களுக்குத் தேவையானது `<`, `if` மற்றும் ஒருவேளை `else` ஆகியவற்றின் சில பயன்பாடுகள்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#: 
msgid "pages.IntroducingLists.steps.strings_sum.hints.0.text"
msgstr "இது நீங்கள் செய்த பயிற்சிகளை போன்றது, எழுத்தின் அடிப்படையில் சரம் கட்டமைத்ததைப் படித்தீர்கள்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#: 
msgid "pages.IntroducingLists.steps.strings_sum.hints.1.text"
msgstr "தீர்வு எண்களைச் சேர்க்கும் நிரலுக்கு மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#: 
msgid "pages.IntroducingLists.steps.strings_sum.hints.2.text"
msgstr "உண்மையில், சரங்களின் பட்டியலுடன் அந்த நிரலை இயக்க முயற்சித்தால் என்ன நடக்கும்?"

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#: 
msgid "pages.IntroducingLists.steps.strings_sum.hints.3.text"
msgstr "பிரச்சனை என்னவென்றால், 0. ஒரு சரத்தில் 0 ஐ சேர்க்க முடியாது, ஏனெனில் எண்களும் சரங்களும் பொருந்தாது."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#: 
msgid "pages.IntroducingLists.steps.strings_sum.hints.4.text"
msgstr "0 க்கு சரங்களில் இதே போன்ற கருத்து உள்ளதா? வெற்று ஆரம்ப மதிப்பு?"

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.0.text"
msgstr "இது முந்தைய பயிற்சியைப் போன்றது. அதிலிருந்து உங்கள் தீர்வைத் தொடங்கலாம்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.1.text"
msgstr "இந்த பயிற்சிக்கு ஆடம்பரமான எதுவும் தேவையில்லை மற்றும் இறுதி தீர்வு மிகவும் எளிமையானதாக இருக்கும். ஆனால் அதை சரியாகப் பெறுவது தந்திரமானது மற்றும் நீங்கள் அணுகுமுறையைப் பற்றி கவனமாக சிந்திக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.2.text"
msgstr "ஒவ்வொரு மறு செய்கையிலும், பட்டியலில் உள்ள ஒரு சொல்லுடன் கூடுதலாக, பிரிப்பானையும் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.3.text"
msgstr "ஆனால் பட்டியலில் கடைசி வார்த்தையைச் சேர்த்த பிறகு பிரிப்பானைச் சேர்க்க விரும்பவில்லை."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.4.text"
msgstr "எதிர்பாராதவிதமாக சரங்களுடன் \"கழித்தல்\" இல்லை; நீங்கள் கடைசி பிரிப்பானைச் சேர்க்க முடியாது, பின்னர் அதை அகற்றவும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.5.text"
msgstr "பின்வாங்குவோம். இறுதி முடிவில் ஒவ்வொரு வார்த்தையும், `n - 1` பிரிப்பான்களும் இருக்க வேண்டும், இங்கு `n` என்பது வார்த்தைகளின் எண்ணிக்கை."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.6.text"
msgstr "எனவே ஒன்றைத் தவிர ஒவ்வொரு மறு செய்கையிலும் ஒரு பிரிப்பானைச் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.7.text"
msgstr "`if` அறிக்கையைப் பயன்படுத்தி ஒரு குறிப்பிட்ட மறு செய்கையில் பிரிப்பானைச் சேர்ப்பதைத் தவிர்க்கலாம்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.8.text"
msgstr "பின்னர் நீங்கள் ஒரு பட்டியலை மீண்டும் மீண்டும் செய்ய ஒரு வழியைக் கற்றுக்கொள்வீர்கள் மற்றும் நீங்கள் கடைசி மறு செய்கையில் இருக்கிறீர்களா என்பதைச் சரிபார்க்கவும், ஆனால் இப்போது அதைச் செய்ய உங்களுக்கு வழி இல்லை."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.9.text"
msgstr "இருப்பினும், நீங்கள் தவிர்க்கும் மறு செய்கை கடைசியாக இருக்க வேண்டியதில்லை!"

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.10.text"
msgstr "நீங்கள் ஒரு சுழலின் *முதல்* மறு செய்கையில் உள்ளீர்களா என்பதைச் சரிபார்க்கும் ஒரு நிரலை எழுதலாம்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.11.text"
msgstr "இதைக் கண்காணிக்க ஒரு பூலியன் மாறியை உருவாக்கவும். எந்த ஒப்பீட்டு இயக்கிகள் அல்லது எண்கள் தேவையில்லை."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.12.text"
msgstr "இது போன்ற ஒன்றைச் செய்த நிரல்களைப் பார்த்தோம் [இங்கே](#UnderstandingProgramsWithSnoop)."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.13.text"
msgstr "எனவே முதல் மறு செய்கையில் பிரிப்பானைச் சேர்ப்பதை மட்டும் தவிர்த்துவிட்டால், உங்களிடம் `n - 1` பிரிப்பான்கள் இருக்கும். பிரிப்பான்கள் சரியான இடத்தில் இருப்பதை எவ்வாறு உறுதிப்படுத்துவது என்பதை இப்போது நீங்கள் கவனமாக சிந்திக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.14.text"
msgstr "ஒரு கணம் சுழலை மறந்துவிட்டு, இந்த வரிசையில் சரத்தில் பின்வருவனவற்றைச் சேர்க்க வேண்டும்: முதல் சொல், பிரிப்பான், இரண்டாவது சொல், பிரிப்பான், மூன்றாவது சொல் போன்றவை."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.15.text"
msgstr "அதாவது முதல் மறு செய்கையில், நீங்கள் முதல் வார்த்தையை மட்டும் சேர்க்க வேண்டும். இரண்டாவது மறு செய்கையில், பிரிப்பானையும், பின்னர் இரண்டாவது வார்த்தையையும் சேர்க்கவும். மூன்றாவது மறு செய்கையில், பிரிப்பானையும், பின்னர் மூன்றாவது வார்த்தையையும் சேர்க்கவும். மற்றும் பல."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.16.text"
msgstr "எனவே உங்கள் சுழலின் உள்ளே, முதலில் பிரிப்பானைச் சேர்க்கவும், பிறகு வார்த்தையைச் சேர்க்கவும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.17.text"
msgstr "பூலியன் மாறியைச் சரிபார்த்து முதல் மறு செய்கையில் பிரிப்பானைச் சேர்ப்பதைத் தவிர்க்கவும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.18.text"
msgstr "சுழலுக்கு முன் பூலியன் மாறியை உருவாக்கவும், பின்னர் அதை சுழலுக்குள் மாற்றவும்."

#. https://futurecoder.io/course/#IntroducingLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#: 
msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.19.text"
msgstr "அதைச் சரிபார்த்த பிறகு அதை சுழலில் மட்டும் மாற்றவும் அல்லது முதல் மறு செய்கையைத் தவிர்க்க முடியாது."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.hints.0.text"
msgstr "`*` ஐப் பயன்படுத்தி எண்களைப் பெருக்கலாம் என்பதை நினைவில் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.hints.1.text"
msgstr "இந்த நிரல் கட்டமைப்பு ரீதியாக நீங்கள் எழுதிய நிரல்களுடன் எழுத்துமுறையின் அடிப்படையில் சரங்களை உருவாக்குவதற்கு மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.hints.2.text"
msgstr "ஒரு புதிய பட்டியலை உருவாக்கவும், பின்னர் ஒரு for சுழலில் உறுப்பு மூலம் அதை உருவாக்கவும்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.hints.3.text"
msgstr "வெற்று பட்டியலுடன் தொடங்கவும்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.hints.4.text"
msgstr "`[x]` என்று எழுதுவதன் மூலம் `x` என்ற ஒரு உறுப்புடன் பட்டியலை உருவாக்கலாம்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.double_numbers
#: 
msgid "pages.BuildingNewLists.steps.double_numbers.hints.5.text"
msgstr "ஒரு உறுப்பைக் கொண்ட பட்டியலைச் சேர்ப்பதன் மூலம் பட்டியலில் ஒரு உறுப்பைச் சேர்க்கலாம்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers
#: 
msgid "pages.BuildingNewLists.steps.filter_numbers.hints.0.text"
msgstr "இது முந்தைய பயிற்சிக்கு மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers
#: 
msgid "pages.BuildingNewLists.steps.filter_numbers.hints.1.text"
msgstr "வேறுபாடு என்னவென்றால், சில நேரங்களில் நீங்கள் புதிய பட்டியலில் சேர்ப்பதைத் தவிர்க்க வேண்டும்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers
#: 
msgid "pages.BuildingNewLists.steps.filter_numbers.hints.2.text"
msgstr "`if` அறிக்கையைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#BuildingNewLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers
#: 
msgid "pages.BuildingNewLists.steps.filter_numbers.hints.3.text"
msgstr "ஒரு எண் சேர்க்கும் அளவுக்கு பெரியதாக உள்ளதா என்று சோதிக்க ஒப்பீட்டு இயக்கியைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.0.text"
msgstr "உங்களுக்கு ஒரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.1.text"
msgstr "உங்களுக்கு `if` அறிக்கை தேவைப்படும்."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.2.text"
msgstr "உங்களுக்கு ஒரு ஒப்பீட்டு இயக்கி தேவை."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.3.text"
msgstr "குறிப்பாக `==`."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.4.text"
msgstr "நீங்கள் இறுதியில் அச்சிடும் பூலியன் மாறி வேண்டும்."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.5.text"
msgstr "பட்டியலில் உள்ள உறுப்பை நீங்கள் கண்டால், அந்த மாறியை `True` என அமைக்க வேண்டும்."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.6.text"
msgstr "உறுப்பைக் கண்டுபிடித்துவிட்டால், அதைக் கண்டுபிடிக்க முடியாது என்பதில்லை."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.7.text"
msgstr "அதாவது, நீங்கள் மாறியை `True` என அமைத்தவுடன், அதன் பிறகு வேறு எதையும் அமைக்கக்கூடாது."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.8.text"
msgstr "`else` பயன்படுத்த வேண்டாம்."

#. https://futurecoder.io/course/#UsingBreak
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#: 
msgid "pages.UsingBreak.steps.list_contains_exercise.hints.9.text"
msgstr "சுழலின் உள்ளே எப்போதும் மாறியை `False` என அமைக்க எந்த காரணமும் இல்லை."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.0.text"
msgstr "நீங்கள் `things`இன் சாத்தியமான அனைத்து குறியீடுகளையும் பார்த்து, பதில் எது என்பதைச் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.1.text"
msgstr "சாத்தியமான அனைத்து குறியீடுகளையும் பார்க்க, உங்களுக்கு `range(len(things))` மீது ஒரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.2.text"
msgstr "குறியீடு பதில்தானா என்பதைச் சரிபார்க்க, நீங்கள் இதைப் பயன்படுத்த வேண்டும்:"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.3.text"
msgstr "- `if`"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.4.text"
msgstr "- சந்தாவில் உள்ள குறியீடு"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.5.text"
msgstr "- `==`"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.6.text"
msgstr "நீங்கள் முதல் குறியீட்டைத் தேடுவதால், கண்டறிந்ததும் சுழலை நிறுத்த வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.7.text"
msgstr "நடுவில் ஒரு சுழலை எப்படி நிறுத்துவது என்பதை சமீபத்தில் கற்றுக்கொண்டீர்கள்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.hints.8.text"
msgstr "நீங்கள் `break` பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.0.text"
msgstr "ஓட்டில் உள்ள சரங்களைக் கொண்டு அட்டவணைப்படுத்துதல் மற்றும் `len()` ஆகியவற்றைப் பரிசோதித்தீர்களா?"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.1.text"
msgstr "ஒரு கணம் சுழல்களை மறந்து விடுங்கள். இரண்டு சரங்களில் ஒவ்வொன்றின் முதல் எழுத்தைக் கொண்ட முதல் வரியை மட்டும் எப்படி அச்சிடுவீர்கள்?"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.2.text"
msgstr "இரண்டாவது வரியில் நீங்கள் ஒவ்வொரு சரத்தின் இரண்டாவது எழுத்தையும் அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.3.text"
msgstr "உங்களுக்கு `for` சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.4.text"
msgstr "உங்களுக்கு அட்டவணைப்படுத்தல் (சந்தா) தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.5.text"
msgstr "உங்களுக்கு `range` தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.6.text"
msgstr "உங்களுக்கு `len` தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.7.text"
msgstr "உங்களுக்கு `+` தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.8.text"
msgstr "நீங்கள் இரண்டு சரங்களையும் அட்டவணைப்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_exercise.hints.9.text"
msgstr "பொருந்தும் எழுத்துகளை மீட்டெடுக்க ஒவ்வொரு முறையும் ஒரே குறியீட்டை இரண்டு சரங்களுக்கும் அனுப்ப வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.0.text"
msgstr "தீர்வு முந்தைய தீர்வின் அதே ஒட்டுமொத்த அமைப்பு மற்றும் அத்தியாவசிய கூறுகளைக் கொண்டுள்ளது, ஆனால் இது கணிசமாக நீளமானது மற்றும் சில கூடுதல் எண்ணங்கள் மற்றும் துண்டுகள் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#.     # __code0__:
#.     for i in range(...):
#.         ...
#.         print(char1 + ' ' + char2)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.1.text"
msgstr "குறிப்பாக, இது இன்னும் சிலவற்றைக் கொண்டிருக்க வேண்டும்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.2.text"
msgstr "`range()` க்குள் என்ன செல்ல வேண்டும்? `len(string1)` அல்லது `len(string2)` போதுமானதாக இல்லை."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.3.text"
msgstr "நீளமான சரத்தில் உள்ள ஒவ்வொரு எழுத்துக்கும் சுழல் மறு செய்கை வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.4.text"
msgstr "அதாவது உங்களுக்கு `range(<நீண்ட சரத்தின் நீளம்>)` தேவை"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.5.text"
msgstr "வேறு வார்த்தைகளில் கூறுவதானால், `len(string1)` மற்றும் `len(string2)` ஆகிய இரண்டு மதிப்புகளில் பெரியதை நீங்கள் கண்டுபிடிக்க வேண்டும். நீங்கள் ஏற்கனவே இது போன்ற ஒரு பயிற்சியை செய்துள்ளீர்கள்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.6.text"
msgstr "நீங்கள் `for i in range(...)` என வரிசைப்படுத்தியவுடன், `i` சில சமயங்களில் இரண்டு சரங்களுக்கும் சரியான குறியீடாக இருக்க முடியாத அளவுக்கு பெரிதாக இருக்கும். அட்டவணைப்படுத்துவதற்கு முன், அது மிகப் பெரியதா என்பதை நீங்கள் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.7.text"
msgstr "நினைவில் கொள்ளுங்கள், `string1`க்கான மிகப் பெரிய செல்லுபடியாகும் குறியீடு `len(string1) - 1`. `len(string)` மிகப் பெரியது."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.8.text"
msgstr "உங்களுக்கு இரண்டு `if` அறிக்கைகள் தேவைப்படும், ஒவ்வொரு சரத்திற்கும் ஒன்று."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.zip_longest_exercise.hints.9.text"
msgstr "`string1[i]` செல்லுபடியாகாதபோது எ.கா `char1 = ' '` அமைக்க வேண்டும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = ['a', 'b', 'c']`, பின்னர் ஒரு வரி பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்டது (கூடுதல்கள் இல்லை), மற்றும் `print(x)`."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.1.text"
msgstr "முதல் உறுப்பை இறுதிக்கு நகர்த்துவதற்கு இரண்டு things தேவை."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.2.text"
msgstr "முதல் உறுப்பை நீக்குகிறது..."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.3.text"
msgstr "மற்றும் அதை இறுதியில் சேர்க்கிறது."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.4.text"
msgstr "இதற்கு நீங்கள் எந்த செயல்பாடுகள்/முறைகளைப் பயன்படுத்தலாம்?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.5.text"
msgstr "முதல் குறியீடு 0 என்பதை நினைவில் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = ['a', 'b', 'c']`, பின்னர் ஒரு வரி பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்டது (கூடுதல்கள் இல்லை), மற்றும் `print(x)`."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.1.text"
msgstr "`x` இல் முதல் உறுப்பின் மதிப்பைப் பெற வேண்டும்..."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.2.text"
msgstr "மேலும் அந்த மதிப்பை `x` இல் உள்ள கடைசி நிலைக்கு ஒதுக்கவும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.3.text"
msgstr "பட்டியலில் உள்ள ஒரு குறிப்பிட்ட குறியீட்டில் மதிப்பை எவ்வாறு ஒதுக்குவது?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.4.text"
msgstr "`x` இல் உள்ள முதல் மற்றும் கடைசி உறுப்புகளின் குறியீடுகள் என்ன?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = ['a', 'b', 'c']`, `y = ` பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்ட ஒரு வரி, மற்றும் `print(y)`."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.1.text"
msgstr "எந்த குறியீடு வரிகள் மாற்றியமைப்பதை விட புதிய பட்டியலை உருவாக்குகின்றன?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.2.text"
msgstr "`x` என்பது ஒரு பட்டியல். `x` இன் ஒவ்வொரு உறுப்பும் ஒரு சரம்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.3.text"
msgstr "நீங்கள் பட்டியல்களை ஒன்றாக சேர்க்கலாம், நீங்கள் சரங்களை ஒன்றாக சேர்க்கலாம், ஆனால் நீங்கள் ஒரு சரத்தையும் பட்டியலையும் சேர்க்க முடியாது."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.4.text"
msgstr "ஒரு உறுப்பு அடங்கிய பட்டியலை எவ்வாறு உருவாக்குவது?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = [1, 2, 0, 3]`, ஒரு வரி பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்டது (சேர்க்கவில்லை), மற்றும் `print(x)`."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.1.text"
msgstr "`x.remove(0)` என்ன செய்கிறது?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.2.text"
msgstr "இது ஒரு உறுப்பை நீக்குகிறது!"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.3.text"
msgstr "எந்தச் செயல்பாடு/முறையால் ஒரு உறுப்பை அகற்ற முடியும்?"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.4.text"
msgstr "மற்ற செயல்பாடு/முறையை 'remove 0' என்று சொல்ல முடியாது, அதற்கு வேறு வகையான தகவல் தேவை."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.5.text"
msgstr "குறிப்பாக, 0 எங்கே என்று சொல்ல வேண்டும்."

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.remove_exercise
#: 
msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.6.text"
msgstr "எந்த செயல்பாடு/முறை அந்த வகையான தகவலை வழங்குகிறது?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = ['a', 'b', 'c']`, `y = ` பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்ட ஒரு வரி, மற்றும் `print(y)`."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum.hints.1.text"
msgstr "`1 in x` எப்போது உண்மை?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum.hints.2.text"
msgstr "`1` `x` இல் இருக்கும்போது!"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum.hints.3.text"
msgstr "`1` என்பது `x` இல் ஒருமுறை, அல்லது இரண்டு முறை, அல்லது மூன்று முறை..."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.count_in_sorted_sum.hints.4.text"
msgstr "ஆனால் சுழிய முறை அல்ல!"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.average_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.average_exercise.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = [15, 12, -6, 3]`, `y = ` பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்ட ஒரு வரி, மற்றும் `print(y)`."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.average_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.average_exercise.hints.1.text"
msgstr "உங்களுக்கு உறுதியாக தெரியவில்லை என்றால், கூட்டுசராசரி/சராசரியை எப்படி கணக்கிடுவது என்று பார்க்கவும்."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.average_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.average_exercise.hints.2.text"
msgstr "`x` இல் உள்ள எண்களின் சராசரியைக் கணக்கிட, நமக்கு இரண்டு பொருட்கள் தேவை."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.average_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.average_exercise.hints.3.text"
msgstr "எந்த இரண்டு செயல்பாடுகள்/முறைகள் அந்த இரண்டு பொருட்களை உங்களுக்கு வழங்குகின்றன?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.average_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.average_exercise.hints.4.text"
msgstr "சராசரியை கணக்கிடுவதற்கு அந்த இரண்டு பொருட்களையும் எவ்வாறு இணைப்பது?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sum_range_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sum_range_exercise.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = 100`, `y = ` பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்ட ஒரு வரி, மற்றும் `print(y)`."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sum_range_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sum_range_exercise.hints.1.text"
msgstr "பொருட்களைச் சேர்க்க என்ன செயல்பாடு/முறையைப் பயன்படுத்தலாம்?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sum_range_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sum_range_exercise.hints.2.text"
msgstr "எந்தச் செயல்பாடு/முறை நமக்கு `1, 2, 3, ..., x` எண்களைத் தருகிறது?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.sum_range_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.sum_range_exercise.hints.3.text"
msgstr "நீங்கள் ஒரு சிறிய மாற்றத்தை செய்ய வேண்டும், இல்லையெனில் அந்த கடைசி எண் `x` விடப்படும்."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.hints.0.text"
msgstr "உங்கள் தீர்வு சரியாக மூன்று அறிக்கைகளைக் கொண்டிருக்க வேண்டும்: `x = [12, -6, 2, -1, 3]`, `y = ` பட்டியலிலிருந்து சரியாக நகலெடுக்கப்பட்ட ஒரு வரி, மற்றும் `print(y)`."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.hints.1.text"
msgstr "`x` இல் உள்ள எண்கள் அனைத்தும் ஒழுங்கற்றதாகத் தெரிகிறது. அதற்கு நீங்கள் ஏதாவது செய்ய முடியுமா?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.hints.2.text"
msgstr "அந்த பகுதியை நீங்கள் கண்டுபிடித்திருந்தால், ஓட்டில் அந்த செயல்பாட்டைப் பயன்படுத்தி விளையாட முயற்சிக்கவும்."

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.hints.3.text"
msgstr "பட்டியலில் உள்ள சிறிய மதிப்பைப் பெற, அந்தச் செயல்பாட்டை எவ்வாறு பயன்படுத்துவீர்கள்? மிகப்பெரியது பற்றி என்ன?"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise
#: 
msgid "pages.MoreListFunctionsAndMethods.steps.second_smallest_in_list_exercise.hints.4.text"
msgstr "அதன் பிறகு, *இரண்டாவது* சிறிய மதிப்பை எவ்வாறு பெறுவது?"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.sum_list
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.sum_list.hints.0.text"
msgstr "உங்கள் தேடல் வினவலில் 'python' மற்றும் 'list' என்ற வார்த்தைகளைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.sum_list
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.sum_list.hints.1.text"
msgstr "ஒரே வார்த்தையில், `[21, 55, 4, 91, 62, 49]` பட்டியலில் `91` இன் சிறப்பு என்ன?"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.sum_list
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.sum_list.hints.2.text"
msgstr "'பெரிய' அல்லது 'மிகப்பெரிய'"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.sum_list
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.sum_list.hints.3.text"
msgstr "'பட்டியலில் பைதான் மிகப்பெரிய மதிப்பு'"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.list_insert
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.list_insert.hints.0.text"
msgstr "உங்கள் தேடல் வினவலில் 'python' மற்றும் 'list' என்ற வார்த்தைகளைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.list_insert
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.list_insert.hints.1.text"
msgstr "தொடக்கத்திலோ அல்லது முடிவிலோ மதிப்பை வைப்பதற்குப் பதிலாக, அதை ____________ என்று வைக்க வேண்டுமா?"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.list_insert
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.list_insert.hints.2.text"
msgstr "'நடுவில்' அல்லது 'ஒரு குறியீட்டில்' அல்லது 'ஒரு குறிப்பிட்ட நிலையில்'"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.HowToFindInformationWithGoogleAndMore.steps.list_insert
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.steps.list_insert.hints.3.text"
msgstr "'பைதான் குறியீட்டில் மதிப்பைச் சேர்க்கவும்'"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.0.text"
msgstr "சரத்தை எப்படி வரையறுக்க வேண்டும்?"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.1.text"
msgstr "ஒற்றை மேற்கோள்களுடன், அல்லது இரட்டை மேற்கோள்களுடன்?"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.2.text"
msgstr "உங்களுக்கு ஒரு சரம் மட்டுமே தேவை."

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.3.text"
msgstr "சரங்களை ஒன்றாக சேர்க்க தேவையில்லை."

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.hints.0.text"
msgstr "எளிமையாக சிந்தியுங்கள்! சாதாரணமாக இதை எப்படி செய்வீர்கள்?"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.hints.1.text"
msgstr "ஒரு சரத்தில் ஒற்றை மேற்கோள் இருந்தால், அதை வரையறுக்க இரட்டை மேற்கோள்களைப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.hints.2.text"
msgstr "சரத்தில் இரட்டை மேற்கோள்கள் இருந்தால் என்ன செய்வது?"

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.basic_f_string_exercise
#: 
msgid "pages.IntroducingFstrings.steps.basic_f_string_exercise.hints.0.text"
msgstr "கொடுக்கப்பட்ட f-சரம் உதாரணத்தைப் போலவே இதுவும்."

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.basic_f_string_exercise
#: 
msgid "pages.IntroducingFstrings.steps.basic_f_string_exercise.hints.1.text"
msgstr "`f`ஐ மறந்துவிட்டீர்களா?"

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.basic_f_string_exercise
#: 
msgid "pages.IntroducingFstrings.steps.basic_f_string_exercise.hints.2.text"
msgstr "உங்களுக்கு எத்தனை இணை சுருள் அடைப்புக்குறிகள் தேவை?"

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.hints.0.text"
msgstr "`print` உள்ளே உள்ள வெளிப்பாட்டில் நான்கு சிக்கல்கள் உள்ளன."

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.hints.1.text"
msgstr "நபர்களின் எண்ணிக்கையைக் கண்டறியும் தொடரியலில் சிக்கல் உள்ளது."

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.hints.2.text"
msgstr "பின்னர் ஒரு சரத்தில் மேற்கோள்களில் சிக்கல் உள்ளது."

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.hints.3.text"
msgstr "மேலும் முதல் நபரின் பெயரைக் கண்டுபிடிக்கும் தொடரியல் சிக்கல் உள்ளது."

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.hints.4.text"
msgstr "நீங்கள் சரங்களையும் எண்களையும் ஒன்றாகச் சேர்க்க முடியாது!"

#. https://futurecoder.io/course/#IntroducingFstrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#: 
msgid "pages.IntroducingFstrings.steps.fix_broken_program.hints.5.text"
msgstr "உங்கள் f-சரத்தில் சுருள் அடைப்புக்குறிகளை சரியாகப் பயன்படுத்தியுள்ளீர்களா?"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.0.text"
msgstr "ஒரு for சுழல் உள்ளே ஒரு for சுழல் ஐப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.1.text"
msgstr "உங்களுக்கு 1 முதல் 12 வரையிலான எண்கள் தேவை."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.2.text"
msgstr "உங்களுக்கு தொடர்ச்சியான எண்களின் வரிசை தேவைப்படும் போதெல்லாம், `range` ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.3.text"
msgstr "`for x in range(n):` போன்ற ஒன்றை நீங்கள் விரும்புகிறீர்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.4.text"
msgstr "இது `x = 0` உடன் தொடங்கும், ஆனால் அதற்கு ஒரு சுலபமான தீர்வு உள்ளது."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.5.text"
msgstr "`x`க்கு 1ஐ மட்டும் சேர்க்கலாம்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.6.text"
msgstr "எண்களைப் பெருக்க `*` ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.7.text"
msgstr "பல மாறிகள் கொண்ட f-சரம் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.8.text"
msgstr "ஒவ்வொரு பிரிவிற்குப் பிறகும் சரியான எண்ணிக்கையிலான கோடுகளுடன் ஒரு வரியை அச்சிட நினைவில் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.hints.9.text"
msgstr "ஒவ்வொரு வரியும் சரியான சுழலில் இருப்பதையும், சரியான அளவு உள்தள்ளலையும் உள்ளதா என்பதையும் உறுதிப்படுத்திக் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_exercise.hints.0.text"
msgstr "எழுதுகோல் மற்றும் காகிதத்துடன் இதை கைமுறையாகவும் முறையாகவும் எப்படிச் செய்வீர்கள் என்று சிந்தியுங்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_exercise.hints.1.text"
msgstr "ஒரு for சுழல் உள்ளே a for சுழல் ஐப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_exercise.hints.2.text"
msgstr "இரண்டு வீரர்களும் ஒரே நபர் அல்ல என்பதைச் சரிபார்க்க உங்களுக்கு `if` அறிக்கை தேவை."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.0.text"
msgstr "எழுதுகோல் மற்றும் காகிதத்துடன் இதை கைமுறையாகவும் முறையாகவும் எப்படிச் செய்வீர்கள் என்று சிந்தியுங்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.1.text"
msgstr "கடவுச்சொல் நான்கு எழுத்துக்கள் கொண்டதாக இருக்க வேண்டும் என்பது மிகவும் முக்கியமானது. கடவுச்சொல் எந்த நீளமாக இருந்தாலும் இதைத் தீர்ப்பது மிகவும் கடினமாக இருக்கும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.2.text"
msgstr "ஆனால் `letters` சரத்தில் எத்தனை எழுத்துகள் வேண்டுமானாலும் இருக்கலாம்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.3.text"
msgstr "`n` வெவ்வேறு எழுத்துக்கள் இருந்தால், சாத்தியமான கடவுச்சொற்களின் எண்ணிக்கை `n^4 == n*n*n*n` ஆகும், ஏனெனில் ஒவ்வொரு நிலைக்கும் `n` சாத்தியமான எழுத்துக்கள் இருப்பதால் அவை அனைத்தும் சுயாதீனமானவை."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.4.text"
msgstr "மீண்டும் `letters = \"ABCD\"` என்று வைத்துக்கொள்வோம். உங்களிடம் மூன்று எழுத்து கடவுச்சொற்கள் உள்ளன என்று கற்பனை செய்து பாருங்கள். இப்போது ஒவ்வொன்றிற்கும், இறுதியில் A ஐச் சேர்க்கவும் அல்லது B, அல்லது C அல்லது D ஐச் சேர்க்கவும். அப்படித்தான் நீங்கள் நான்கு எழுத்து கடவுச்சொற்களைப் பெறுவீர்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.5.text"
msgstr "ஒரு for சுழல் எந்த அறிக்கையையும் கொண்டிருக்கலாம், மற்றொன்று for சுழல் உட்பட."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.6.text"
msgstr "இது அனைத்து சுழல்களுக்கும் பொருந்தும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.7.text"
msgstr "சுழலுக்கு ஒன்று உள்ளே சுழலுக்கு மற்றொன்று இனி போதாது."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.crack_password_exercise.hints.8.text"
msgstr "நீங்கள் ஆழமாக செல்ல வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.0.text"
msgstr "இந்த முக்கோணத்தில் கைமுறையாக தட்டச்சு செய்வதற்கான வழிமுறைகளை எவ்வாறு விவரிப்பீர்கள்?"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.1.text"
msgstr "`size` கூட்டல் குறிகளின் வரியை அச்சிடவும், பின்னர் `size - 1` கூட்டல் குறிகள், முதலியன 1 கூட்டல் குறிக்கு கீழே அச்சிடவும். எடுத்துக்காட்டாக 5 `+`கள், பின்னர் 4 `+`கள், பின்னர் 3, 2 மற்றும் 1 ஐ அச்சிடவும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.2.text"
msgstr "இதை துணைப் பிரச்சனைகளாகப் பிரிக்கவும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.3.text"
msgstr "கொடுக்கப்பட்ட நீளத்தின் `+`களின் ஒரு வரியை எவ்வாறு அச்சிடுவீர்கள், மேலும் அனைத்து நீளங்களையும் எவ்வாறு கடந்து செல்வது?"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.4.text"
msgstr "எழுத்துக்களின் வரிசையை உருவாக்குவது முந்தைய பயிற்சிகளிலிருந்து நன்கு தெரிந்திருக்க வேண்டும், ஒரே வேறுபாடு என்னவென்றால், நீங்கள் அதை மற்றொரு சரத்தின் அதே நீளத்திற்கு பதிலாக கொடுக்கப்பட்ட நீளமாக மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.5.text"
msgstr "`n` முறை ஒன்றைச் செய்வதற்கான எளிதான வழி `range(n)` மீது சுழல் செய்வதாகும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.6.text"
msgstr "ஒரு for சுழல் உள்ளே ஒரு for சுழலைப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.7.text"
msgstr "5, 4, 3, 2, 1 போன்ற எண்களைக் கணக்கிடும் எண்கள் உங்களுக்குத் தேவை. `range` மூலம் இதைச் செய்ய ஒரு வழி உள்ளது, அதை நீங்கள் எளிதாகப் பார்க்கலாம், ஆனால் சாதாரண வரம்பைப் பயன்படுத்தி சிலவற்றைச் செய்வதும் எளிதானது எண்ணும் எண்களை எண்ணும் எண்களாக மாற்ற மிக எளிய கணிதம்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise.hints.8.text"
msgstr "0 ஐ 5 ஆகவும், 1 ஐ 4 ஆகவும், 2 ஐ 3 ஆகவும் மாற்றும் சூத்திரம் எது?"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.0.text"
msgstr "முன்பு போல் ஒரு for சுழல் உள்ளே ஒரு for சுழல் வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.1.text"
msgstr "இந்த முறை, `for player1 in players:` என்பது போதுமானதாக இருக்காது."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.2.text"
msgstr "பட்டியலில் உள்ள வீரர்களின் *நிலைகளை* உங்கள் நிரல் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.3.text"
msgstr "அதாவது, பட்டியல் உள்ளீடுகளை அணுக, நீங்கள் நிலைகளை சுழல் செய்ய வேண்டும் மற்றும் அட்டவணைப்படுத்தல் (சந்தா) பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.4.text"
msgstr "நிலைகளை சுழல் செய்ய, `range` பயன்படுத்தவும்..."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.5.text"
msgstr "...மற்றும் `len`."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.6.text"
msgstr "விரும்பிய வெளியீட்டைப் பாருங்கள்: `Charlie vs Alice`: `players` பட்டியலில் `Alice`க்கு முன் `Charlie` வருகிறது."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.7.text"
msgstr "`players` என்பதில் `Charlie`க்குப் பிறகு `Alice` வருவதால் `Alice vs Charlie` என்று அச்சிட விரும்பவில்லை."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.8.text"
msgstr "பட்டியலில் சரியான ஆட்டக்காரருக்கு முன் இடது ஆட்டக்காரர் வரும் இணைகளை மட்டுமே நாங்கள் அச்சிட விரும்புகிறோம்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.9.text"
msgstr "இரண்டு சுழல்களின் பட்டியல் குறியீடுகளின் அடிப்படையில் இந்த உறவை எவ்வாறு வெளிப்படுத்தலாம்?"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.10.text"
msgstr "நீங்கள் ஒரு ஒப்பீட்டு இயக்கியைப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_bonus
#: 
msgid "pages.IntroducingNestedLoops.steps.player_vs_player_bonus.hints.11.text"
msgstr "நீங்கள் உறவைக் கண்டறிந்ததும், அதை `if` அறிக்கை மூலம் வெளிப்படுத்தலாம்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.string_list_exercise.hints.0.text"
msgstr "பட்டியலில் உள்ள இரண்டாவது சரத்தை எவ்வாறு அணுகுவது?"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.string_list_exercise.hints.1.text"
msgstr "ஒரு சரத்தில் ஒரு குறிப்பிட்ட எழுத்தை எவ்வாறு அணுகுவது?"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.string_list_exercise.hints.2.text"
msgstr "பட்டியல்கள் மற்றும் சரங்களின் அட்டவணைப்படுத்தல் மிகவும் ஒத்ததாக இருப்பதை நினைவில் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.0.text"
msgstr "இது முந்தைய பயிற்சிக்கு மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.1.text"
msgstr "பட்டியலின் கடைசி நிலையை (`len` ஐப் பயன்படுத்தாமல்) எப்படி அணுகுவது என்பது உங்களுக்கு நினைவிருக்கிறதா?"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.2.text"
msgstr "இதேபோல் ஒரு பட்டியலில் இரண்டாவது கடைசி நிலையை எவ்வாறு அணுகுவது?"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.3.text"
msgstr "உங்களுக்கு நினைவில் இல்லை என்றால், நீங்கள் அதை இணையத்தில் பார்க்கலாம்!"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.4.text"
msgstr "அட்டவணைப்படுத்தல் பட்டியல்கள் மற்றும் சரங்களில் இதேபோல் செயல்படுகிறது."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.5.text"
msgstr "`குறியீட்டு வரம்பிற்கு வெளியே` பிழையைப் பெறுகிறீர்களா? இது ஒரு சரத்துக்கா அல்லது பட்டியலா? ஏன்?"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.6.text"
msgstr "பட்டியல் அட்டவணை மற்றும் சரம் குறியீட்டின் வரிசையை நீங்கள் குழப்பவில்லை என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#: 
msgid "pages.IntroducingNestedLists.steps.double_subscripting_exercise.hints.7.text"
msgstr "உங்களுக்கு சிக்கல் இருந்தால் `birdseye`ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.hints.0.text"
msgstr "இது முந்தைய பயிற்சிகளுடன் மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.hints.1.text"
msgstr "சந்தாவை எத்தனை முறை பயன்படுத்த வேண்டும்?"

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.hints.2.text"
msgstr "முதலில் நீங்கள் ஒரு துணைப்பட்டியலை அணுக வேண்டும்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.hints.3.text"
msgstr "பிறகு அந்த துணைப்பட்டியலில் ஒரு சரம்."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.hints.4.text"
msgstr "அப்போது அந்த சரத்தில் ஒரு எழுத்து."

#. https://futurecoder.io/course/#IntroducingNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#: 
msgid "pages.IntroducingNestedLists.steps.triple_subscripting.hints.5.text"
msgstr "உங்களுக்கு சிக்கல் இருந்தால் `birdseye` ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.string_contains_word_exercise.hints.0.text"
msgstr "ஒரு சரத்தில் ஒரு வார்த்தை இருக்கிறதா என்பதை எவ்வாறு சரிபார்க்கலாம்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.string_contains_word_exercise.hints.1.text"
msgstr "**சரத்தில்** துணைப்பட்டியல் இல்லை, வார்த்தை உள்ளதா என்பதைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.string_contains_word_exercise.hints.2.text"
msgstr "உள்ளமைக்கப்பட்ட பட்டியலின் ஒவ்வொரு துணைப்பட்டியலிலும் உள்ள ஒவ்வொரு சரத்தையும் எவ்வாறு அணுகலாம்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.string_contains_word_exercise.hints.3.text"
msgstr "நீங்கள் ஒரு உள்ளமை சுழலைப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.string_contains_word_exercise.hints.4.text"
msgstr "சுழல்கள் பக்கத்தின் தொடக்கத்தில் உள்ள அதே மாதிரியைப் பின்பற்ற வேண்டும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.0.text"
msgstr "ஒவ்வொரு துணைப்பட்டியலுக்கும், ஒரு பூலியனை வரையறுக்கவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.1.text"
msgstr "துணைப்பட்டியலைச் சென்று, அதற்கேற்ப பூலியனைப் புதுப்பிக்கவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.2.text"
msgstr "ஒவ்வொரு துணைப் பட்டியலுக்கும் பூலியனை ஒரு முறை மட்டுமே அச்சிடவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.3.text"
msgstr "பூலியனின் ஆரம்ப மதிப்பு என்னவாக இருக்க வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.4.text"
msgstr "துணைப்பட்டியலில் ஒன்று காலியாக இருந்தால் என்ன செய்வது? அந்த துணைப்பட்டியலுக்கு நீங்கள் எதை அச்சிட வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.5.text"
msgstr "ஒரு சரத்தில் வார்த்தையைக் கண்டால், பூலியன் `True` என அமைக்கப்பட வேண்டும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.6.text"
msgstr "ஒரு சரத்தில் வார்த்தை இல்லை என்றால் என்ன செய்வது?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.7.text"
msgstr "பரவாயில்லை! வேறு எந்த சரத்திலும் இந்த வார்த்தை இருக்கலாம் என்பதை இது மாற்றாது."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise.hints.8.text"
msgstr "வேறு வார்த்தைகளில் கூறுவதானால், ஆரம்பத்தில் தவிர பூலியனை `False` என அமைக்க வேண்டாம்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.list_contains_word_exercise.hints.0.text"
msgstr "இது முந்தைய பயிற்சிக்கு மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.list_contains_word_exercise.hints.1.text"
msgstr "பூலியனை எப்போது அச்சிட வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.list_contains_word_exercise.hints.2.text"
msgstr "நீங்கள் அதை ஒரு முறை மட்டுமே அச்சிட விரும்புகிறீர்கள் என்பதை நினைவில் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.list_contains_word_exercise.hints.3.text"
msgstr "ஒவ்வொரு துணைப்பட்டியலுக்கும் ஒரு பூலியனை வரையறுப்பதற்குப் பதிலாக, முழுப் பட்டியலுக்கும் ஒரே ஒரு பூலியனை மட்டும் வரையறுக்கவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.list_contains_word_exercise.hints.4.text"
msgstr "பூலியனை எப்போது, எப்படி மாற்ற வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.0.text"
msgstr "இந்தப் பக்கத்தில் உள்ள முந்தைய பயிற்சிகளைப் போல இது இல்லை."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.1.text"
msgstr "இரண்டு சரங்கள் இருக்கும் போது தீர்வு பற்றி யோசி. அதை சரங்களின் பட்டியலுக்கு எவ்வாறு பொதுமைப்படுத்துவது?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.2.text"
msgstr "நீங்கள் முதல் எழுத்துக்கள், பின்னர் இரண்டாவது எழுத்துக்கள் மற்றும் பலவற்றைப் படிக்க வேண்டும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.3.text"
msgstr "நீங்கள் ஒரு சுழலைப் பயன்படுத்த வேண்டும், ஆனால் சுழல் எவ்வளவு நேரம் எடுக்க வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.4.text"
msgstr "பட்டியலில் உள்ள சரங்கள் சம நீளம் கொண்டவை என்பதை நினைவில் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.5.text"
msgstr "ஒவ்வொரு நிலைக்கும் (முதல், இரண்டாவது போன்றவை) ஒரு புதிய சரத்தை வரையறுக்கவும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.6.text"
msgstr "அந்த சரம் ஆரம்பத்தில் என்னவாக இருக்க வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.7.text"
msgstr "ஒவ்வொரு நிலைக்கும் (முதல், இரண்டாவது போன்றவை) பட்டியலில் உள்ள ஒவ்வொரு சரத்தையும் நீங்கள் பார்க்க வேண்டும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_strings_list_exercise.hints.8.text"
msgstr "உங்களிடம் உள்ள ஒரு சுழலுக்குள் உங்களுக்கு மற்றொரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise.hints.0.text"
msgstr "சரங்கள் வெவ்வேறு நீளங்களைக் கொண்டிருக்கலாம் என்பதால், இது சற்று தந்திரமானது."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise.hints.1.text"
msgstr "இந்த நேரத்தில் உங்கள் வெளிப்புற சுழல் எவ்வளவு நேரம் செல்ல வேண்டும்?"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise.hints.2.text"
msgstr "நீங்கள் சரங்களைக் கையாளத் தொடங்கும் முன், முதலில் நீளமான சரம் நீளத்தைக் கண்டறிவது நல்லது."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise.hints.3.text"
msgstr "மீதமுள்ளவை முந்தைய பயிற்சிக்கு மிகவும் ஒத்தவை."

#. https://futurecoder.io/course/#LoopingOverNestedLists
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#: 
msgid "pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise.hints.4.text"
msgstr "ஒரே வேறுபாடு என்னவென்றால், இப்போது நீங்கள் ஒரு சரத்திலிருந்து ஒரு எழுத்தைச் சேர்க்க வேண்டுமா அல்லது ஒரு இடைவெளியைச் சேர்க்க வேண்டுமா என்பதைத் தீர்மானிக்க வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.0.text"
msgstr "நீங்கள் செயல்பாட்டு வரையறை தலைப்பில் பெயரை மாற்ற வேண்டும், ஆனால் அது எல்லாம் இல்லை."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.1.text"
msgstr "நீங்கள் செயல்பாட்டு வரையறை தலைப்பில் பெயரை மாற்றினால், என்ன நடக்கும்?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.2.text"
msgstr "நீங்கள் ஒரு பிழையைப் பெறுவீர்கள். செய்தியைப் பாருங்கள். அது உங்களுக்கு என்ன சொல்கிறது? பிழை எங்கிருந்து வருகிறது?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.3.text"
msgstr "உங்கள் செயல்பாடு `say_hello` என அழைக்கப்பட்டால், `greet(\"Alice\")` என்பதன் பொருள் என்ன?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.4.text"
msgstr "நிரலின் 3 வரிகளை நீங்கள் சரியாக மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.5.text"
msgstr "நீங்கள் மாற்றும் ஒவ்வொரு வரியிலும், சரியாக ஒரு வார்த்தையை மாற்றவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.6.text"
msgstr "செயல்பாட்டின் உடலைத் தொடாதே. அதில் இன்னும் `print(\"How are you?\")` இருக்க வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#: 
msgid "pages.DefiningFunctions.steps.change_function_name.hints.7.text"
msgstr "செயல்பாட்டை வரையறுத்த பிறகும், `\"Alice\"` மற்றும் `\"Bob\"` என்ற வாதங்களுடன் நீங்கள் செயல்பாட்டை இரண்டு முறை அழைக்க வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.0.text"
msgstr "செயல்பாட்டு வரையறை தலைப்பில் அளவுருவின் பெயரை நீங்கள் மாற்ற வேண்டும், ஆனால் அதெல்லாம் இல்லை."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.1.text"
msgstr "செயல்பாடு வரையறை தலைப்பில் அளவுருவின் பெயரை மாற்றினால், என்ன நடக்கும்?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.2.text"
msgstr "நீங்கள் ஒரு பிழையைப் பெறுவீர்கள். செய்தியைப் பாருங்கள். அது உங்களுக்கு என்ன சொல்கிறது? பிழை எங்கிருந்து வருகிறது?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.3.text"
msgstr "அளவுரு `person_name` என அழைக்கப்பட்டால், `print(f\"Hello {name}!\")` என்பதன் பொருள் என்ன?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.4.text"
msgstr "நிரலின் 2 வரிகளை நீங்கள் சரியாக மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.5.text"
msgstr "நீங்கள் மாற்றும் ஒவ்வொரு வரியிலும், சரியாக ஒரு வார்த்தையை மாற்றவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.6.text"
msgstr "செயல்பாடு வரையறைக்குப் பிறகு, `say_hello(\"Alice\")` மற்றும் `say_hello(\"Bob\")` ஆகியவற்றைத் தொடாதீர்கள்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#: 
msgid "pages.DefiningFunctions.steps.change_parameter_name.hints.7.text"
msgstr "`print(\"How are you?\")` உட்பட, செயல்பாட்டுக் குழுவில் உங்களிடம் இன்னும் இரண்டு அறிக்கைகள் இருக்க வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.0.text"
msgstr "இங்கே புத்திசாலித்தனமான சிக்கலைத் தீர்ப்பது இல்லை, இது ஒரு செயல்பாட்டை வரையறுப்பதற்கான செய்முறையைப் பின்பற்றுவதாகும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.1.text"
msgstr "மேலே பட்டியலிடப்பட்டுள்ள செயல்பாட்டின் அனைத்து பகுதிகளும் உங்களிடம் இருப்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.2.text"
msgstr "அதில் `def`, `()` மற்றும் `:` ஆகியவை அடங்கும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.3.text"
msgstr "உங்கள் செயல்பாடு `print_twice` எனப் பெயரிடப்பட்டுள்ளதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.4.text"
msgstr "அடைப்புக்குறிக்குள் `()` க்கு இடையில் `x` எனப்படும் ஒரு அளவுருவை ஏற்றுக்கொள்கிறது என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.5.text"
msgstr "உதவிக்கு மேலே வரையறுக்கப்பட்ட பிற செயல்பாடுகளைப் பார்க்கவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.6.text"
msgstr "செயல்பாட்டு உடலின் உள்ளே உள்ள அளவுருவைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.7.text"
msgstr "உடல் உள்தள்ளப்பட்டுள்ளதா என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.8.text"
msgstr "உடலுக்கு இரண்டு அறிக்கைகள் அல்லது மிகவும் எளிமையான சுழல் தேவை."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#: 
msgid "pages.DefiningFunctions.steps.print_twice_exercise.hints.9.text"
msgstr "`print_twice` என்பதன் செயல்பாட்டிற்குள் நீங்கள் `print_twice` என்று அழைக்கவில்லை என்பதை உறுதிசெய்யவும். உங்கள் உள்தள்ளலைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters
#: 
msgid "pages.DefiningFunctions.steps.swap_parameters.hints.0.text"
msgstr "செயல்பாடு வரையறைக்கு ஒரே மாற்றம் அறிவுறுத்தப்பட்டபடி அளவுருக்களை மாற்றுவதாக இருக்க வேண்டும், வேறு எதுவும் இல்லை."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters
#: 
msgid "pages.DefiningFunctions.steps.swap_parameters.hints.1.text"
msgstr "`print_many` என்ற அழைப்பை நீங்கள் சரிசெய்ய வேண்டும்."

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters
#: 
msgid "pages.DefiningFunctions.steps.swap_parameters.hints.2.text"
msgstr "செயல்பாடு `def print_many(n, thing)` என வரையறுக்கப்பட்டால், `print_many(\"Hello\", 3)` என்பதன் பொருள் என்ன?"

#. https://futurecoder.io/course/#DefiningFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.swap_parameters
#: 
msgid "pages.DefiningFunctions.steps.swap_parameters.hints.3.text"
msgstr "எங்களுக்கு இன்னும் `thing = \"Hello\"` மற்றும் `n = 3` தேவை."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.0.text"
msgstr "4 ஆல் பெருக்க, 2 ஆல் இருமுறை பெருக்கவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.1.text"
msgstr "அதாவது நீங்கள் இரண்டு முறை `double` அழைக்க வேண்டும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.2.text"
msgstr "ஒவ்வொரு முறையும் `double` என்பதில் இருந்து திரும்பிய மதிப்பைப் பயன்படுத்துவதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.3.text"
msgstr "செயல்பாடு வரையறையின் அனைத்து பகுதிகளும் உங்களிடம் இருப்பதை உறுதிப்படுத்திக் கொள்ளுங்கள்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.4.text"
msgstr "அதில் `def`, `()` மற்றும் `:` ஆகியவை அடங்கும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.5.text"
msgstr "உங்கள் செயல்பாட்டிற்கு `quadruple` என்று பெயரிடப்பட்டுள்ளதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.6.text"
msgstr "அடைப்புக்குறிக்குள் `()` க்கு இடையில் `x` எனப்படும் ஒரு அளவுருவை ஏற்றுக்கொள்கிறது என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.7.text"
msgstr "செயல்பாட்டு உடலின் உள்ளே உள்ள அளவுருவைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.8.text"
msgstr "உடல் உள்தள்ளப்பட்டுள்ளதா என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.9.text"
msgstr "கடைசியில் எதையாவது `return` செய்வதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.10.text"
msgstr "உதாரணத்திற்கு `double` என்பதன் வரையறையைப் பாருங்கள்."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.11.text"
msgstr "`quadruple` இன் செயல்பாட்டுக் கட்டமைப்பிற்குள் `quadruple` அழைக்கவில்லை என்பதை உறுதிப்படுத்திக் கொள்ளவும். உங்கள் உள்தள்ளலைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise
#: 
msgid "pages.TestingFunctions.steps.surround_exercise.hints.0.text"
msgstr "வாதம் `sides` `string`க்கு முன்னும் பின்னும் சேர்க்கப்பட வேண்டும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise
#: 
msgid "pages.TestingFunctions.steps.surround_exercise.hints.1.text"
msgstr "இதைச் செய்ய, சரம் இணைப்பினைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise
#: 
msgid "pages.TestingFunctions.steps.surround_exercise.hints.2.text"
msgstr "உடல் உள்தள்ளப்பட்டுள்ளதா என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise
#: 
msgid "pages.TestingFunctions.steps.surround_exercise.hints.3.text"
msgstr "கடைசியில் எதையாவது `return` செய்வதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise
#: 
msgid "pages.TestingFunctions.steps.surround_exercise.hints.4.text"
msgstr "`surround` இன் செயல்பாட்டுக் கட்டமைப்பிற்குள் நீங்கள் `surround` என்று அழைக்கவில்லை என்பதை உறுதிப்படுத்தவும். உங்கள் உள்தள்ளலைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.0.text"
msgstr "`string` ஒரு இடைவெளி மற்றும் ஒவ்வொரு பக்கத்திலும் `level` ஆச்சரியக்குறிகள் (`!`) சூழப்பட்டிருக்க வேண்டும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.1.text"
msgstr "உங்கள் திட்டத்தில் முன்பு இருந்த `surround` என்பதன் வரையறையைச் சேர்த்து, அதை `alert` என்பதில் அழைக்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.2.text"
msgstr "இடைவெளிகளுக்கு `surround` பயன்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.3.text"
msgstr "ஆச்சரியக்குறிகளுக்கு `surround` பயன்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.4.text"
msgstr "பல ஆச்சரியக்குறிகளை ஒரே சரத்தில் இணைக்க உங்களுக்கு அனுமதி இல்லை, எனவே பலமுறை `surround` என்று அழைக்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.5.text"
msgstr "அதாவது, ஒவ்வொரு இணை ஆச்சரியக்குறிகளுக்கும் ஒருமுறை `surround` என்று அழைக்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.6.text"
msgstr "எனவே `surround(..., '!')` என்று பலமுறை அழைக்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.7.text"
msgstr "பல முறை அழைக்க ஒரு சுழலைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.8.text"
msgstr "உங்கள் சுழலில் `n` மறு செய்கைகள் இருக்க `range(n)` ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.9.text"
msgstr "`surround` இலிருந்து திரும்பும் மதிப்பைப் பயன்படுத்துவதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.10.text"
msgstr "`+=` உடன் நீங்கள் எவ்வாறு சரங்களை உருவாக்குவீர்கள் என்று சிந்தியுங்கள். அதே மாறியை மீண்டும் மீண்டும் புதுப்பிக்கவும், உங்கள் முடிவை உருவாக்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.11.text"
msgstr "அதாவது, உங்கள் சுழலில் `something = surround(something, '!')` என்று எழுதுங்கள்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.12.text"
msgstr "`alert`யின் முடிவில் எதையாவது `return`` என்பதை உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.13.text"
msgstr "சுழலுக்குள் நீங்கள் `return` வரவில்லை என்பதை உறுதிப்படுத்திக் கொள்ளுங்கள், ஆனால் அதற்குப் பிறகு. உங்கள் உள்தள்ளலைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.hints.14.text"
msgstr "`alert`யின் செயல்பாட்டுக் கட்டமைப்பிற்குள் `alert` என்பதை நீங்கள் அழைக்கவில்லை என்பதை உறுதிப்படுத்தவும். உங்கள் உள்தள்ளலைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.0.text"
msgstr "பூலியன்களை உருவாக்க நீங்கள் ஒப்பீட்டு இயக்கிகளை `<, >, <=, >=, ==` பயன்படுத்தலாம் என்பதை நினைவில் கொள்ளவும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.1.text"
msgstr "`x` 0 உடன் எவ்வாறு ஒப்பிடுகிறது மற்றும் 100 உடன் எவ்வாறு ஒப்பிடுகிறது என்பதை நீங்கள் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.2.text"
msgstr "`or` ஐப் பயன்படுத்தி இரண்டு ஒப்பீடுகளையும் ஒரு பூலியனில் இணைக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.3.text"
msgstr "மேலே நாங்கள் ஒரு தந்திரத்தைப் பயன்படுத்தினோம், இதன் மூலம் முழுச் செயல்பாடும் `return <comparison> or <comparison>` ஆக இருக்கும். ஆனால் அது இங்கே வேலை செய்யாது!"

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.4.text"
msgstr "நீங்கள் `if` அறிக்கையைப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.5.text"
msgstr "உங்களிடம் `return False` மற்றும் `return True` இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.AnExercise
#: 
msgid "pages.IntroducingOr.steps.AnExercise.hints.6.text"
msgstr "உங்களிடம் `x >= 0 or x <= 100` போன்ற ஏதேனும் இருந்தால், நீங்கள் தவறான பாதையில் செல்கிறீர்கள். `x` இன் *எந்தவொரு* மதிப்புக்கும் அது உண்மையாக இருக்கும். எல்லாவற்றிற்கும் மேலாக, 0 ஐ விட 101 பெரியது!"

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise
#: 
msgid "pages.IntroducingAnd.steps.AndExercise.hints.0.text"
msgstr "உங்களிடம் `x < 0 and x > 100` போன்றவை இருந்தால், நீங்கள் தவறான பாதையில் செல்கிறீர்கள். `x` இன் *எந்த* மதிப்புக்கும் அது `False` ஆக இருக்கும்!"

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise
#: 
msgid "pages.IntroducingAnd.steps.AndExercise.hints.1.text"
msgstr "`and` உடன் தீர்வு `or` உடன் தீர்வு பல வழிகளில் வேறுபட்டது."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise
#: 
msgid "pages.IntroducingAnd.steps.AndExercise.hints.2.text"
msgstr "`or` உடன் எங்களின் தீர்வு முதலில் `x` என்பது தவறான சதவீதமா என்பதைத் தீர்மானிக்கிறது, இல்லையெனில் அது செல்லுபடியாகும். `and` ஐப் பயன்படுத்துவது இதை எதிர்மாறாகச் செய்யும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise
#: 
msgid "pages.IntroducingAnd.steps.AndExercise.hints.3.text"
msgstr "நீங்கள் அதற்கேற்ப `return` அறிக்கைகளை மாற்றியமைக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.AndExercise
#: 
msgid "pages.IntroducingAnd.steps.AndExercise.hints.4.text"
msgstr "நீங்கள் ஒப்பீட்டு இயக்கிகளையும் மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow
#: 
msgid "pages.IntroducingAnd.steps.TicTacToeWinningRow.hints.0.text"
msgstr "பட்டியலில் எப்போதும் 3 கூறுகள் இருக்கும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow
#: 
msgid "pages.IntroducingAnd.steps.TicTacToeWinningRow.hints.1.text"
msgstr "அதாவது, நீங்கள் ஒரு சுழலைப் பயன்படுத்தத் தேவையில்லை."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow
#: 
msgid "pages.IntroducingAnd.steps.TicTacToeWinningRow.hints.2.text"
msgstr "`row[0]` ஐப் பயன்படுத்தி முதல் உறுப்பைப் பெறலாம் என்பதை நினைவில் கொள்ளவும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow
#: 
msgid "pages.IntroducingAnd.steps.TicTacToeWinningRow.hints.3.text"
msgstr "முதல் உறுப்பு, இரண்டாவது உறுப்பு மற்றும் மூன்றாவது உறுப்பு அனைத்தும் சமமாக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingAnd
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingAnd.steps.TicTacToeWinningRow
#: 
msgid "pages.IntroducingAnd.steps.TicTacToeWinningRow.hints.4.text"
msgstr "அதாவது முதல் உறுப்பு இரண்டாவது உறுப்பு மற்றும் மூன்றாவது உறுப்புக்கு சமமாக இருக்க வேண்டும்."

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.0.text"
msgstr "பலகையில் எத்தனை மூலைவிட்டங்கள் உள்ளன?"

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.1.text"
msgstr "மூன்று துணைப் பட்டியல்களில் எந்த உள்ளீடுகள் ஒவ்வொரு மூலைவிட்டத்தையும் உருவாக்குகின்றன? இந்த உள்ளீடுகளை நீங்கள் எவ்வாறு அணுகலாம்?"

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.2.text"
msgstr "ஒவ்வொரு பட்டியலிலும் எப்போதும் 3 உள்ளீடுகள் இருக்கும், எனவே சுழல் தேவையில்லை."

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.3.text"
msgstr "இங்கே தீர்க்க வேண்டிய இரண்டு சிக்கல்கள் உள்ளன: ஒரு குறிப்பிட்ட மூலைவிட்டத்தில் வெற்றியை சரிபார்த்தல் மற்றும் ஒவ்வொரு மூலைவிட்டத்திற்கும் சோதனைகளை இணைப்பது."

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.4.text"
msgstr "ஒரு சிக்கலை `and` பயன்படுத்தியும், மற்றொன்று `or` பயன்படுத்தியும் தீர்க்க முடியும்."

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.5.text"
msgstr "`all_equal` செயல்பாட்டுடன் நிறைய ஒற்றுமைகள் உள்ளன. உதவிக்கு நீங்கள் அந்த செயல்பாட்டை அழைக்கலாம்! ஆனால் அதன் வரையறையை நீங்கள் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.6.text"
msgstr "`all_equal` போலவே, மூலைவிட்டத்தில் உள்ள 3 உள்ளீடுகளும் ஒன்றுக்கொன்று சமமாக உள்ளதா என்பதைச் சரிபார்க்கவும், எ.கா `and` ஐப் பயன்படுத்துவதன் மூலம்."

#. https://futurecoder.io/course/#CombiningAndAndOr
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningAndAndOr.steps.AndHasHigherPriority
#: 
msgid "pages.CombiningAndAndOr.steps.AndHasHigherPriority.hints.7.text"
msgstr "`or` ஐப் பயன்படுத்தி இரண்டு மூலைவிட்டங்களையும் ஒன்றாகச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#.     # __code0__:
#.     def valid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return True
#.         else:
#.             return False
#. 
#.     assert_equal(valid_image("dog.png"), True)
#.     assert_equal(valid_image("cat.jpg"), True)
#.     assert_equal(valid_image("invoice.pdf"), False)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.jpg%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.png%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22cat.jpg%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22dog.png%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22invoice.pdf%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.assert_equal
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.filename
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.valid_image
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.0.text"
msgstr "அதற்குப் பதிலாக இந்த தொடர்புடைய ஆனால் எதிர் செயல்பாட்டை எளிமையாக்கும்படி உங்களிடம் கேட்கப்பட்டால் என்ன செய்வது?\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.1.text"
msgstr "அப்படியானால், சில பக்கங்களுக்கு முன்பு நாங்கள் விவாதித்த ஒரு நிலையான எளிமைப்படுத்தல் தந்திரம் உள்ளது."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.2.text"
msgstr "குறிப்பாக `returns` தேவையற்றது ஏனெனில் `filename.endswith(\".png\") or filename.endswith(\".jpg\")` ஏற்கனவே விரும்பிய பூலியன் ஆகும்."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#.     # __code0__:
#.     def valid_image(filename):
#.         return filename.endswith(".png") or filename.endswith(".jpg")
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.jpg%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.%22.png%22
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.filename
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.valid_image
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.3.text"
msgstr "எனவே நீங்கள் எழுதலாம்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.4.text"
msgstr "உண்மையான பயிற்சிக்கு, நீங்கள் இதேபோன்ற ஒன்றைச் செய்யலாம்."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.5.text"
msgstr "உண்மையான பயிற்சியின் வேறுபாடு என்னவென்றால், விளைவு தலைகீழாக உள்ளது."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.6.text"
msgstr "அதாவது, `valid_image` என்பது `False` என்பதைத் தரும்போது `invalid_image` என்பது `True` என்பதைத் தருகிறது மற்றும் நேர்மாறாகவும்."

#. https://futurecoder.io/course/#IntroducingNotPage
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority
#: 
msgid "pages.IntroducingNotPage.steps.NotPriority.hints.7.text"
msgstr "`not` என்ன செய்கிறது என்பதை நினைவில் கொள்க?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.0.text"
msgstr "பலகையில் உள்ள ஒவ்வொரு வரிசையையும் நீங்கள் சரிபார்க்க வேண்டும், அதற்கு உங்களுக்கு ஒரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.1.text"
msgstr "ஒரு வரிசையில் உள்ள அனைத்து உள்ளீடுகளும் ஒன்றுக்கொன்று சமமாக உள்ளதா என்பதை எவ்வாறு சரிபார்க்கலாம்?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.2.text"
msgstr "இது தானே அடங்கிய ஒரு பிரச்சனை. முழு பலகையையும் மறந்துவிட்டு, ஒரு வரிசையைச் சரிபார்ப்பதன் மூலம் நீங்கள் தொடங்கலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.3.text"
msgstr "நீங்கள் செய்ய வேண்டியதில்லை என்றாலும், இதைச் செய்யும் ஒரு செயல்பாட்டை நீங்கள் எழுதலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.4.text"
msgstr "வரிசை எந்த அளவிலும் இருக்கக்கூடும் என்பதால், நீங்கள் அதை முழுவதுமாக சுழற்ற வேண்டும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.5.text"
msgstr "ஒவ்வொரு வரிசைக்கும், ஒரு பூலியனை வரையறுக்கவும். பின்னர் அந்த வரிசையின் வழியாக சுழல் செய்து, அதற்கேற்ப பூலியனைப் புதுப்பிக்கவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.6.text"
msgstr "எல்லா வரிசை உள்ளீடுகளையும் ஒப்பிட்டுப் பார்க்க, ஒரு வரிசையில் உள்ள முதல் நுழைவு `row[0]` ஐப் பயன்படுத்தலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.7.text"
msgstr "பூலியனின் ஆரம்ப மதிப்பு என்னவாக இருக்க வேண்டும், எந்த நிலையில் அதன் மதிப்பை மாற்ற வேண்டும் என்பதைப் பற்றி கவனமாக சிந்தியுங்கள்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.8.text"
msgstr "ஒரு வரிசையை சுழல் செய்த பிறகு, அதன் அனைத்து உள்ளீடுகளும் சமமாக இருப்பதை நீங்கள் தீர்மானித்தால், `True` (வெளிப்புற சுழலை முன்கூட்டியே முடிக்கவும்) திரும்பவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.9.text"
msgstr "இடைவெளிகள் நிறைந்த வரிசைக்கு `True` என்பதைத் தரவில்லை என்பதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.hints.10.text"
msgstr "வெற்றிபெறும் வரிசைகள் எதுவும் இல்லை என்றால், `False` என்பதை உறுதிசெய்யவும்"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.0.text"
msgstr "மேலே உள்ள `row_winner` ஐப் பின்பற்றுவதன் மூலம் நீங்கள் தொடங்கலாம், பின்னர் அதை நெடுவரிசைகளுடன் வேலை செய்ய மாற்றவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.1.text"
msgstr "`board` இன் நெடுவரிசைகளை அதன் வரிசைகளைப் போல சுழற்ற முடியாது."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.2.text"
msgstr "உள்ளமைக்கப்பட்ட பட்டியலின் நெடுவரிசை என்றால் என்ன? முதல் நெடுவரிசையில் முதல் வரிசையின் முதல் உறுப்பு, இரண்டாவது வரிசையின் முதல் உறுப்பு போன்றவை உள்ளன."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.3.text"
msgstr "எல்லா நெடுவரிசைகளிலும் சுழல் செய்வது என்பது ஒவ்வொரு வரிசையின் முதல் உறுப்பு, பின்னர் ஒவ்வொரு வரிசையின் இரண்டாவது உறுப்பு போன்றவற்றையும் பார்ப்பதாகும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.4.text"
msgstr "எனவே நீங்கள் முதல், இரண்டாவது போன்ற நிலைகளைக் குறிக்கும் எண்கள் மூலம் சுழல வேண்டும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.5.text"
msgstr "`board` இல் உள்ள நெடுவரிசைகளின் எண்ணிக்கையை எப்படிக் கண்டுபிடிப்பது?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.6.text"
msgstr "அது ஒவ்வொரு நெடுவரிசையிலும் செல்லும் வெளிப்புற சுழலை உள்ளடக்கியது. நெடுவரிசையில் உள்ள ஒவ்வொரு உறுப்புக்கும் செல்ல உங்களுக்கு உள் சுழல் தேவை."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.7.text"
msgstr "நெடுவரிசையின் வெவ்வேறு உள்ளீடுகள் ஒரே வரிசையில் இல்லை. எனவே அவற்றை எவ்வாறு அணுகுவது?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.8.text"
msgstr "நீங்கள் பலகையின் வரிசைகள் வழியாகச் சென்று அந்த வரிசை மற்றும் தற்போதைய நெடுவரிசையுடன் தொடர்புடைய உறுப்பைக் கண்டறியலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.9.text"
msgstr "வது நெடுவரிசையின் அனைத்து உள்ளீடுகளையும் அணுக, நீங்கள் அனைத்து வரிசைகளிலும் சுழல் செய்யலாம் மற்றும் ஒவ்வொரு வரிசையிலும் 5 வது உறுப்பை அணுகலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.10.text"
msgstr "ஒவ்வொரு நெடுவரிசைக்கும் ஒரு பூலியனை வரையறுத்து, உள் சுழலுக்குள் அதற்கேற்ப புதுப்பிக்கவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.11.text"
msgstr "மீதமுள்ள தர்க்கம் `row_winner`க்கு மிகவும் ஒத்திருக்கிறது."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.12.text"
msgstr "`' '` குறித்துக் கவனியுங்கள்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.column_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.column_winner.hints.13.text"
msgstr "தேவைப்பட்டால், இறுதியில் `False` என்பதைத் திருப்பி அனுப்பவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.0.text"
msgstr "தன்னிச்சையான அளவிலான ஒரு சதுர பலகையில் எத்தனை மூலைவிட்டங்கள் உள்ளன?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.1.text"
msgstr "பலகையின் அளவு மாறினாலும், மூலைவிட்டங்களின் எண்ணிக்கை அப்படியே இருக்கும்!"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.2.text"
msgstr "இந்த நேரத்தில் `middle == board[0][0] and middle == board[2][2]` போன்றவற்றை உங்களால் செய்ய முடியாது, ஏனெனில் ஒரு மூலைவிட்டம் எவ்வளவு நீளமானது என்பது உங்களுக்குத் தெரியாது."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.3.text"
msgstr "மேலும் இரு மூலைவிட்டங்களுக்கும் `middle` போன்ற பொதுவான எதுவும் இல்லாமல் இருக்கலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.4.text"
msgstr "முதலில், மேல் இடமிருந்து கீழ் வலதுபுறமாகச் செல்லும் மூலைவிட்டத்தில் கவனம் செலுத்துங்கள்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.5.text"
msgstr "இரட்டை சந்தாவுடன் அந்த உள்ளீடுகளை எப்படி அணுகலாம்?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.6.text"
msgstr "அந்த இரட்டை சந்தாக்களில் ஒரு வடிவங்களைப் பார்க்கிறீர்களா? கொஞ்சம் காகிதம் மற்றும் பேனாவை எடுத்துக் கொள்ளுங்கள், சில எடுத்துக்காட்டுகளில் வேலை செய்யுங்கள்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.7.text"
msgstr "இப்போது மற்ற மூலைவிட்டத்தில் கவனம் செலுத்துங்கள் (மேலே வலமிருந்து கீழ் இடதுபுறம்). சந்தாக்களில் மீண்டும் ஒரு வடிவம் உள்ளது, ஆனால் அது இன்னும் கொஞ்சம் கடினமாக உள்ளது."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.8.text"
msgstr "எதிர்மறை அட்டவணைப்படுத்தல் உங்களுக்கு நினைவிருக்கிறதா? அது இங்கே உதவியாக இருக்கும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.9.text"
msgstr "வடிவங்களை அறிந்தவுடன், அனைத்து உள்ளீடுகளும் சமமாக உள்ளதா என்பதைச் சரிபார்க்க, முந்தைய அதே  எண்ணங்களைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.diagonal_winner.hints.10.text"
msgstr "நீங்கள் ஒரு சுழலைப் பயன்படுத்தலாம் மற்றும் இரண்டு மூலைவிட்டங்களையும் ஒரே நேரத்தில் சரிபார்க்கலாம். அல்லது ஒவ்வொரு மூலைவிட்டத்திற்கும் ஒரு சுழலைப் பயன்படுத்தலாம்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner
#: 
msgid "pages.IntroducingTicTacToe.steps.winner.hints.0.text"
msgstr "தீர்வு மிகவும் குறுகியது! மூன்று செயல்பாடுகளை சரியாகப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner
#: 
msgid "pages.IntroducingTicTacToe.steps.winner.hints.1.text"
msgstr "சாத்தியமான வழக்குகளைப் பற்றி சிந்தியுங்கள். `winner(board)` எப்போது `False` என்பதை வழங்கும்? அது எப்போது `True` என்பதைத் தரும்?"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.winner
#: 
msgid "pages.IntroducingTicTacToe.steps.winner.hints.2.text"
msgstr "உங்களுக்குத் தேவையான முடிவைப் பெற, மூன்று செயல்பாடுகளையும் பூலியன் இயக்கியையும் ஒன்றாகப் பயன்படுத்துவது எப்படி?"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.0.text"
msgstr "நாங்கள் வழங்கிய சோதனை வழக்கை கவனமாக பாருங்கள். உங்களுக்கு தேவையான அனைத்தையும் இது காட்டுகிறது!"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.1.text"
msgstr "முழு பலகைக்கும் நீங்கள் ஒரு சரத்தை உருவாக்க வேண்டும். வெற்று சரத்துடன் தொடங்கவும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.2.text"
msgstr "ஒவ்வொரு வரிசையிலும், அந்த வரிசையில் உள்ள எழுத்துக்களை சரத்தில் சேர்க்கவும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.3.text"
msgstr "உங்களுக்கு உள்ளமைக்கப்பட்ட சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.4.text"
msgstr "நீங்கள் ஒரு வரிசையின் முடிவை அடையும் போது, அடுத்த வரிசைக்கு முன் ஒரு புதிய வரியைச் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.5.text"
msgstr "`'\\n'` என்பது மற்ற எழுத்துகளைப் போலவே! நீங்கள் வழக்கம் போல் `+` உடன் சேர்க்கலாம்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.6.text"
msgstr "கடைசி வரிசையின் முடிவு மற்றதை விட வித்தியாசமாக இருப்பதைக் கவனியுங்கள்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.7.text"
msgstr "புதிய வரியைச் சேர்ப்பதற்கு முன், அது கடைசி வரிசையா இல்லையா என்பதைச் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.8.text"
msgstr "உங்கள் வெளிப்புற சுழல் பலகையின் நீளத்திற்கு மேல் சுழல வேண்டும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_simple
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_simple.hints.9.text"
msgstr "நீங்கள் கடைசி குறியீட்டில் உள்ளீர்களா இல்லையா என்பதைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.0.text"
msgstr "காட்டப்பட வேண்டிய இரண்டு வகையான வரிகள் உள்ளன: ஒரு வகைக்கு இடையில் `|`கள் இணைக்கப்பட்ட துண்டுகள் உள்ளன, மற்ற வகை `-`கள் அவற்றுக்கிடையே `+`கள் இணைக்கப்பட்டுள்ளன."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.1.text"
msgstr "இந்த இரண்டு வகையான வரிகளையும் சரியான முறையில் `join` பயன்படுத்துவதன் மூலம் கட்டமைக்க முடியும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.2.text"
msgstr "எடுத்துக்காட்டாக, `join` என்பதைப் பயன்படுத்தி `['X', 'O', 'X']` வரிசையை `'X|O|X'` ஆக மாற்றுவது எப்படி?"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.3.text"
msgstr "அதேபோல, `join` என்பதைப் பயன்படுத்தி `'-+-+-'` பெறுவது எப்படி? எந்தப் பட்டியலில் `join` விண்ணப்பிக்க வேண்டும்?"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.4.text"
msgstr "இரண்டு வகையான வரிகளையும் எவ்வாறு உருவாக்குவது என்பதை நீங்கள் கண்டறிந்ததும், இறுதி முடிவைப் பெற அவற்றை எவ்வாறு இணைப்பது?"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.5.text"
msgstr "`+-` அடையாளங்களைக் கொண்ட வரிகள் எப்போதும் ஒரே மாதிரியாக இருப்பதைக் கவனிக்கவும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.6.text"
msgstr "மேலும், `+-` உடன் ஒரு வரி உள்ளது, அது ஒவ்வொரு இணை வரிகளையும் துண்டுகளால் பிரிக்கிறது."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.7.text"
msgstr "நீங்கள் வரிகளிலேயே `join` பயன்படுத்தலாம்!"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.8.text"
msgstr "துண்டுகளுடன் கூடிய கோடுகளை அவற்றுக்கிடையே உள்ள `+-` வரியுடன் இணைக்கலாம் (பொருத்தமான இடங்களில் புதிய வரிகள் சேர்க்கப்படும்)."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.9.text"
msgstr "அதைச் செய்ய, முதலில் நீங்கள் அவற்றை உருவாக்கும்போது ஒரு பட்டியலில் சேமிக்கப்பட்ட துண்டுகளுடன் வரிகளை வைத்திருக்க வேண்டும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.10.text"
msgstr "பிறகு `+-` வரியைப் பிரிப்பானாகக் கொண்டு, அந்தப் பட்டியலில் `join` என்பதைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#: 
msgid "pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge.hints.11.text"
msgstr "`+-` வரியில் புதிய வரிகளைச் சரியாகச் சேர்க்க, நாங்கள் வழங்கிய சோதனைப் வழக்கைப் பார்க்கவும்."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion
#: 
msgid "pages.Types.steps.fixing_type_errors_with_conversion.hints.0.text"
msgstr "எந்த புள்ளிகளில் இந்த குறியீடு உடைக்கப்பட்டது?"

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion
#: 
msgid "pages.Types.steps.fixing_type_errors_with_conversion.hints.1.text"
msgstr "வேறு வகைக்கு மாற்ற வேண்டிய மதிப்புகள் உள்ளன."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion
#: 
msgid "pages.Types.steps.fixing_type_errors_with_conversion.hints.2.text"
msgstr "குறிப்பாக `str` ஒரு `int` ஆக மாற்றப்பட வேண்டும்."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.fixing_type_errors_with_conversion
#: 
msgid "pages.Types.steps.fixing_type_errors_with_conversion.hints.3.text"
msgstr "மேலும் ஒரு `int` அதை `str` ஆக மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.0.text"
msgstr "உங்கள் முந்தைய தீர்விலிருந்து `format_board` ஐப் பயன்படுத்தி நீங்கள் தொடங்கலாம். `join` பயன்படுத்துவது மிகவும் பரிந்துரைக்கப்படுகிறது!"

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.1.text"
msgstr "முதல் வரி மற்றவற்றிலிருந்து தனித்தனியாகக் கருதப்பட வேண்டும்."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.2.text"
msgstr "`range` என்பது 0, 1, 2, ...` இந்த வழியில் எண்களை வழங்குகிறது என்பதை நினைவில் கொள்ளுங்கள்"

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.3.text"
msgstr "இது போன்ற முதல் வரியில் எண்கள் வேண்டும்: 1, 2, 3..."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.4.text"
msgstr "ஒவ்வொரு எண்ணையும் முதல் வரிசையில் சேர்க்கும் முன் சரமாக மாற்ற வேண்டும்!"

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.5.text"
msgstr "பலகையின் வரிசைகளுக்கு, இதேபோன்ற ஒன்றைச் செய்யுங்கள்."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.6.text"
msgstr "நீங்கள் மேலே கட்டிய முதல் வரியை மட்டும் கொண்ட பட்டியலைத் தொடங்கவும்."

#. https://futurecoder.io/course/#Types
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Types.steps.format_board_with_numbers
#: 
msgid "pages.Types.steps.format_board_with_numbers.hints.7.text"
msgstr "பட்டியலில் ஒவ்வொரு வரிசையின் சரத்தையும் சேர்த்து, புதிய வரி எழுத்துடன் பட்டியலில் சேரவும்."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.0.text"
msgstr "`input()` எப்போதும் ஒரு சரத்தை வழங்கும்."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.1.text"
msgstr "எண்ணைப் போல தோற்றமளிக்கும் சரம் இன்னும் ஒரு சரம், எண் அல்ல."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.2.text"
msgstr "`super_secret_number = 7` இல், `7` என்பது ஒரு எண், சரம் அல்ல."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.3.text"
msgstr "அது `super_secret_number`ஐயும் ஒரு எண்ணாக மாற்றுகிறது."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.4.text"
msgstr "ஒரு சரம் ஒரு எண்ணுக்கு சமமாக இருக்க முடியாது."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.5.text"
msgstr "இரண்டு மதிப்புகள் சமமாக உள்ளதா என்பதைச் சரிபார்க்க, அவை ஒரே வகை என்பதை முதலில் உறுதிப்படுத்தவும்."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.6.text"
msgstr "எனவே ஒரு எண்ணையும் ஒரு சரத்தையும் ஒப்பிட, முதலில் எண்ணை ஒரு சரமாக மாற்றவும் அல்லது சரத்தை எண்ணாக மாற்றவும்."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.7.text"
msgstr "முந்தைய பக்கத்தில் சரங்கள் மற்றும் எண்களுக்கு இடையில் எவ்வாறு மாற்றுவது என்பதை நீங்கள் கற்றுக்கொண்டீர்கள்."

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.convert_input_to_int
#: 
msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.8.text"
msgstr "முழு எண்ணாக (முழு எண்) மாற்ற `int()` அல்லது சரமாக மாற்ற `str()` ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.0.text"
msgstr "உங்கள் செயல்பாடு `input()` என்பதை இரண்டு முறை அழைக்க வேண்டும். உள்ளீடு ஒரு வாதமாக `play_move` க்கு அனுப்பப்படவில்லை."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.1.text"
msgstr "`input()` எப்போதும் ஒரு சரத்தை வழங்கும்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.2.text"
msgstr "எண்ணைப் போல தோற்றமளிக்கும் சரம் இன்னும் ஒரு சரம், எண் அல்ல."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.3.text"
msgstr "பட்டியல் குறியீடுகள் எண்களாக இருக்க வேண்டும், சரங்களாக அல்ல."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.4.text"
msgstr "பலகை 3x3 ஆக இருந்தால், பயனர் ஒவ்வொரு ஒருங்கிணைப்புக்கும் 1, 2 அல்லது 3 ஐ உள்ளிடலாம்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.5.text"
msgstr "நீளம் 3 பட்டியலின் சரியான குறியீடுகள் என்ன?"

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.6.text"
msgstr "நீங்கள் 1, 2 அல்லது 3 இன் உள்ளீட்டை எடுத்து 0, 1 அல்லது 2 ஆக மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.7.text"
msgstr "9x9 அல்லது அதற்கு அப்பால் உள்ள பெரிய பலகைகளையும் நீங்கள் கையாள வேண்டும்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.8.text"
msgstr "நீங்கள் சரங்களைக் கொண்டு கணிதத்தை செய்ய முடியாது, எண்கள் மட்டுமே."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.9.text"
msgstr "ஒரு சரத்தை எண்ணாக மாற்றுவது எப்படி?"

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.10.text"
msgstr "இரண்டு எண்களைப் பெற்றவுடன், அவற்றுடன் உள்ளமைப்பட்ட பட்டியலான `board`ஐ மாற்ற வேண்டும்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.11.text"
msgstr "இதற்கான குறியீடு மேலே காட்டப்பட்டுள்ளது."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.12.text"
msgstr "கடினக்குறியிடப்பட்ட 1 மற்றும் 0 க்குப் பதிலாக பயனர் உள்ளீட்டிலிருந்து எண்களைப் பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#NestedListAssignment
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.nested_assignment_input
#: 
msgid "pages.NestedListAssignment.steps.nested_assignment_input.hints.13.text"
msgstr "நீங்கள் ஒரு வரியில் உள்ளமை சந்தாவைப் பயன்படுத்தலாம் அல்லது இரண்டு படிகளில் செய்யலாம்."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.0.text"
msgstr "ஏற்கனவே உள்ள குறியீடு கிட்டத்தட்ட சரியானது."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.1.text"
msgstr "இதை தீர்க்க பல வழிகள் உள்ளன."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.2.text"
msgstr "சில தீர்வுகளில் சிறிய ஒன்றைச் சேர்ப்பது அடங்கும்."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.3.text"
msgstr "எதையும் சேர்க்காமலும் நீக்காமலும் குறியீட்டை மறுசீரமைக்கலாம் (இடைவெளிகளைத் தவிர)."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.4.text"
msgstr "பிரச்சனை என்னவென்றால், ஒற்றைப் பட்டியல் `row` பல முறை பயன்படுத்தப்படுகிறது."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.5.text"
msgstr "எனவே ஒரு தீர்வாக `row`யின் நகல்களை உருவாக்குவது தனித்தனியாக இருக்கும்."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.6.text"
msgstr "ஒவ்வொரு முறையும் புதிதாக ஒரு `row` உருவாக்குவது மற்றொரு தீர்வாகும்."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.7.text"
msgstr "பைத்தானில் ஒரு பட்டியலை ஒரு சிறிய குறியீட்டுடன் நகலெடுக்க சில வழிகள் உள்ளன."

#. https://futurecoder.io/course/#MakingTheBoard
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MakingTheBoard.steps.fix_make_board
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.hints.8.text"
msgstr "ஒவ்வொரு முறையும் புதிய வரிசையை உருவாக்குவது குறியீட்டை மறுசீரமைப்பதன் மூலம் செய்ய முடியும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.0.text"
msgstr "`winner`, `format_board` (`play_move` இல் அதன் பயன்பாட்டைக் கணக்கிடவில்லை), `play_move`, `make_board`, `print_winner` மற்றும் `print_draw` ஆகிய செயல்பாடுகள் அனைத்தையும் நீங்கள் எங்காவது பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.1.text"
msgstr "உங்கள் குறியீட்டில் அந்த செயல்பாடுகள் ஒவ்வொன்றையும் ஒருமுறை மட்டுமே குறிப்பிட வேண்டும், இருப்பினும் அவற்றில் சில நிரல் இயங்கும்போது பல முறை அழைக்கப்படும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.2.text"
msgstr "நகர்வுகளை மீண்டும் மீண்டும் இயக்க உங்களுக்கு ஒரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.3.text"
msgstr "பலகை நிரப்பப்பட்டதா என்பதை நீங்கள் சரிபார்க்க வேண்டியதில்லை, ஏனெனில் பலகையை நிரப்ப எத்தனை நகர்வுகள் தேவை என்பதை நீங்கள் எப்போதும் கணக்கிடலாம்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.4.text"
msgstr "எனவே நீங்கள் ஒரு சுழலைப் பயன்படுத்தலாம், அது ஒரு குறிப்பிட்ட எண்ணிக்கையிலான மறு செய்கைகளை இயக்கும், மேலும் சுழலின் உள்ளே சுழலை முன்கூட்டியே முடிக்க வேண்டுமா என்று சரிபார்க்கவும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.5.text"
msgstr "3x3 பலகையில் விளையாடக்கூடிய அதிகபட்ச நகர்வுகள் என்ன? 4x4?"

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.6.text"
msgstr "ஒரு `range`இலை ஒரு சுழற்சியானது ஒரு குறிப்பிட்ட எண்ணிக்கையிலான முறைகளை மீண்டும் செய்ய எளிதான வழியாகும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.7.text"
msgstr "எனவே நீங்கள் அதிகபட்சம் `N` நகர்வுகளில் விளையாட `for _ in range(N):` ஐப் பயன்படுத்தலாம்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.8.text"
msgstr "ஒரு வெற்றியாளர் கிடைத்ததும், நீங்கள் சுழல் மற்றும் விளையாட்டை முடிக்க வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.9.text"
msgstr "`print_winner` அல்லது `print_draw` என அழைக்கப்பட வேண்டும், இரண்டும் அல்ல."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.10.text"
msgstr "எந்த செயல்பாடு என்று அழைக்கப்பட்டாலும், அது சரியாக ஒரு முறை அழைக்கப்பட வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.11.text"
msgstr "நீங்கள் ஒரு செயல்பாட்டை பல முறை அழைக்கவில்லை என்பதை உறுதி செய்வதற்கான ஒரு எளிய வழி, எந்த சுழலுக்கும் வெளியே அதை அழைப்பதாகும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.12.text"
msgstr "சுழல் நிறுத்தம் செய்ய இரண்டு வழிகளைப் பற்றி நாங்கள் கற்றுக்கொண்டோம்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.13.text"
msgstr "ஒரு வழி `break` ஆகும், இது குறிப்பாக ஒரு சுழலை முடிக்கிறது, மேலும் இல்லை."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.14.text"
msgstr "இரண்டாவது வழி சுழலை மட்டுமல்ல, முழு செயல்பாட்டு அழைப்பையும் முடிக்கிறது."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.15.text"
msgstr "இரண்டாவது வழி `return`."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.16.text"
msgstr "மாதிரிக் குறியீட்டில் `play_move(board, player1)` மற்றும் `play_move(board, player2)` போன்ற அசைவுகளை இணையாக இயக்க வேண்டாம்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.17.text"
msgstr "அதற்கு பதிலாக, ஒவ்வொரு சுழல் மறு செய்கையும் ஒரு நகர்வை இயக்க வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.18.text"
msgstr "எந்த வீரரின் முறை என்பதை கண்காணிக்க உங்களுக்கு ஒரு மாறி தேவை."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.19.text"
msgstr "ஒவ்வொரு சுழற்சியிலும் வீரர் மாற்றப்பட வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.20.text"
msgstr "இதைச் செய்வதற்கு `if` அறிக்கை ஒரு சிறந்த வழியாகும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.21.text"
msgstr "குறிப்பாக `else` உடன் இணைந்தது."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.22.text"
msgstr "`player1` முதல் நகர்வை இயக்குவதை உறுதிசெய்யவும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.23.text"
msgstr "`if` அறிக்கையுடன் `winner` என்பதைச் சரிபார்த்த பிறகு `print_winner` என்பதை மட்டும் அழைக்கவும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.24.text"
msgstr "ஒரு வீரர் எப்போது வெற்றி பெறுவார் என்பது உங்களுக்குத் தெரியாததால், சுழலுக்குள் வெற்றியாளரை நீங்கள் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.25.text"
msgstr "நீங்கள் `print_winner` ஐ அழைத்ததும், செயல்பாட்டை முடிக்க `return` ஐப் பயன்படுத்தலாம்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.26.text"
msgstr "`return` தானே பரவாயில்லை, `play_game` என்பது மதிப்பை வழங்குவதற்காக அல்ல."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.27.text"
msgstr "வெற்றியாளர் இல்லை என்றால் `print_draw` என அழைக்க வெற்றியாளரைச் சரிபார்த்த பிறகு `else` ஐப் பயன்படுத்த வேண்டாம். இதுவரை யாரும் வெற்றி பெறவில்லை என்பதால் அது ஏற்கனவே சம்மாகிவிட்டதாக பொருளில்லை."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.28.text"
msgstr "எல்லா நகர்வுகளும் விளையாடிய பின்னரே வெற்றியாளர் இல்லை எனில் `print_draw` அழைக்கப்பட வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.29.text"
msgstr "எனவே இது சுழலுக்குப் பிறகு, அதற்கு வெளியே அழைக்கப்பட வேண்டும்."

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheFullTicTacToeGame.steps.the_full_game
#: 
msgid "pages.TheFullTicTacToeGame.steps.the_full_game.hints.30.text"
msgstr "for சுழலின் உடலில் `print_draw` இல்லை என்பதை உறுதிப்படுத்த உள்தள்ளலைச் சரிபார்க்கவும்."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.hints.0.text
#. 
#.     def valid_image(filename):
#.         if filename.endswith(".png") or filename.endswith(".jpg"):
#.             return True
#.         else:
#.             return False
#. 
#.     assert_equal(valid_image("dog.png"), True)
#.     assert_equal(valid_image("cat.jpg"), True)
#.     assert_equal(valid_image("invoice.pdf"), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNotPage.steps.NotPriority.hints.3.text
#. 
#.     def valid_image(filename):
#.         return filename.endswith(".png") or filename.endswith(".jpg")
#: 
msgid "code_bits.valid_image"
msgstr "valid_image"

#. https://futurecoder.io/course/#IntroducingTheShell
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTheShell.steps.first_expression
#: 
msgid "pages.IntroducingTheShell.steps.first_expression.messages.anything_else.text"
msgstr "அருமை, நீங்கள் உங்கள் சொந்த பரிசோதனைகளை முயற்சி செய்கிறீர்கள்!\n"
"அது ஒரு பெரிய அடையாளம். பழக்கப்படுத்தி கொள் அல்லது மேம்படுத்திக்கொள்.\n"
"புத்தகம் முன்னோக்கிச் செல்ல நீங்கள் இறுதியில் `1+2` என தட்டச்சு செய்ய வேண்டும் என்பதை உங்களுக்குத் தெரியப்படுத்துகிறேன்."

#. https://futurecoder.io/course/#AddingStrings
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.AddingStrings.steps.hello_world_space
#: 
msgid "pages.AddingStrings.steps.hello_world_space.messages.literal_answer.text"
msgstr "நீங்கள் இன்னும் இரண்டு அல்லது அதற்கு மேற்பட்ட சரங்களை ஒன்றாகச் சேர்க்க வேண்டும்."

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign
#: 
msgid "pages.UsingVariables.steps.name_assign.messages.assigned_something_else.text"
msgstr "`your_name` எனப்படும் மாறியை உருவாக்க, `=` க்கு முன் `your_name` ஐ வைக்கவும்."

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign
#: 
msgid "pages.UsingVariables.steps.name_assign.messages.empty_string.text"
msgstr "இந்த பயிற்சிக்கு, காலியாக இல்லாத சரத்தைத் தேர்ந்தெடுக்கவும்"

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign
#: 
msgid "pages.UsingVariables.steps.name_assign.messages.name_equals_something_else.text"
msgstr "`your_name = ` பகுதி சரியாக உள்ளது, இப்போது `=` இன் வலதுபுறத்தில் ஒரு சரத்தை (மேற்கோள்களைப் பயன்படுத்தவும்) வைக்கவும்."

#. https://futurecoder.io/course/#UsingVariables
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign
#: 
msgid "pages.UsingVariables.steps.name_assign.messages.starts_with_space.text"
msgstr "இந்தப் பயிற்சிக்கு, இடைவெளியுடன் தொடங்காத பெயரைத் தேர்ந்தெடுக்கவும்."

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#: 
msgid "pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge.messages.add_space_first.text"
msgstr "ஏறக்குறைய அங்குதான்! ஒவ்வொரு எழுத்துக்கும் முன் உங்களிடம் ஒரு இடைவெளி அதிகமாக உள்ளது.\n"
"இடைவெளிகளைக் கொண்டிருக்கும் உங்கள் மாறியை உங்கள் சுழல் முதல் முறையாக `print` என்று அழைக்கும் போது\n"
"அது வெற்று சரம் என்பதை உறுதிப்படுத்தவும். உங்கள் குறியீட்டின் வரிசையைச் சரிபார்க்கவும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.messages.all_indices.text"
msgstr "நீங்கள் கிட்டத்தட்ட அங்கு வந்துவிட்டீர்கள்! இருப்பினும், இது முதல் குறியீடு மட்டுமல்ல, எல்லா குறியீடுகளையும் அச்சிடுகிறது."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPosition.steps.index_exercise.messages.last_index.text"
msgstr "நீங்கள் கிட்டத்தட்ட அங்கு வந்துவிட்டீர்கள்! இருப்பினும், இது *கடைசி* குறியீட்டை அச்சிடுகிறது, முதல் ஒன்று அல்ல."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.messages.added_str_and_int.text"
msgstr "நீங்கள் சரங்களையும் எண்களையும் ஒன்றாகச் சேர்க்க முடியாது. ஒரு f-சரம் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.messages.adding_one_in_wrong_loop.text"
msgstr "உங்கள் வெளிப்புற சுழற்சி மாறியில் 1ஐ தவறான இடத்தில் சேர்த்துள்ளீர்கள்!\n"
"அதைச் சரிசெய்வதற்குப் பதிலாக எங்கே செய்ய வேண்டும்?"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.messages.too_long.text"
msgstr "உங்கள் தீர்வு மிக நீண்டது. இந்தச் சிக்கலுக்கு உங்களுக்கு சில வரிகள் குறியீடு மட்டுமே தேவை.\n"
"ஒரு உள்ளமை சுழலைப் பயன்படுத்தவும், இதனால் நீங்கள் மீண்டும் மீண்டும் செய்ய வேண்டியதில்லை.\n"
"கணினி உங்களுக்காக மீண்டும் மீண்டும் செய்யும்!"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.messages.used_times_instead_of_x.text"
msgstr "அது கிட்டத்தட்ட சரியானது! உங்கள் அட்டவணையில் சரியான எழுத்து `x` காட்டப்படுவதை உறுதிசெய்யவும்.\n"
"எடுத்துக்காட்டாக, உங்கள் தீர்வு `3 x 4 = 12` காட்டப்பட வேண்டும் மற்றும் `3 * 4 = 12` அல்ல."

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.quadruple_exercise
#: 
msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.messages.used_multiply.text"
msgstr "நீங்கள் `*`, `+` அல்லது `quadruple`க்குள் எந்த எண்களையும் பயன்படுத்த முடியாது.\n"
"சிக்கலைத் தீர்க்க நீங்கள் `double` அழைக்க வேண்டும்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.messages.catch_return_inside_loop.text"
msgstr "`alert` செயல்பாட்டில், உங்கள் `return` அறிக்கையை தவறான இடத்தில் வைத்தீர்கள்!\n"
"`alert` இல் உங்கள் உள்தள்ளல்களைக் கவனியுங்கள். `return` மூலம் நீங்கள் ஒரு சுழலை மிக விரைவாக முடித்துக் கொண்டிருக்கலாம்."

#. https://futurecoder.io/course/#TestingFunctions
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#: 
msgid "pages.TestingFunctions.steps.alert_exercise.messages.used_format.text"
msgstr "`alert` இல் நீங்கள் சரம் ஒருங்கிணைப்பு/வடிவமைப்பு/இடைக்கணிப்பு/பெருக்கல் அல்லது f-சரங்களைப் பயன்படுத்த முடியாது.\n"
"சிக்கலைத் தீர்க்க நீங்கள் `surround` அழைக்க வேண்டும்."

#. https://futurecoder.io/course/#IntroducingTicTacToe
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.intro_row_winner
#: 
msgid "pages.IntroducingTicTacToe.steps.intro_row_winner.messages.catch_empty_row.text"
msgstr "சில உள்ளீடுகள் `' '` ஆக இருக்கலாம் என்பதை நினைவில் கொள்ளவும். வெற்று வரிசை வெற்றி வரிசை அல்ல."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#. 
#. name = "Alice"
#. age = 20
#. print("Hello " + name + ". You are " + age + " years old.")
#: 
msgid "code_bits.\" years old.\""
msgstr "\" years old.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.multi_line_strings_triple_quotes
#. 
#. string = """First line
#. Second line"""
#. print(string)
#: 
msgid "code_bits.\"\"\"First line\n"
"Second line\"\"\""
msgstr "\"\"\"First line\n"
"Second line\"\"\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#. 
#. name = "Alice"
#. age = 20
#. print("Hello " + name + ". You are " + age + " years old.")
#: 
msgid "code_bits.\". You are \""
msgstr "\". You are \""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.first_nested_loop
#. 
#. for letter in "ABC":
#.     print(letter)
#.     for number in range(4):
#.         print(f'{letter} {number}')
#.     print('---')
#: 
msgid "code_bits.\"ABC\""
msgstr "\"ABC\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.double_quotes
#. 
#. print("Alice's Diner")
#: 
msgid "code_bits.\"Alice's Diner\""
msgstr "\"Alice's Diner\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#. 
#. name = "Alice"
#. age = 20
#. print("Hello " + name + ". You are " + age + " years old.")
#: 
msgid "code_bits.\"Hello \""
msgstr "\"Hello \""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_lower_upper
#. 
#. sentence = "Python rocks!"
#. new_sentence = sentence.upper()
#. print(sentence)
#. print(new_sentence)
#: 
msgid "code_bits.\"Python rocks!\""
msgstr "\"Python rocks!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise
#. 
#. print("Special cases aren't special enough to break the rules.")
#: 
msgid "code_bits.\"Special cases aren't special enough to break the rules.\""
msgstr "\"Special cases aren't special enough to break the rules.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.mutation_string_append
#. 
#. 'Python'.append(' is cool!')
#: 
msgid "code_bits.' is cool!'"
msgstr "' is cool!'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise
#. 
#. print('"Talk is cheap. Show me the code." - Linus Torvalds')
#: 
msgid "code_bits.'\"Talk is cheap. Show me the code.\" - Linus Torvalds'"
msgstr "'\"Talk is cheap. Show me the code.\" - Linus Torvalds'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#. 
#. letters = 'AB'
#. for c1 in letters:
#.     for c2 in letters:
#.         for c3 in letters:
#.             for c4 in letters:
#.                 print(c1 + c2 + c3 + c4)
#: 
msgid "code_bits.'AB'"
msgstr "'AB'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example
#. 
#. dna = 'AGTAGCGTC'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     if char == 'T':
#.         char = 'A'
#.     if char == 'G':
#.         char = 'C'
#.     if char == 'C':
#.         char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_elif
#. 
#. dna = 'AGTAGCGTC'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     elif char == 'T':
#.         char = 'A'
#.     elif char == 'G':
#.         char = 'C'
#.     elif char == 'C':
#.         char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#: 
msgid "code_bits.'AGTAGCGTC'"
msgstr "'AGTAGCGTC'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_else
#. 
#. dna = 'AGTAGCGTCCTTAGTTACAGGATGGCTTAT'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     else:
#.         if char == 'T':
#.             char = 'A'
#.     if char == 'G':
#.         char = 'C'
#.     else:
#.         if char == 'C':
#.             char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#: 
msgid "code_bits.'AGTAGCGTCCTTAGTTACAGGATGGCTTAT'"
msgstr "'AGTAGCGTCCTTAGTTACAGGATGGCTTAT'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign
#. 
#. your_name = 'Alex'
#: 
msgid "code_bits.'Alex'"
msgstr "'Alex'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.birdseye_loop_example
#. 
#. word = 'Amazing'
#. vowels = []
#. consonants = []
#. for letter in word:
#.     if letter.lower() in 'aeiou':
#.         vowels.append(letter)
#.     else:
#.         consonants.append(letter)
#. print(vowels)
#. print(consonants)
#: 
msgid "code_bits.'Amazing'"
msgstr "'Amazing'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#. 
#. sentence = 'HELLO THERE'
#. upper = True
#. new_sentence = ''
#. for char in sentence:
#.     if upper:
#.         char = char.upper()
#.     else:
#.         char = char.lower()
#.     new_sentence += char
#.     upper = False
#. 
#. print(new_sentence)
#: 
msgid "code_bits.'HELLO THERE'"
msgstr "'HELLO THERE'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.hello_plus_name
#. 
#. 'Hello ' + your_name
#: 
msgid "code_bits.'Hello '"
msgstr "'Hello '"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#. 
#. sentence = 'Hello there'
#. excited = True
#. if excited:
#.     char = '!'
#. else:
#.     char = '.'
#. sentence += char
#. 
#. print(sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#. 
#. sentence = 'Hello there'
#. include = True
#. new_sentence = ''
#. for char in sentence:
#.     if include:
#.         new_sentence += char
#.     include = False
#. 
#. print(new_sentence)
#: 
msgid "code_bits.'Hello there'"
msgstr "'Hello there'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.first_if_else
#. 
#. condition = True
#. if condition:
#.     print('Yes')
#. else:
#.     print('No')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.first_if_else_false
#. 
#. condition = False
#. if condition:
#.     print('Yes')
#. else:
#.     print('No')
#: 
msgid "code_bits.'No'"
msgstr "'No'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#. 
#. sentence = 'One more exercise, and then you can relax.'
#. upper = True
#. new_sentence = ''
#. for char in sentence:
#.     if upper:
#.         char = char.upper()
#.         upper = False
#.     else:
#.         char = char.lower()
#.         upper = True
#.     new_sentence += char
#. 
#. print(new_sentence)
#: 
msgid "code_bits.'One more exercise, and then you can relax.'"
msgstr "'One more exercise, and then you can relax.'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.mutation_string_append
#. 
#. 'Python'.append(' is cool!')
#: 
msgid "code_bits.'Python'"
msgstr "'Python'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.brokn_kyboard
#. 
#. sentence = 'The e key on my keyboard is broken'
#. new_sentence = ''
#. for c in sentence:
#.     if c != 'e':
#.         new_sentence += c
#. print(new_sentence)
#: 
msgid "code_bits.'The e key on my keyboard is broken'"
msgstr "'The e key on my keyboard is broken'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.first_if_statements
#. 
#. if True:
#.     print('This gets printed')
#. 
#. if False:
#.     print('This does not')
#: 
msgid "code_bits.'This does not'"
msgstr "'This does not'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.first_if_statements
#. 
#. if True:
#.     print('This gets printed')
#. 
#. if False:
#.     print('This does not')
#: 
msgid "code_bits.'This gets printed'"
msgstr "'This gets printed'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#. 
#. words = ['This', 'is', 'a', 'list']
#. total = ''
#. for word in words:
#.     total += word
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#. 
#. words = ['This', 'is', 'a', 'list']
#. separator = ' - '
#. total = ''
#. not_first = False
#. 
#. for word in words:
#.     if not_first:
#.         total += separator
#.     total += word
#.     not_first = True
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#. 
#. things = ['This', 'is', 'a', 'list']
#. thing_to_find = 'is'
#. found = False
#. for thing in things:
#.     if thing == thing_to_find:
#.         found = True
#. 
#. print(found)
#: 
msgid "code_bits.'This'"
msgstr "'This'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.first_input
#. 
#. print('Type your name, then press Enter:')
#. name = input()
#. print(f'Hello {name}!')
#: 
msgid "code_bits.'Type your name, then press Enter:'"
msgstr "'Type your name, then press Enter:'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.first_if_else
#. 
#. condition = True
#. if condition:
#.     print('Yes')
#. else:
#.     print('No')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.first_if_else_false
#. 
#. condition = False
#. if condition:
#.     print('Yes')
#. else:
#.     print('No')
#: 
msgid "code_bits.'Yes'"
msgstr "'Yes'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsTerminology.steps.not_callable
#. 
#. f = 'a string'
#. print(callable(f))
#. f()
#: 
msgid "code_bits.'a string'"
msgstr "'a string'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.introducing_equality
#. 
#. print(1 + 2 == 3)
#. print(4 + 5 == 6)
#. print('ab' + 'c' == 'a' + 'bc')
#: 
msgid "code_bits.'ab'"
msgstr "'ab'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#. 
#. strings = ['abc', 'de', 'fghi', 'jklmn', 'o']
#. print(strings[-2][-1])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise
#. 
#. strings = ['abc', 'def', 'ghi']
#. string = strings[1]
#. print(string[0])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#. 
#. strings = ['abc', 'def', 'ghi']
#. for i in range(len(strings[0])):
#.     line = ""
#.     for string in strings:
#.         line += string[i]
#.     print(line)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.break_vs_return
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 break
#. 
#. foo()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 return letter
#. 
#. foo()
#: 
msgid "code_bits.'abc'"
msgstr "'abc'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#. 
#. strings = ['abcqwe', 'def', 'ghiq']
#. lengths = []
#. for string in strings:
#.     lengths.append(len(string))
#. length = max(lengths)
#. 
#. for i in range(length):
#.     line = ""
#.     for string in strings:
#.         if i >= len(string):
#.             line += " "
#.         else:
#.             line += string[i]
#.     print(line)
#: 
msgid "code_bits.'abcqwe'"
msgstr "'abcqwe'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.birdseye_loop_example
#. 
#. word = 'Amazing'
#. vowels = []
#. consonants = []
#. for letter in word:
#.     if letter.lower() in 'aeiou':
#.         vowels.append(letter)
#.     else:
#.         consonants.append(letter)
#. print(vowels)
#. print(consonants)
#: 
msgid "code_bits.'aeiou'"
msgstr "'aeiou'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#. 
#. strings = [['hello', 'there'], ['how', 'are', 'you']]
#. print(strings[1][2][0])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'are'
#. present = False
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             present = True
#. print(present)
#: 
msgid "code_bits.'are'"
msgstr "'are'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.introducing_equality
#. 
#. print(1 + 2 == 3)
#. print(4 + 5 == 6)
#. print('ab' + 'c' == 'a' + 'bc')
#: 
msgid "code_bits.'bc'"
msgstr "'bc'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#. 
#. strings = ['abc', 'de', 'fghi', 'jklmn', 'o']
#. print(strings[-2][-1])
#: 
msgid "code_bits.'de'"
msgstr "'de'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise
#. 
#. strings = ['abc', 'def', 'ghi']
#. string = strings[1]
#. print(string[0])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#. 
#. strings = ['abcqwe', 'def', 'ghiq']
#. lengths = []
#. for string in strings:
#.     lengths.append(len(string))
#. length = max(lengths)
#. 
#. for i in range(length):
#.     line = ""
#.     for string in strings:
#.         if i >= len(string):
#.             line += " "
#.         else:
#.             line += string[i]
#.     print(line)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#. 
#. strings = ['abc', 'def', 'ghi']
#. for i in range(len(strings[0])):
#.     line = ""
#.     for string in strings:
#.         line += string[i]
#.     print(line)
#: 
msgid "code_bits.'def'"
msgstr "'def'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#. 
#. strings = ['abc', 'de', 'fghi', 'jklmn', 'o']
#. print(strings[-2][-1])
#: 
msgid "code_bits.'fghi'"
msgstr "'fghi'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.string_list_exercise
#. 
#. strings = ['abc', 'def', 'ghi']
#. string = strings[1]
#. print(string[0])
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_strings_list_exercise
#. 
#. strings = ['abc', 'def', 'ghi']
#. for i in range(len(strings[0])):
#.     line = ""
#.     for string in strings:
#.         line += string[i]
#.     print(line)
#: 
msgid "code_bits.'ghi'"
msgstr "'ghi'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#. 
#. strings = ['abcqwe', 'def', 'ghiq']
#. lengths = []
#. for string in strings:
#.     lengths.append(len(string))
#. length = max(lengths)
#. 
#. for i in range(length):
#.     line = ""
#.     for string in strings:
#.         if i >= len(string):
#.             line += " "
#.         else:
#.             line += string[i]
#.     print(line)
#: 
msgid "code_bits.'ghiq'"
msgstr "'ghiq'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'are'
#. present = False
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             present = True
#. print(present)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'hello'
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             print(string)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'goodbye'
#. for sublist in strings:
#.     present = False
#.     for string in sublist:
#.         if word in string:
#.             present = True
#.     print(present)
#: 
msgid "code_bits.'goodbye world'"
msgstr "'goodbye world'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'goodbye'
#. for sublist in strings:
#.     present = False
#.     for string in sublist:
#.         if word in string:
#.             present = True
#.     print(present)
#: 
msgid "code_bits.'goodbye'"
msgstr "'goodbye'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'are'
#. present = False
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             present = True
#. print(present)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'hello'
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             print(string)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'goodbye'
#. for sublist in strings:
#.     present = False
#.     for string in sublist:
#.         if word in string:
#.             present = True
#.     print(present)
#: 
msgid "code_bits.'hello there'"
msgstr "'hello there'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'are'
#. present = False
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             present = True
#. print(present)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'hello'
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             print(string)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'goodbye'
#. for sublist in strings:
#.     present = False
#.     for string in sublist:
#.         if word in string:
#.             present = True
#.     print(present)
#: 
msgid "code_bits.'hello world'"
msgstr "'hello world'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'are'
#. present = False
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             present = True
#. print(present)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.string_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'hello'
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             print(string)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'goodbye'
#. for sublist in strings:
#.     present = False
#.     for string in sublist:
#.         if word in string:
#.             present = True
#.     print(present)
#: 
msgid "code_bits.'how are you'"
msgstr "'how are you'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#. 
#. strings = [['hello', 'there'], ['how', 'are', 'you']]
#. print(strings[1][2][0])
#: 
msgid "code_bits.'how'"
msgstr "'how'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#. 
#. words = ['This', 'is', 'a', 'list']
#. total = ''
#. for word in words:
#.     total += word
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#. 
#. words = ['This', 'is', 'a', 'list']
#. separator = ' - '
#. total = ''
#. not_first = False
#. 
#. for word in words:
#.     if not_first:
#.         total += separator
#.     total += word
#.     not_first = True
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#. 
#. things = ['This', 'is', 'a', 'list']
#. thing_to_find = 'is'
#. found = False
#. for thing in things:
#.     if thing == thing_to_find:
#.         found = True
#. 
#. print(found)
#: 
msgid "code_bits.'is'"
msgstr "'is'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.double_subscripting_exercise
#. 
#. strings = ['abc', 'de', 'fghi', 'jklmn', 'o']
#. print(strings[-2][-1])
#: 
msgid "code_bits.'jklmn'"
msgstr "'jklmn'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.if_equals_replacing_characters
#. 
#. name = 'kesha'
#. new_name = ''
#. for c in name:
#.     if c == 's':
#.         c = '$'
#.     new_name += c
#. 
#. print(new_name)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.if_equals_replacing_characters_exercise
#. 
#. name = 'kesha'
#. new_name = ''
#. for c in name:
#.     if c == 'e':
#.         c = '3'
#.     if c == 's':
#.         c = '$'
#.     if c == 'a':
#.         c = '@'
#.     new_name += c
#. 
#. print(new_name)
#: 
msgid "code_bits.'kesha'"
msgstr "'kesha'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#. 
#. words = ['This', 'is', 'a', 'list']
#. total = ''
#. for word in words:
#.     total += word
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#. 
#. words = ['This', 'is', 'a', 'list']
#. separator = ' - '
#. total = ''
#. not_first = False
#. 
#. for word in words:
#.     if not_first:
#.         total += separator
#.     total += word
#.     not_first = True
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingBreak.steps.list_contains_exercise
#. 
#. things = ['This', 'is', 'a', 'list']
#. thing_to_find = 'is'
#. found = False
#. for thing in things:
#.     if thing == thing_to_find:
#.         found = True
#. 
#. print(found)
#: 
msgid "code_bits.'list'"
msgstr "'list'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#. 
#. things = ['on', 'the', 'way', 'to', 'the', 'store']
#. to_find = 'the'
#. for i in range(len(things)):
#.     if to_find == things[i]:
#.         print(i)
#.         break
#: 
msgid "code_bits.'on'"
msgstr "'on'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#. 
#. things = ['on', 'the', 'way', 'to', 'the', 'store']
#. to_find = 'the'
#. for i in range(len(things)):
#.     if to_find == things[i]:
#.         print(i)
#.         break
#: 
msgid "code_bits.'store'"
msgstr "'store'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#. 
#. things = ['on', 'the', 'way', 'to', 'the', 'store']
#. to_find = 'the'
#. for i in range(len(things)):
#.     if to_find == things[i]:
#.         print(i)
#.         break
#: 
msgid "code_bits.'the'"
msgstr "'the'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#. 
#. strings = [['hello', 'there'], ['how', 'are', 'you']]
#. print(strings[1][2][0])
#: 
msgid "code_bits.'there'"
msgstr "'there'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#. 
#. things = ['on', 'the', 'way', 'to', 'the', 'store']
#. to_find = 'the'
#. for i in range(len(things)):
#.     if to_find == things[i]:
#.         print(i)
#.         break
#: 
msgid "code_bits.'to'"
msgstr "'to'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#. 
#. things = ['on', 'the', 'way', 'to', 'the', 'store']
#. to_find = 'the'
#. for i in range(len(things)):
#.     if to_find == things[i]:
#.         print(i)
#.         break
#: 
msgid "code_bits.'way'"
msgstr "'way'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.word_string_check
#. 
#. 'word'
#: 
msgid "code_bits.'word'"
msgstr "'word'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.triple_subscripting
#. 
#. strings = [['hello', 'there'], ['how', 'are', 'you']]
#. print(strings[1][2][0])
#: 
msgid "code_bits.'you'"
msgstr "'you'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.basic_f_string_exercise
#. 
#. name = "Alice"
#. age = 20
#. print(f'Hello {name}. You are {age} years old.')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#. 
#. name = "Alice"
#. age = 20
#. print("Hello " + name + ". You are " + age + " years old.")
#: 
msgid "code_bits.age"
msgstr "age"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#. 
#. def diagonal_winner(board):
#.     all_equal1 = True
#.     all_equal2 = True
#.     topleft = board[0][0]
#.     topright = board[0][-1]
#.     for i in range(len(board)):
#.         if board[i][i] == ' ' or board[i][i] != topleft:
#.             all_equal1 = False
#.         if board[i][-i - 1] == ' ' or board[i][-i - 1] != topright:
#.             all_equal2 = False
#.     return all_equal1 or all_equal2
#: 
msgid "code_bits.all_equal1"
msgstr "all_equal1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#. 
#. def diagonal_winner(board):
#.     all_equal1 = True
#.     all_equal2 = True
#.     topleft = board[0][0]
#.     topright = board[0][-1]
#.     for i in range(len(board)):
#.         if board[i][i] == ' ' or board[i][i] != topleft:
#.             all_equal1 = False
#.         if board[i][-i - 1] == ' ' or board[i][-i - 1] != topright:
#.             all_equal2 = False
#.     return all_equal1 or all_equal2
#: 
msgid "code_bits.all_equal2"
msgstr "all_equal2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithPythonTutor.steps.run_with_python_tutor
#. 
#. all_numbers = [2, 4, 8, 1, 9, 7]
#. 
#. small_numbers = []
#. big_numbers = []
#. 
#. for number in all_numbers:
#.     if number <= 5:
#.         small_numbers.append(number)
#.     else:
#.         big_numbers.append(number)
#. 
#. print(small_numbers)
#. print(big_numbers)
#: 
msgid "code_bits.all_numbers"
msgstr "all_numbers"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingNewLists.steps.filter_numbers
#. 
#. numbers = [3, 1, 4, 1, 5, 9, 2, 6, 5]
#. big_numbers = []
#. for number in numbers:
#.     if number > 5:
#.         big_numbers.append(number)
#. print(big_numbers)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ModifyingWhileIterating.steps.make_copy2
#. 
#. numbers = [10, 7, 8, 3, 12, 15]
#. big_numbers = numbers.copy()
#. 
#. for number in numbers:
#.     if number <= 10:
#.         big_numbers.remove(number)
#. print(big_numbers)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ModifyingWhileIterating.steps.make_new_list
#. 
#. numbers = [10, 7, 8, 3, 12, 15]
#. big_numbers = []
#. 
#. for number in numbers:
#.     if number > 10:
#.         big_numbers.append(number)
#. print(big_numbers)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithPythonTutor.steps.run_with_python_tutor
#. 
#. all_numbers = [2, 4, 8, 1, 9, 7]
#. 
#. small_numbers = []
#. big_numbers = []
#. 
#. for number in all_numbers:
#.     if number <= 5:
#.         small_numbers.append(number)
#.     else:
#.         big_numbers.append(number)
#. 
#. print(small_numbers)
#. print(big_numbers)
#: 
msgid "code_bits.big_numbers"
msgstr "big_numbers"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#. 
#. letters = 'AB'
#. for c1 in letters:
#.     for c2 in letters:
#.         for c3 in letters:
#.             for c4 in letters:
#.                 print(c1 + c2 + c3 + c4)
#: 
msgid "code_bits.c1"
msgstr "c1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#. 
#. letters = 'AB'
#. for c1 in letters:
#.     for c2 in letters:
#.         for c3 in letters:
#.             for c4 in letters:
#.                 print(c1 + c2 + c3 + c4)
#: 
msgid "code_bits.c2"
msgstr "c2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#. 
#. letters = 'AB'
#. for c1 in letters:
#.     for c2 in letters:
#.         for c3 in letters:
#.             for c4 in letters:
#.                 print(c1 + c2 + c3 + c4)
#: 
msgid "code_bits.c3"
msgstr "c3"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.crack_password_exercise
#. 
#. letters = 'AB'
#. for c1 in letters:
#.     for c2 in letters:
#.         for c3 in letters:
#.             for c4 in letters:
#.                 print(c1 + c2 + c3 + c4)
#: 
msgid "code_bits.c4"
msgstr "c4"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.birdseye_loop_example
#. 
#. word = 'Amazing'
#. vowels = []
#. consonants = []
#. for letter in word:
#.     if letter.lower() in 'aeiou':
#.         vowels.append(letter)
#.     else:
#.         consonants.append(letter)
#. print(vowels)
#. print(consonants)
#: 
msgid "code_bits.consonants"
msgstr "consonants"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example
#. 
#. dna = 'AGTAGCGTC'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     if char == 'T':
#.         char = 'A'
#.     if char == 'G':
#.         char = 'C'
#.     if char == 'C':
#.         char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_elif
#. 
#. dna = 'AGTAGCGTC'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     elif char == 'T':
#.         char = 'A'
#.     elif char == 'G':
#.         char = 'C'
#.     elif char == 'C':
#.         char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_else
#. 
#. dna = 'AGTAGCGTCCTTAGTTACAGGATGGCTTAT'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     else:
#.         if char == 'T':
#.             char = 'A'
#.     if char == 'G':
#.         char = 'C'
#.     else:
#.         if char == 'C':
#.             char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#: 
msgid "code_bits.dna"
msgstr "dna"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.eval_expr_inside_f_string
#. 
#. f"2 * 3 + 4 is equal to {2 * 3 + 4}"
#: 
msgid "code_bits.f\"2 * 3 + 4 is equal to {2 * 3 + 4}\""
msgstr "f\"2 * 3 + 4 is equal to {2 * 3 + 4}\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#. 
#. def say_hello(person_name):
#.     print(f"Hello {person_name}!")
#.     print("How are you?")
#. 
#. say_hello("Alice")
#. say_hello("Bob")
#: 
msgid "code_bits.f\"Hello {person_name}!\""
msgstr "f\"Hello {person_name}!\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#. 
#. people = ['Alice', 'Bob', 'Charlie']
#. print(f"There are {len(people)} people waiting, the first one's name is {people[0]}.")
#: 
msgid "code_bits.f\"There are {len(people)} people waiting, the first one's name is {people[0]}.\""
msgstr "f\"There are {len(people)} people waiting, the first one's name is {people[0]}.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.break_vs_return
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 break
#. 
#. foo()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 return letter
#. 
#. foo()
#: 
msgid "code_bits.f\"{letter} {number}\""
msgstr "f\"{letter} {number}\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.InteractiveProgramsWithInput.steps.first_input
#. 
#. print('Type your name, then press Enter:')
#. name = input()
#. print(f'Hello {name}!')
#: 
msgid "code_bits.f'Hello {name}!'"
msgstr "f'Hello {name}!'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.basic_f_string_exercise
#. 
#. name = "Alice"
#. age = 20
#. print(f'Hello {name}. You are {age} years old.')
#: 
msgid "code_bits.f'Hello {name}. You are {age} years old.'"
msgstr "f'Hello {name}. You are {age} years old.'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#. 
#. def format_board(board):
#.     joined_rows = []
#.     for row in board:
#.         joined_rows.append("|".join(row))
#.     lines = []
#.     for _ in board[0]:
#.         lines.append("-")
#.     line = f'\n{"+".join(lines)}\n'
#.     return line.join(joined_rows)
#: 
msgid "code_bits.f'\\n{\"+\".join(lines)}\\n'"
msgstr "f'\\n{\"+\".join(lines)}\\n'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#. 
#. for left in range(12):
#.     left += 1
#.     for right in range(12):
#.         right += 1
#.         print(f'{left} x {right} = {left * right}')
#.     print('----------')
#: 
msgid "code_bits.f'{left} x {right} = {left * right}'"
msgstr "f'{left} x {right} = {left * right}'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.first_nested_loop
#. 
#. for letter in "ABC":
#.     print(letter)
#.     for number in range(4):
#.         print(f'{letter} {number}')
#.     print('---')
#: 
msgid "code_bits.f'{letter} {number}'"
msgstr "f'{letter} {number}'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.player_vs_player_exercise
#. 
#. players = ['Alice', 'Bob', 'Charlie']
#. for player1 in players:
#.     for player2 in players:
#.         if player1 != player2:
#.             print(f'{player1} vs {player2}')
#: 
msgid "code_bits.f'{player1} vs {player2}'"
msgstr "f'{player1} vs {player2}'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.break_vs_return
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 break
#. 
#. foo()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.double_return_in_one_function
#. 
#. def foo():
#.     return 1
#.     return 2
#. 
#. print(foo())
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 return letter
#. 
#. foo()
#: 
msgid "code_bits.foo"
msgstr "foo"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NestedListAssignment.steps.modify_list_in_function
#. 
#. def play_move(board, player):
#.     board[1] = player
#. 
#. def play_game():
#.     game_board = [" ", " ", " "]
#.     play_move(game_board, "X")
#.     print(game_board)
#. 
#. play_game()
#: 
msgid "code_bits.game_board"
msgstr "game_board"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.grades_example
#. 
#. percentage = 73
#. 
#. if percentage < 40:
#.     grade = 'F'
#. elif percentage < 60:
#.     grade = 'C'
#. elif percentage < 80:
#.     grade = 'B'
#. else:
#.     grade = 'A'
#. 
#. print(grade)
#: 
msgid "code_bits.grade"
msgstr "grade"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_first_character
#. 
#. sentence = 'Hello there'
#. include = True
#. new_sentence = ''
#. for char in sentence:
#.     if include:
#.         new_sentence += char
#.     include = False
#. 
#. print(new_sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail
#. 
#. sentence = 'Hello World'
#. 
#. include = False
#. new_sentence = ''
#. for char in sentence:
#.     if include:
#.         new_sentence += char
#.     include = True
#. 
#. print(new_sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail_snoop
#. 
#. sentence = 'Hello World'
#. 
#. include = False
#. new_sentence = ''
#. for char in sentence:
#.     if include:
#.         new_sentence += char
#.     include = True
#. 
#. print(new_sentence)
#: 
msgid "code_bits.include"
msgstr "include"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ACommonMistake
#. 
#. def is_friend(name):
#.     return name == "Alice" or "Bob"
#. 
#. assert_equal(is_friend("Alice"), True)
#. assert_equal(is_friend("Bob"), True)
#. assert_equal(is_friend("Charlie"), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.FurtherImprovement
#. 
#. def is_friend(name):
#.     return name == "Alice" or name == "Bob"
#. 
#. assert_equal(is_friend("Alice"), True)
#. assert_equal(is_friend("Bob"), True)
#. assert_equal(is_friend("Charlie"), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.ImprovingWithOr
#. 
#. def is_friend(name):
#.     if name == "Alice" or name == "Bob":
#.         return True
#.     else:
#.         return False
#. 
#. assert_equal(is_friend("Alice"), True)
#. assert_equal(is_friend("Bob"), True)
#. assert_equal(is_friend("Charlie"), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.InputAliceBob
#. 
#. def is_friend(name):
#.     if name == "Alice":
#.         return True
#.     elif name == "Bob":
#.         return True
#.     else:
#.         return False
#. 
#. assert_equal(is_friend("Alice"), True)
#. assert_equal(is_friend("Bob"), True)
#. assert_equal(is_friend("Charlie"), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingOr.steps.InspectWithBirdseye
#. 
#. def is_friend(name):
#.     return name == "Alice" or "Bob"
#. 
#. assert_equal(is_friend("Alice"), True)
#. assert_equal(is_friend("Bob"), True)
#. assert_equal(is_friend("Charlie"), False)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MultiLineExpressions.steps.valid_multiline
#. 
#. name = "Bob"
#. 
#. is_friend = name == "Alice" or \
#.             name == "Bob"
#. print(is_friend)
#. 
#. is_friend = (name == "Alice" or
#.              name == "Bob")
#. print(is_friend)
#. 
#. is_friend = [name == "Alice",
#.              name == "Bob"]
#. print(is_friend)
#. 
#. print(name == "Alice" or
#.       name == "Bob")
#: 
msgid "code_bits.is_friend"
msgstr "is_friend"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#. 
#. for left in range(12):
#.     left += 1
#.     for right in range(12):
#.         right += 1
#.         print(f'{left} x {right} = {left * right}')
#.     print('----------')
#: 
msgid "code_bits.left"
msgstr "left"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsTerminology.steps.len_of_none
#. 
#. things = print([1, 2, 3])
#. length = len(things)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsTerminology.steps.print_returns_none
#. 
#. things = [1, 2, 3]
#. length = len(things)
#. printed = print(length)
#. print(printed)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#. 
#. string1 = 'Goodbye'
#. string2 = 'World'
#. length1 = len(string1)
#. length2 = len(string2)
#. 
#. if length1 > length2:
#.     length = length1
#. else:
#.     length = length2
#. 
#. for i in range(length):
#.     if i < len(string1):
#.         char1 = string1[i]
#.     else:
#.         char1 = ' '
#. 
#.     if i < len(string2):
#.         char2 = string2[i]
#.     else:
#.         char2 = ' '
#. 
#.     print(char1 + ' ' + char2)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.upside_down_triangle_exercise
#. 
#. size = 3
#. for i in range(size):
#.     length = size - i
#.     line = ''
#.     for _ in range(length):
#.         line += 'O'
#.     print(line)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#. 
#. strings = ['abcqwe', 'def', 'ghiq']
#. lengths = []
#. for string in strings:
#.     lengths.append(len(string))
#. length = max(lengths)
#. 
#. for i in range(length):
#.     line = ""
#.     for string in strings:
#.         if i >= len(string):
#.             line += " "
#.         else:
#.             line += string[i]
#.     print(line)
#: 
msgid "code_bits.length"
msgstr "length"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#. 
#. string1 = 'Goodbye'
#. string2 = 'World'
#. length1 = len(string1)
#. length2 = len(string2)
#. 
#. if length1 > length2:
#.     length = length1
#. else:
#.     length = length2
#. 
#. for i in range(length):
#.     if i < len(string1):
#.         char1 = string1[i]
#.     else:
#.         char1 = ' '
#. 
#.     if i < len(string2):
#.         char2 = string2[i]
#.     else:
#.         char2 = ' '
#. 
#.     print(char1 + ' ' + char2)
#: 
msgid "code_bits.length1"
msgstr "length1"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.zip_longest_exercise
#. 
#. string1 = 'Goodbye'
#. string2 = 'World'
#. length1 = len(string1)
#. length2 = len(string2)
#. 
#. if length1 > length2:
#.     length = length1
#. else:
#.     length = length2
#. 
#. for i in range(length):
#.     if i < len(string1):
#.         char1 = string1[i]
#.     else:
#.         char1 = ' '
#. 
#.     if i < len(string2):
#.         char2 = string2[i]
#.     else:
#.         char2 = ' '
#. 
#.     print(char1 + ' ' + char2)
#: 
msgid "code_bits.length2"
msgstr "length2"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.zip_longest_strings_exercise
#. 
#. strings = ['abcqwe', 'def', 'ghiq']
#. lengths = []
#. for string in strings:
#.     lengths.append(len(string))
#. length = max(lengths)
#. 
#. for i in range(length):
#.     line = ""
#.     for string in strings:
#.         if i >= len(string):
#.             line += " "
#.         else:
#.             line += string[i]
#.     print(line)
#: 
msgid "code_bits.lengths"
msgstr "lengths"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.birdseye_loop_example
#. 
#. word = 'Amazing'
#. vowels = []
#. consonants = []
#. for letter in word:
#.     if letter.lower() in 'aeiou':
#.         vowels.append(letter)
#.     else:
#.         consonants.append(letter)
#. print(vowels)
#. print(consonants)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.first_nested_loop
#. 
#. for letter in "ABC":
#.     print(letter)
#.     for number in range(4):
#.         print(f'{letter} {number}')
#.     print('---')
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.break_vs_return
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 break
#. 
#. foo()
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MoreOnReturn.steps.return_ends_whole_function
#. 
#. def foo():
#.     for letter in 'abc':
#.         for number in range(3):
#.             print(f"{letter} {number}")
#.             if letter == 'b':
#.                 return letter
#. 
#. foo()
#: 
msgid "code_bits.letter"
msgstr "letter"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#. 
#. def surround(string, sides):
#.     return sides + string + sides
#. 
#. def alert(string, level):
#.     string = surround(string, ' ')
#.     for _ in range(level):
#.         string = surround(string, '!')
#.     return string
#: 
msgid "code_bits.level"
msgstr "level"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.format_board_bonus_challenge
#. 
#. def format_board(board):
#.     joined_rows = []
#.     for row in board:
#.         joined_rows.append("|".join(row))
#.     lines = []
#.     for _ in board[0]:
#.         lines.append("-")
#.     line = f'\n{"+".join(lines)}\n'
#.     return line.join(joined_rows)
#: 
msgid "code_bits.lines"
msgstr "lines"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.if_equals_replacing_characters
#. 
#. name = 'kesha'
#. new_name = ''
#. for c in name:
#.     if c == 's':
#.         c = '$'
#.     new_name += c
#. 
#. print(new_name)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.if_equals_replacing_characters_exercise
#. 
#. name = 'kesha'
#. new_name = ''
#. for c in name:
#.     if c == 'e':
#.         c = '3'
#.     if c == 's':
#.         c = '$'
#.     if c == 'a':
#.         c = '@'
#.     new_name += c
#. 
#. print(new_name)
#: 
msgid "code_bits.new_name"
msgstr "new_name"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.FunctionsAndMethodsForLists.steps.append_vs_concatenate
#. 
#. nums = [1, 2, 3]
#. new_nums = nums + [4, 5]
#. print(new_nums)
#. print(nums)
#. nums.append(4)
#. print(nums)
#: 
msgid "code_bits.new_nums"
msgstr "new_nums"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#. 
#. words = ['This', 'is', 'a', 'list']
#. separator = ' - '
#. total = ''
#. not_first = False
#. 
#. for word in words:
#.     if not_first:
#.         total += separator
#.     total += word
#.     not_first = True
#. 
#. print(total)
#: 
msgid "code_bits.not_first"
msgstr "not_first"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example
#. 
#. dna = 'AGTAGCGTC'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     if char == 'T':
#.         char = 'A'
#.     if char == 'G':
#.         char = 'C'
#.     if char == 'C':
#.         char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_elif
#. 
#. dna = 'AGTAGCGTC'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     elif char == 'T':
#.         char = 'A'
#.     elif char == 'G':
#.         char = 'C'
#.     elif char == 'C':
#.         char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingElif.steps.dna_example_with_else
#. 
#. dna = 'AGTAGCGTCCTTAGTTACAGGATGGCTTAT'
#. opposite_dna = ''
#. for char in dna:
#.     if char == 'A':
#.         char = 'T'
#.     else:
#.         if char == 'T':
#.             char = 'A'
#.     if char == 'G':
#.         char = 'C'
#.     else:
#.         if char == 'C':
#.             char = 'G'
#.     opposite_dna += char
#. 
#. print(opposite_dna)
#: 
msgid "code_bits.opposite_dna"
msgstr "opposite_dna"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.fix_broken_program
#. 
#. people = ['Alice', 'Bob', 'Charlie']
#. print(f"There are {len(people)} people waiting, the first one's name is {people[0]}.")
#: 
msgid "code_bits.people"
msgstr "people"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.grades_example
#. 
#. percentage = 73
#. 
#. if percentage < 40:
#.     grade = 'F'
#. elif percentage < 60:
#.     grade = 'C'
#. elif percentage < 80:
#.     grade = 'B'
#. else:
#.     grade = 'A'
#. 
#. print(grade)
#: 
msgid "code_bits.percentage"
msgstr "percentage"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#. 
#. def say_hello(person_name):
#.     print(f"Hello {person_name}!")
#.     print("How are you?")
#. 
#. say_hello("Alice")
#. say_hello("Bob")
#: 
msgid "code_bits.person_name"
msgstr "person_name"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.list_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'are'
#. present = False
#. for sublist in strings:
#.     for string in sublist:
#.         if word in string:
#.             present = True
#. print(present)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.LoopingOverNestedLists.steps.sublist_contains_word_exercise
#. 
#. strings = [['hello there', 'how are you'], ['goodbye world', 'hello world']]
#. word = 'goodbye'
#. for sublist in strings:
#.     present = False
#.     for string in sublist:
#.         if word in string:
#.             present = True
#.     print(present)
#: 
msgid "code_bits.present"
msgstr "present"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsWithinFunctions.steps.print_twice_call_print_many
#. 
#. def print_many(n, thing):
#.     for _ in range(n):
#.         print(thing)
#. 
#. def print_twice(x):
#.     print_many(2, x)
#. 
#. print_twice("Hello")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsWithinFunctions.steps.see_stack_in_birdseye
#. 
#. def print_many(n, thing):
#.     for _ in range(n):
#.         print(thing)
#. 
#. def print_twice(x):
#.     print_many(2, x)
#. 
#. print_twice("Hello")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsWithinFunctions.steps.see_stack_in_pythontutor
#. 
#. def print_many(n, thing):
#.     for _ in range(n):
#.         print(thing)
#. 
#. def print_twice(x):
#.     print_many(2, x)
#. 
#. print_twice("Hello")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsWithinFunctions.steps.see_stack_in_snoop
#. 
#. def print_many(n, thing):
#.     for _ in range(n):
#.         print(thing)
#. 
#. def print_twice(x):
#.     print_many(2, x)
#. 
#. print_twice("Hello")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_twice_exercise
#. 
#. def print_twice(x):
#.     print(x)
#.     print(x)
#: 
msgid "code_bits.print_twice"
msgstr "print_twice"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CallingFunctionsTerminology.steps.print_returns_none
#. 
#. things = [1, 2, 3]
#. length = len(things)
#. printed = print(length)
#. print(printed)
#: 
msgid "code_bits.printed"
msgstr "printed"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLoops.steps.times_table_exercise
#. 
#. for left in range(12):
#.     left += 1
#.     for right in range(12):
#.         right += 1
#.         print(f'{left} x {right} = {left * right}')
#.     print('----------')
#: 
msgid "code_bits.right"
msgstr "right"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_function_name
#. 
#. def say_hello(name):
#.     print(f"Hello {name}!")
#.     print("How are you?")
#. 
#. say_hello("Alice")
#. say_hello("Bob")
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.change_parameter_name
#. 
#. def say_hello(person_name):
#.     print(f"Hello {person_name}!")
#.     print("How are you?")
#. 
#. say_hello("Alice")
#. say_hello("Bob")
#: 
msgid "code_bits.say_hello"
msgstr "say_hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#. 
#. words = ['This', 'is', 'a', 'list']
#. separator = ' - '
#. total = ''
#. not_first = False
#. 
#. for word in words:
#.     if not_first:
#.         total += separator
#.     total += word
#.     not_first = True
#. 
#. print(total)
#: 
msgid "code_bits.separator"
msgstr "separator"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.alert_exercise
#. 
#. def surround(string, sides):
#.     return sides + string + sides
#. 
#. def alert(string, level):
#.     string = surround(string, ' ')
#.     for _ in range(level):
#.         string = surround(string, '!')
#.     return string
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TestingFunctions.steps.surround_exercise
#. 
#. def surround(string, sides):
#.     return sides + string + sides
#: 
msgid "code_bits.sides"
msgstr "sides"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithPythonTutor.steps.run_with_python_tutor
#. 
#. all_numbers = [2, 4, 8, 1, 9, 7]
#. 
#. small_numbers = []
#. big_numbers = []
#. 
#. for number in all_numbers:
#.     if number <= 5:
#.         small_numbers.append(number)
#.     else:
#.         big_numbers.append(number)
#. 
#. print(small_numbers)
#. print(big_numbers)
#: 
msgid "code_bits.small_numbers"
msgstr "small_numbers"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.diagonal_name_bonus_challenge
#. 
#. name = 'World'
#. spaces = ''
#. for char in name:
#.     print(spaces + char)
#.     spaces += ' '
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStringsExercises.steps.name_box_2
#. 
#. name = 'World'
#. line = '+' + name + '+'
#. spaces = ''
#. for _ in name:
#.     spaces += ' '
#. 
#. print(line)
#. for char in name:
#.     print(char + spaces + char)
#. print(line)
#: 
msgid "code_bits.spaces"
msgstr "spaces"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.sunshine_undefined_check
#. 
#. sunshine
#: 
msgid "code_bits.sunshine"
msgstr "sunshine"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_exercise
#. 
#. things = ['on', 'the', 'way', 'to', 'the', 'store']
#. to_find = 'the'
#. for i in range(len(things)):
#.     if to_find == things[i]:
#.         print(i)
#.         break
#: 
msgid "code_bits.to_find"
msgstr "to_find"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#. 
#. def diagonal_winner(board):
#.     all_equal1 = True
#.     all_equal2 = True
#.     topleft = board[0][0]
#.     topright = board[0][-1]
#.     for i in range(len(board)):
#.         if board[i][i] == ' ' or board[i][i] != topleft:
#.             all_equal1 = False
#.         if board[i][-i - 1] == ' ' or board[i][-i - 1] != topright:
#.             all_equal2 = False
#.     return all_equal1 or all_equal2
#: 
msgid "code_bits.topleft"
msgstr "topleft"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingTicTacToe.steps.diagonal_winner
#. 
#. def diagonal_winner(board):
#.     all_equal1 = True
#.     all_equal2 = True
#.     topleft = board[0][0]
#.     topright = board[0][-1]
#.     for i in range(len(board)):
#.         if board[i][i] == ' ' or board[i][i] != topleft:
#.             all_equal1 = False
#.         if board[i][-i - 1] == ' ' or board[i][-i - 1] != topright:
#.             all_equal2 = False
#.     return all_equal1 or all_equal2
#: 
msgid "code_bits.topright"
msgstr "topright"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.numbers_sum
#. 
#. numbers = [3, 1, 4, 1, 5, 9]
#. 
#. total = 0
#. for number in numbers:
#.     total += number
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum
#. 
#. words = ['This', 'is', 'a', 'list']
#. total = ''
#. for word in words:
#.     total += word
#. 
#. print(total)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.strings_sum_bonus
#. 
#. words = ['This', 'is', 'a', 'list']
#. separator = ' - '
#. total = ''
#. not_first = False
#. 
#. for word in words:
#.     if not_first:
#.         total += separator
#.     total += word
#.     not_first = True
#. 
#. print(total)
#: 
msgid "code_bits.total"
msgstr "total"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.ReturningValuesFromFunctions.steps.first_return
#. 
#. def double(x):
#.     return x * 2
#. 
#. number = 5
#. twice = double(number)
#. print(number)
#. print(twice)
#: 
msgid "code_bits.twice"
msgstr "twice"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.capitalise
#. 
#. sentence = 'HELLO THERE'
#. upper = True
#. new_sentence = ''
#. for char in sentence:
#.     if upper:
#.         char = char.upper()
#.     else:
#.         char = char.lower()
#.     new_sentence += char
#.     upper = False
#. 
#. print(new_sentence)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.spongebob
#. 
#. sentence = 'One more exercise, and then you can relax.'
#. upper = True
#. new_sentence = ''
#. for char in sentence:
#.     if upper:
#.         char = char.upper()
#.         upper = False
#.     else:
#.         char = char.lower()
#.         upper = True
#.     new_sentence += char
#. 
#. print(new_sentence)
#: 
msgid "code_bits.upper"
msgstr "upper"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingBirdseye.steps.birdseye_loop_example
#. 
#. word = 'Amazing'
#. vowels = []
#. consonants = []
#. for letter in word:
#.     if letter.lower() in 'aeiou':
#.         vowels.append(letter)
#.     else:
#.         consonants.append(letter)
#. print(vowels)
#. print(consonants)
#: 
msgid "code_bits.vowels"
msgstr "vowels"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.first_print
#. 
#. print(word + ' ' + your_name)
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.goodbye_plus_name
#. 
#. word + ' ' + your_name
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.hello_plus_name
#. 
#. 'Hello ' + your_name
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.name_assign
#. 
#. your_name = 'Alex'
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_plus_name
#. 
#. word + your_name
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UsingVariables.steps.word_plus_name_with_space
#. 
#. word + ' ' + your_name
#: 
msgid "code_bits.your_name"
msgstr "your_name"

#: 
msgid "linting_messages.pyflakes.ImportShadowedByLoopVar.message_format"
msgstr "**இறக்குமதி `{0}` சுழல் மாறி மூலம் நிழலாடப்பட்டது**\n"
"\n"
"முன்பு இறக்குமதி செய்யப்பட்ட `{0}` தொகுதியை மறுவரையறை செய்வதால் சுழல் மாறியின் பெயர் `{0}` மாற்றப்பட வேண்டும்.\n"
"இந்தப் பிழையைத் தவிர்க்க வேறு சுழல் மாறியைத் தேர்வு செய்யவும்."

#: 
msgid "linting_messages.pyflakes.ImportStarNotPermitted.message_format"
msgstr "**இறக்குமதி `*`ஐ பயன்படுத்தி **\n"
"\n"
"`from {0} import *` `{0}`தொகுதியிலிருந்து அனைத்தையும் தற்போதைய பெயர்வெளியில் இறக்குமதி செய்கிறது.\n"
"இது கண்ணுக்கு தெரியாத அறியப்படாத மாறிகளின் தொகுப்பை உருவாக்குகிறது.\n"
"குறியீட்டைப் படிப்பதும் புரிந்துகொள்வதும், things எங்கிருந்து வருகின்றன என்பதைப் பார்ப்பதும் கடினமாக்குகிறது.\n"
"\n"
"இந்த வகையான இறக்குமதியைத் தவிர்த்து, உங்களுக்குத் தேவையான பெயர்களை வெளிப்படையாக இறக்குமதி செய்யவும்."

#: 
msgid "linting_messages.pyflakes.IsLiteral.message_format"
msgstr "**`is` எழுத்தியல்பான ஒப்பிடுதல்**\n"
"\n"
"ஒரு எழுத்துடன் (எ.கா. சரம் அல்லது எண்) ஒப்பிடுவதற்கு `is`/`is not` இயக்கியைப் பயன்படுத்தியுள்ளீர்கள்.\n"
"நீங்கள் `==` / `!=` இயக்கியைப் பயன்படுத்தியிருக்க வேண்டும்.\n"
"\n"
"இரண்டு வெளிப்பாடுகள் ஒரே பொருளைக் குறிப்பிடுகின்றனவா என்பதை `is` இயக்கி சரிபார்க்கிறது.\n"
"நீங்கள் அவற்றை அரிதாகவே பயன்படுத்த விரும்புகிறீர்கள், நிச்சயமாக சரங்கள் மற்றும் எண்கள் போன்ற அடிப்படை தரவு வகைகளுக்கு அல்ல.\n"
"அந்த சமயங்களில் அவை சில சமயங்களில் வேலை செய்வது போல் தோன்றும் (எ.கா. சிறிய எண்ணிக்கையில்) மற்ற சந்தர்ப்பங்களில்\n"
"மர்மமான முறையில் தோல்வியடையும்."

#: 
msgid "linting_messages.pyflakes.MultiValueRepeatedKeyLiteral.message_format"
msgstr "**அகராதி விசை `{0}` வெவ்வேறு மதிப்புகளுடன் மீண்டும் வருகிறது**\n"
"\n"
"ஒரு அகராதியில் ஒரே விசைக்கு பல உள்ளீடுகள் இருக்க முடியாது.\n"
"உங்கள் குறியீட்டை மீண்டும் சரிபார்த்து, மீண்டும் மீண்டும் வரும் விசையை தனிப்பட்டதாக மாற்றவும்."

#: 
msgid "linting_messages.pyflakes.RedefinedWhileUnused.message_format"
msgstr "** `{0}` ஐப் பயன்படுத்தாமல் மறுவரையறை செய்தீர்கள்**\n"
"\n"
"நீங்கள் `{1}` வரியில் `{0}` வரையறுத்தீர்கள், ஆனால் அதைப் பயன்படுத்துவதற்கு முன்பு,\n"
"அசல் வரையறையை மேலெழுதும்.\n"
"\n"
"பொதுவாக உங்கள் செயல்பாடுகள் மற்றும் வகுப்புகள் வெவ்வேறு பெயர்களைக் கொண்டிருக்க வேண்டும்.\n"
"நீங்கள் வரையறுக்கும் அனைத்தையும் பயன்படுத்துகிறீர்களா என்பதைச் சரிபார்க்கவும், எ.கா. உங்கள் செயல்பாடுகளை நீங்கள் அழைத்தீர்கள்."

#: 
msgid "linting_messages.pyflakes.UnusedImport.message_format"
msgstr "**பயன்படுத்தாத இறக்குமதி `{0}`**\n"
"\n"
"நீங்கள் `{0}` ஐ இறக்குமதி செய்தீர்கள் ஆனால் அதைப் பயன்படுத்தவில்லை.அதைப் பயன்படுத்த மறந்துவிட்டீர்களா?\n"
"ஒருவேளை நீங்கள் அதன் இடத்தில் தவறான மாறியைப் பயன்படுத்தியிருக்கிறீர்களா? உங்களுக்கு இறக்குமதி தேவையில்லை என்றால், அதை முழுவதுமாக அகற்றவும்."

#: 
msgid "linting_messages.pyflakes.UnusedVariable.message_format"
msgstr "**பயன்படுத்தப்படாத மாறி `{0}`**\n"
"\n"
"நீங்கள் `{0}` மாறியை வரையறுத்துள்ளீர்கள் ஆனால் அதைப் பயன்படுத்தவில்லை. அதைப் பயன்படுத்த மறந்துவிட்டீர்களா?\n"
"ஒருவேளை நீங்கள் அதன் இடத்தில் தவறான மாறியைப் பயன்படுத்தியிருக்கிறீர்களா? உங்களுக்கு இது தேவையில்லை என்றால், அதை முழுவதுமாக அகற்றவும்."

#. Special choice at the end of all output prediction multiple choice questions
#: 
msgid "output_predictions.Error"
msgstr "பிழை"

#. https://futurecoder.io/course/#AddingStrings
#: 
msgid "pages.AddingStrings.title"
msgstr "சரங்களைச் சேர்த்தல்"

#. https://futurecoder.io/course/#BasicForLoopExercises
#: 
msgid "pages.BasicForLoopExercises.title"
msgstr "சுழல் பயிற்சிகளுக்கான அடிப்படை"

#. https://futurecoder.io/course/#BasicTerminology
#: 
msgid "pages.BasicTerminology.title"
msgstr "அடிப்படை சொற்களஞ்சியம்"

#. https://futurecoder.io/course/#BuildingNewLists
#: 
msgid "pages.BuildingNewLists.title"
msgstr "புதிய பட்டியல்களை உருவாக்குதல்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.hello_plus_equals
#: 
msgid "pages.BuildingUpStrings.steps.hello_plus_equals.output_prediction_choices.0"
msgstr "Hello\n"
"Hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.hello_plus_equals
#: 
msgid "pages.BuildingUpStrings.steps.hello_plus_equals.output_prediction_choices.1"
msgstr "Hello\n"
"Hello!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.hello_plus_equals
#: 
msgid "pages.BuildingUpStrings.steps.hello_plus_equals.output_prediction_choices.2"
msgstr "Hello!\n"
"Hello!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.0"
msgstr "-\n"
"W\n"
"-\n"
"o\n"
"-\n"
"r\n"
"-\n"
"l\n"
"-\n"
"d"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.1"
msgstr "-W\n"
"-o\n"
"-r\n"
"-l\n"
"-d"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.2"
msgstr "-World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.3"
msgstr "-W-o-r-l-d"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.4"
msgstr "-W\n"
"-Wo\n"
"-Wor\n"
"-Worl\n"
"-World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.5"
msgstr "-World\n"
"-Worl\n"
"-Wor\n"
"-Wo\n"
"-W"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.6"
msgstr "-World\n"
"-World\n"
"-World\n"
"-World\n"
"-World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.7"
msgstr "-World\n"
"--World\n"
"---World\n"
"----World\n"
"-----World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_missing_last_line
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_missing_last_line.output_prediction_choices.0"
msgstr "-W\n"
"-Wo\n"
"-Wor\n"
"-Worl\n"
"-World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_missing_last_line
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_missing_last_line.output_prediction_choices.1"
msgstr "-Wo\n"
"-Wor\n"
"-Worl\n"
"-World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.BuildingUpStrings.steps.name_triangle_missing_last_line
#: 
msgid "pages.BuildingUpStrings.steps.name_triangle_missing_last_line.output_prediction_choices.2"
msgstr "-\n"
"-W\n"
"-Wo\n"
"-Wor\n"
"-Worl"

#. https://futurecoder.io/course/#BuildingUpStrings
#: 
msgid "pages.BuildingUpStrings.title"
msgstr "சரங்களை உருவாக்குதல்"

#. https://futurecoder.io/course/#BuildingUpStringsExercises
#: 
msgid "pages.BuildingUpStringsExercises.title"
msgstr "சரங்களை உருவாக்குதல் பயிற்சிகள்"

#. https://futurecoder.io/course/#CallingFunctionsTerminology
#: 
msgid "pages.CallingFunctionsTerminology.title"
msgstr "சொற்களஞ்சியம்: செயல்பாடுகள் மற்றும் முறைகளை அழைப்பது"

#. https://futurecoder.io/course/#CallingFunctionsWithinFunctions
#: 
msgid "pages.CallingFunctionsWithinFunctions.title"
msgstr "செயல்பாடுகளுக்குள் அழைப்பு செயல்பாடுகள்"

#. https://futurecoder.io/course/#CombiningAndAndOr
#: 
msgid "pages.CombiningAndAndOr.title"
msgstr "`and` மற்றும் `or` இணைத்தல்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.0"
msgstr "Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.2"
msgstr "Hello World!!!!!!!!!!!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.3"
msgstr "!!!!!!!!!!!Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.4"
msgstr "Hello World!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.5"
msgstr "!Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.6"
msgstr "!Hello World!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.7"
msgstr "H!e!l!l!o! !W!o!r!l!d!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.CombiningCompoundStatements.steps.for_inside_if
#: 
msgid "pages.CombiningCompoundStatements.steps.for_inside_if.output_prediction_choices.8"
msgstr "!H!e!l!l!o! !W!o!r!l!d"

#. https://futurecoder.io/course/#CombiningCompoundStatements
#: 
msgid "pages.CombiningCompoundStatements.title"
msgstr "கூட்டு அறிக்கைகளை இணைத்தல்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you
#: 
msgid "pages.DefiningFunctions.steps.how_are_you.output_prediction_choices.0"
msgstr "Hello Alice!\n"
"How are you?\n"
"Hello Bob!\n"
"How are you?"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you
#: 
msgid "pages.DefiningFunctions.steps.how_are_you.output_prediction_choices.1"
msgstr "Hello Alice!\n"
"Hello Bob!\n"
"How are you?"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.how_are_you
#: 
msgid "pages.DefiningFunctions.steps.how_are_you.output_prediction_choices.2"
msgstr "Hello Alice!\n"
"How are you?\n"
"Hello Bob!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_many
#: 
msgid "pages.DefiningFunctions.steps.print_many.output_prediction_choices.2"
msgstr "Hello\n"
"Hello\n"
"Hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_many
#: 
msgid "pages.DefiningFunctions.steps.print_many.output_prediction_choices.3"
msgstr "Hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.DefiningFunctions.steps.print_many
#: 
msgid "pages.DefiningFunctions.steps.print_many.output_prediction_choices.4"
msgstr "H\n"
"e\n"
"l\n"
"l\n"
"o"

#. https://futurecoder.io/course/#DefiningFunctions
#: 
msgid "pages.DefiningFunctions.title"
msgstr "செயல்பாடுகளை வரையறுத்தல்"

#. https://futurecoder.io/course/#EqualsVsIs
#: 
msgid "pages.EqualsVsIs.title"
msgstr "`==` எதிராக `is`, மற்றும் ஒரு மதிப்புக்கு பல பெயர்கள்"

#. https://futurecoder.io/course/#FunctionsAndMethodsForLists
#: 
msgid "pages.FunctionsAndMethodsForLists.title"
msgstr "பட்டியல்களுக்கான செயல்பாடுகள் மற்றும் முறைகள்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.index_error
#: 
msgid "pages.GettingElementsAtPosition.steps.index_error.program"
msgstr "words[4]"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_subscripting
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_subscripting.program"
msgstr "words = ['This', 'is', 'a', 'list']\n"
"\n"
"print(words[0])\n"
"print(words[1])\n"
"print(words[2])\n"
"print(words[3])"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_len
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.output_prediction_choices.0"
msgstr "This\n"
"is\n"
"a\n"
"list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_len
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.output_prediction_choices.2"
msgstr "0\n"
"This\n"
"1\n"
"is\n"
"2\n"
"a\n"
"3\n"
"list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_len
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.output_prediction_choices.3"
msgstr "This\n"
"0\n"
"is\n"
"1\n"
"a\n"
"2\n"
"list\n"
"3"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_len
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.output_prediction_choices.4"
msgstr "0\n"
"1\n"
"2\n"
"3\n"
"This\n"
"is\n"
"a\n"
"list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_len
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.output_prediction_choices.5"
msgstr "This\n"
"is\n"
"a\n"
"list\n"
"0\n"
"1\n"
"2\n"
"3"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_len
#: 
msgid "pages.GettingElementsAtPosition.steps.range_len.program"
msgstr "words = ['This', 'is', 'a', 'list']\n"
"indices = range(4)\n"
"\n"
"for index in indices:\n"
"    print(index)\n"
"    print(words[index])"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.title"
msgstr "ஒரு நிலையில் உள்ள உறுப்புகளைப் பெறுதல், `range()`, மற்றும் `len()`"

#. https://futurecoder.io/course/#HowToFindInformationWithGoogleAndMore
#: 
msgid "pages.HowToFindInformationWithGoogleAndMore.title"
msgstr "கூகுள் மூலம் தகவல்களை எவ்வாறு கண்டறிவது மற்றும் பல"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.undefined_char
#: 
msgid "pages.IfAndElse.steps.undefined_char.output_prediction_choices.0"
msgstr "Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.undefined_char
#: 
msgid "pages.IfAndElse.steps.undefined_char.output_prediction_choices.1"
msgstr "Hello World!"

#. https://futurecoder.io/course/#IfAndElse
#: 
msgid "pages.IfAndElse.title"
msgstr "`if` மற்றும் `else`"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.mismatched_indentations
#: 
msgid "pages.Indentation.steps.mismatched_indentations.program"
msgstr "for character in name:\n"
"    print(character)\n"
"  print('---')"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.Indentation.steps.missing_indentation
#: 
msgid "pages.Indentation.steps.missing_indentation.program"
msgstr "for character in name:\n"
"print(character)"

#. https://futurecoder.io/course/#Indentation
#: 
msgid "pages.Indentation.title"
msgstr "உள்தள்ளல்"

#. https://futurecoder.io/course/#InteractiveProgramsWithInput
#: 
msgid "pages.InteractiveProgramsWithInput.title"
msgstr "`input()` உடன் ஊடாடும் நிரல்கள்"

#. https://futurecoder.io/course/#IntroducingAnd
#: 
msgid "pages.IntroducingAnd.title"
msgstr "`and` அறிமுகம்"

#. https://futurecoder.io/course/#IntroducingBirdseye
#: 
msgid "pages.IntroducingBirdseye.title"
msgstr "`birdseye` மூலம் திட்டங்களைப் புரிந்துகொள்வது"

#. https://futurecoder.io/course/#IntroducingElif
#: 
msgid "pages.IntroducingElif.title"
msgstr "`elif` அறிமுகம்"

#. https://futurecoder.io/course/#IntroducingForLoops
#: 
msgid "pages.IntroducingForLoops.title"
msgstr "சுழல்களுக்கான அறிமுகம்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#: 
msgid "pages.IntroducingFstrings.steps.concatenate_string_number.output_prediction_choices.0"
msgstr "\"Hello \" + name + \". You are \" + age + \" years old.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#: 
msgid "pages.IntroducingFstrings.steps.concatenate_string_number.output_prediction_choices.1"
msgstr "Hello name. You are age years old."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#: 
msgid "pages.IntroducingFstrings.steps.concatenate_string_number.output_prediction_choices.2"
msgstr "Hello Alice. You are 20 years old."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.concatenate_string_number
#: 
msgid "pages.IntroducingFstrings.steps.concatenate_string_number.output_prediction_choices.3"
msgstr "Hello 'Alice'. You are 20 years old."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.0"
msgstr "f\"{name} went to {meal} with {friend}.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.1"
msgstr "\"{name} went to {meal} with {friend}.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.2"
msgstr "{name} went to {meal} with {friend}."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.3"
msgstr "'name' went to 'meal' with 'friend'."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.4"
msgstr "name went to meal with friend."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.5"
msgstr "\"Alice\" went to \"lunch\" with 'Bob'."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.6"
msgstr "'Alice' went to 'lunch' with 'Bob'."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.7"
msgstr "\"Alice went to lunch with Bob.\""

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingFstrings.steps.introduce_f_strings
#: 
msgid "pages.IntroducingFstrings.steps.introduce_f_strings.output_prediction_choices.8"
msgstr "Alice went to lunch with Bob."

#. https://futurecoder.io/course/#IntroducingFstrings
#: 
msgid "pages.IntroducingFstrings.title"
msgstr "f-சரங்கள்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_example
#: 
msgid "pages.IntroducingIfStatements.steps.excited_example.output_prediction_choices.0"
msgstr "Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_example
#: 
msgid "pages.IntroducingIfStatements.steps.excited_example.output_prediction_choices.1"
msgstr "Hello World!"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_false_example
#: 
msgid "pages.IntroducingIfStatements.steps.excited_false_example.output_prediction_choices.0"
msgstr "Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingIfStatements.steps.excited_false_example
#: 
msgid "pages.IntroducingIfStatements.steps.excited_false_example.output_prediction_choices.1"
msgstr "Hello World!"

#. https://futurecoder.io/course/#IntroducingIfStatements
#: 
msgid "pages.IntroducingIfStatements.title"
msgstr "If அறிக்கைகள் அறிமுகம்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingLists.steps.first_list
#: 
msgid "pages.IntroducingLists.steps.first_list.program"
msgstr "words = ['This', 'is', 'a', 'list']\n"
"\n"
"for word in words:\n"
"    print(word)"

#. https://futurecoder.io/course/#IntroducingLists
#: 
msgid "pages.IntroducingLists.title"
msgstr "பட்டியல்கள் ஒரு அறிமுகம்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.0"
msgstr "hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.1"
msgstr "there"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.10"
msgstr "a"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.2"
msgstr "how"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.3"
msgstr "are"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.4"
msgstr "you"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.5"
msgstr "['hello', 'there']"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.6"
msgstr "['how', 'are', 'you']"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.7"
msgstr "h"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.8"
msgstr "t"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.output_prediction_choices.9"
msgstr "e"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingNestedLists.steps.first_nested_list_example
#: 
msgid "pages.IntroducingNestedLists.steps.first_nested_list_example.program"
msgstr "strings = [['hello', 'there'], ['how', 'are', 'you']]\n"
"print(strings[1][0])"

#. https://futurecoder.io/course/#IntroducingNestedLists
#: 
msgid "pages.IntroducingNestedLists.title"
msgstr "உள்ளமைக்கப்பட்ட பட்டியல்களை அறிமுகப்படுத்துகிறோம்"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#: 
msgid "pages.IntroducingNestedLoops.title"
msgstr "உள்ளமைக்கப்பட்ட சுழல்களை அறிமுகப்படுத்துகிறது"

#. https://futurecoder.io/course/#IntroducingNotPage
#: 
msgid "pages.IntroducingNotPage.title"
msgstr "`not` என்பதை அறிமுகப்படுத்துகிறது"

#. https://futurecoder.io/course/#IntroducingOr
#: 
msgid "pages.IntroducingOr.title"
msgstr "`or` என்பதை அறிமுகப்படுத்துகிறது"

#. https://futurecoder.io/course/#IntroducingStrings
#: 
msgid "pages.IntroducingStrings.title"
msgstr "சரங்களை அறிமுகப்படுத்துகிறது"

#. https://futurecoder.io/course/#IntroducingTheShell
#: 
msgid "pages.IntroducingTheShell.title"
msgstr "ஓடு அறிமுகம்"

#. https://futurecoder.io/course/#IntroducingTicTacToe
#: 
msgid "pages.IntroducingTicTacToe.title"
msgstr "வெற்றியாளர்களுக்கான பலகையைச் சரிபார்க்கிறது"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.sunshine_undefined_check
#: 
msgid "pages.IntroducingVariables.steps.sunshine_undefined_check.output_prediction_choices.0"
msgstr "sunshine"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.sunshine_undefined_check
#: 
msgid "pages.IntroducingVariables.steps.sunshine_undefined_check.output_prediction_choices.1"
msgstr "'sunshine'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.sunshine_undefined_check
#: 
msgid "pages.IntroducingVariables.steps.sunshine_undefined_check.output_prediction_choices.2"
msgstr "Hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.sunshine_undefined_check
#: 
msgid "pages.IntroducingVariables.steps.sunshine_undefined_check.output_prediction_choices.3"
msgstr "'Hello'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.word_string_check
#: 
msgid "pages.IntroducingVariables.steps.word_string_check.output_prediction_choices.0"
msgstr "word"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.word_string_check
#: 
msgid "pages.IntroducingVariables.steps.word_string_check.output_prediction_choices.1"
msgstr "'word'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.word_string_check
#: 
msgid "pages.IntroducingVariables.steps.word_string_check.output_prediction_choices.2"
msgstr "Hello"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IntroducingVariables.steps.word_string_check
#: 
msgid "pages.IntroducingVariables.steps.word_string_check.output_prediction_choices.3"
msgstr "'Hello'"

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.title"
msgstr "மாறிகள் அறிமுகம்"

#. https://futurecoder.io/course/#LoopingOverNestedLists
#: 
msgid "pages.LoopingOverNestedLists.title"
msgstr "உள்ளமைக்கப்பட்ட பட்டியல்கள் மீது சுழல"

#. https://futurecoder.io/course/#MakingTheBoard
#: 
msgid "pages.MakingTheBoard.title"
msgstr "பலகையை உருவாக்குதல்"

#. https://futurecoder.io/course/#ModifyingWhileIterating
#: 
msgid "pages.ModifyingWhileIterating.title"
msgstr "மறு செய்கையின் போது மாற்றுதல்"

#. https://futurecoder.io/course/#MoreListFunctionsAndMethods
#: 
msgid "pages.MoreListFunctionsAndMethods.title"
msgstr "மேலும் பட்டியல் செயல்பாடுகள் மற்றும் முறைகள்"

#. https://futurecoder.io/course/#MoreOnReturn
#: 
msgid "pages.MoreOnReturn.title"
msgstr "`return` என்பது செயல்பாட்டு அழைப்பை முடிக்கிறது"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.MultiLineExpressions.steps.invalid_multiline
#: 
msgid "pages.MultiLineExpressions.steps.invalid_multiline.program"
msgstr "is_friend = name == \"Alice\" or\n"
"            name == \"Bob\""

#. https://futurecoder.io/course/#MultiLineExpressions
#: 
msgid "pages.MultiLineExpressions.title"
msgstr "பல வரி அறிக்கைகள்"

#. https://futurecoder.io/course/#NavigatingShellHistory
#: 
msgid "pages.NavigatingShellHistory.title"
msgstr "ஓடு வரலாற்றை வழிநடத்துகிறது"

#. https://futurecoder.io/course/#NestedListAssignment
#: 
msgid "pages.NestedListAssignment.title"
msgstr "உள்ளமைக்கப்பட்ட பட்டியல் ஒதுக்கீடு: பலகையில் நகர்வுகளை விளையாடுதல்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string
#: 
msgid "pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.program"
msgstr "assert_equal(\n"
"    format_board([\n"
"        ['X', 'O', 'X'],\n"
"        [' ', 'O', 'O'],\n"
"        [' ', 'X', ' ']\n"
"    ]),\n"
"    \"XOX\n"
"      OO\n"
"      X \"\n"
")"

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#: 
msgid "pages.NewlinesAndFormatBoard.title"
msgstr "புதிய வரி எழுத்து, `format_board`"

#. https://futurecoder.io/course/#OtherComparisonOperators
#: 
msgid "pages.OtherComparisonOperators.title"
msgstr "பிற ஒப்பீட்டு இயக்கிகள்"

#. https://futurecoder.io/course/#ReturningValuesFromFunctions
#: 
msgid "pages.ReturningValuesFromFunctions.title"
msgstr "செயல்பாடுகளிலிருந்து மதிப்புகளைத் திரும்பப் பெறுதல்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.program"
msgstr "print('Alice's Diner')"

#. https://futurecoder.io/course/#SingleAndDoubleQuotesInStrings
#: 
msgid "pages.SingleAndDoubleQuotesInStrings.title"
msgstr "சரங்களில் ஒற்றை மற்றும் இரட்டை மேற்கோள்கள்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_doesnt_change
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.output_prediction_choices.0"
msgstr "Hello World\n"
"Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_doesnt_change
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.output_prediction_choices.1"
msgstr "Hello World\n"
"Goodbye World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_doesnt_change
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_doesnt_change.output_prediction_choices.2"
msgstr "Goodbye World\n"
"Goodbye World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.output_prediction_choices.0"
msgstr "sentence"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.output_prediction_choices.1"
msgstr "word + ' ' + name"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.output_prediction_choices.2"
msgstr "Hello + ' ' + World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.output_prediction_choices.3"
msgstr "'Hello' + ' ' + 'World'"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.output_prediction_choices.4"
msgstr "Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name
#: 
msgid "pages.StoringCalculationsInVariables.steps.sentence_equals_word_plus_name.output_prediction_choices.5"
msgstr "'Hello World'"

#. https://futurecoder.io/course/#StoringCalculationsInVariables
#: 
msgid "pages.StoringCalculationsInVariables.title"
msgstr "மாறிகளில் கணக்கீடுகளை சேமிப்பது"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_count_index
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.string_count_index.program"
msgstr "string = 'feed the dog and the cat'\n"
"print(string.count('the'))\n"
"print(string.index('the'))"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.StringMethodsUnderstandingMutation.steps.string_in_step
#: 
msgid "pages.StringMethodsUnderstandingMutation.steps.string_in_step.program"
msgstr "print('the' in 'feed the dog and the cat')"

#. https://futurecoder.io/course/#StringMethodsUnderstandingMutation
#: 
msgid "pages.StringMethodsUnderstandingMutation.title"
msgstr "சரம் முறைகள் மற்றும் மாறாத தன்மை"

#. https://futurecoder.io/course/#TestingFunctions
#: 
msgid "pages.TestingFunctions.title"
msgstr "சோதனை செயல்பாடுகள்"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.TheEqualityOperator.steps.equality_vs_assignment
#: 
msgid "pages.TheEqualityOperator.steps.equality_vs_assignment.program"
msgstr "print(1 + 2 = 3)"

#. https://futurecoder.io/course/#TheEqualityOperator
#: 
msgid "pages.TheEqualityOperator.title"
msgstr "சமத்துவ இயக்கி"

#. https://futurecoder.io/course/#TheFullTicTacToeGame
#: 
msgid "pages.TheFullTicTacToeGame.title"
msgstr "முழு டிக்-டாக்-டோ கேம்"

#. https://futurecoder.io/course/#Types
#: 
msgid "pages.Types.title"
msgstr "வகைகள்"

#. https://futurecoder.io/course/#UnderstandingProgramsWithPythonTutor
#: 
msgid "pages.UnderstandingProgramsWithPythonTutor.title"
msgstr "பைதான் ஆசிரியர் மூலம் நிரல்களைப் புரிந்துகொள்வது"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail.output_prediction_choices.0"
msgstr "Hello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail.output_prediction_choices.1"
msgstr "ello World"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail.output_prediction_choices.2"
msgstr "Hello Worl"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail.output_prediction_choices.3"
msgstr "H"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.UnderstandingProgramsWithSnoop.steps.print_tail
#: 
msgid "pages.UnderstandingProgramsWithSnoop.steps.print_tail.output_prediction_choices.4"
msgstr "d"

#. https://futurecoder.io/course/#UnderstandingProgramsWithSnoop
#: 
msgid "pages.UnderstandingProgramsWithSnoop.title"
msgstr "`snoop` மூலம் நிரல்களைப் புரிந்துகொள்வது"

#. https://futurecoder.io/course/#UsingBreak
#: 
msgid "pages.UsingBreak.title"
msgstr "சுழலை முன்கூட்டியே முடிக்க `break`ஐப் பயன்படுத்துதல்"

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.title"
msgstr "மாறிகள் மற்றும் `print()` ஆகியவற்றைப் பயன்படுத்துதல்"

#. https://futurecoder.io/course/#WritingPrograms
#: 
msgid "pages.WritingPrograms.title"
msgstr "எழுதும் திட்டங்கள்"

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.comparing_strings
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.0.text"
msgstr "இது முந்தைய படியைப் போலவே உள்ளது, எண்களுக்குப் பதிலாக சரங்களைப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.comparing_strings
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.1.text"
msgstr "நீங்கள் ஓட்டில் ஒரு சிறிய, எளிமையான வரியை மட்டுமே இயக்க வேண்டும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.comparing_strings
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.2.text"
msgstr "ஓட்டில் பல வரிகளை இயக்குவதன் மூலமும் இதைச் செய்யலாம், முதலில் மாறிகளை வரையறுத்து பின்னர் அவற்றை ஒப்பிடலாம், ஆனால் நீங்கள் தேவையில்லை, இது மாறிகள் இல்லாமல் செய்யப்படலாம்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.comparing_strings
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.3.text"
msgstr "பாடத்திட்டத்தின் தொடக்கத்தில் ஓட்டில் இரண்டு சரங்களைச் சேர்த்தது நினைவிருக்கிறதா?"

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.comparing_strings
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.4.text"
msgstr "எடுத்துக்காட்டாக, `'hello' + 'world'` செய்தோம்"

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.comparing_strings
#: 
msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.5.text"
msgstr "இந்த பயிற்சிக்கு நீங்கள் அடிப்படையில் செய்ய வேண்டும், ஆனால் அதற்கு பதிலாக அவற்றை ஒப்பிடுங்கள்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.introducing_less_than
#: 
msgid "pages.OtherComparisonOperators.steps.introducing_less_than.hints.0.text"
msgstr "நீங்கள் ஓட்டில் ஒரு சிறிய, எளிமையான வரியை மட்டுமே இயக்க வேண்டும்."

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.introducing_less_than
#: 
msgid "pages.OtherComparisonOperators.steps.introducing_less_than.hints.1.text"
msgstr "ஓட்டில் இரண்டு எண்களை எவ்வாறு சேர்ப்பீர்கள்?"

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.introducing_less_than
#: 
msgid "pages.OtherComparisonOperators.steps.introducing_less_than.hints.2.text"
msgstr "எடுத்துக்காட்டாக, `123 + 456` ஐ முயற்சிக்கவும்"

#. https://futurecoder.io/course/#OtherComparisonOperators
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.OtherComparisonOperators.steps.introducing_less_than
#: 
msgid "pages.OtherComparisonOperators.steps.introducing_less_than.hints.3.text"
msgstr "இந்த பயிற்சிக்கு நீங்கள் அடிப்படையில் செய்ய வேண்டும், ஆனால் அதற்கு பதிலாக அவற்றை ஒப்பிடுங்கள்."

#: 
msgid "chapters.a_bit_more_about_strings.title"
msgstr "சரங்களைப் பற்றி இன்னும் கொஞ்சம்"

#: 
#, fuzzy
msgid "chapters.boolean operators.title"
msgstr "பூலியன் இயக்கிகள்"

#: 
#, fuzzy
msgid "chapters.for_loops.title"
msgstr "For சுழல்கள்"

#: 
msgid "chapters.functions.title"
msgstr "செயல்பாடுகள்"

#: 
#, fuzzy
msgid "chapters.if_statements.title"
msgstr "If அறிக்கைகள்"

#: 
msgid "chapters.lists.title"
msgstr "பட்டியல்கள்"

#: 
msgid "chapters.nested_loops.title"
msgstr "உள்ளமைக்கப்பட்ட சுழல்கள்"

#: 
msgid "chapters.string_basics.title"
msgstr "சரம் அடிப்படைகள்"

#: 
#, fuzzy
msgid "chapters.the_shell.title"
msgstr "ஓடு"

#: 
msgid "chapters.tic_tac_toe_project.title"
msgstr "டிக் டாக் டோ திட்டம்"

#: 
msgid "chapters.variables.title"
msgstr "மாறிகள்"

#. https://futurecoder.io/course/#IntroducingNestedLoops
#: 
msgid "pages.IntroducingNestedLoops.steps.times_table_exercise.special_messages.multiply_with_x.text"
msgstr "எண்களைப் பெருக்க, `*` ஐப் பயன்படுத்தவும்"

#. https://futurecoder.io/course/#IntroducingTheShell
#. 
#.     # __code0__:
#.     3 * 4
#: 
msgid "pages.IntroducingTheShell.steps.more_calculation.special_messages.multiply_with_x.text"
msgstr "நான் ஒரு 'x' பார்க்கிறேன். நீங்கள் பெருக்க முயற்சிக்கிறீர்கள் என்றால், ஒரு நட்சத்திரத்தைப் பயன்படுத்தவும், எ.கா:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#IntroducingVariables
#: 
msgid "pages.IntroducingVariables.steps.word_check.special_messages.bad_word.text"
msgstr "அச்சச்சோ, நாங்கள் தொடர்வதற்கு முன் நீங்கள் `word = 'Hello'` அமைக்க வேண்டும்."

#. https://futurecoder.io/course/#NewlinesAndFormatBoard
#: 
msgid "pages.NewlinesAndFormatBoard.steps.discovering_newline.special_messages.bad_string.text"
msgstr "அச்சச்சோ, `string` சரியான மதிப்பைக் கொண்டிருக்கவில்லை. முந்தைய படியிலிருந்து நிரலை மீண்டும் இயக்கவும்."

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.steps.word_plus_name.special_messages.bad_word.text"
msgstr "அச்சச்சோ, நாம் தொடர்வதற்கு முன் நீங்கள் `word = 'Hello'` அமைக்க வேண்டும்."

#. https://futurecoder.io/course/#UsingVariables
#: 
msgid "pages.UsingVariables.steps.word_plus_name_with_space.special_messages.bad_word.text"
msgstr "அச்சச்சோ, நாங்கள் தொடர்வதற்கு முன் நீங்கள் `word = 'Hello'` அமைக்க வேண்டும்."

#: 
msgid "misc_terms.blank_result"
msgstr "<ஒன்றுமில்லை>"

#: 
msgid "misc_terms.case_sensitive"
msgstr "பைதான் வழக்கு உணர்திறன்! அதாவது சிறிய மற்றும் பெரிய எழுத்துக்கள் முக்கியம் மற்றும் அவற்றை மாற்றுவது நிரலின் பொருளை மாற்றுகிறது. `'hello'` மற்றும் `'Hello'` என்ற சரங்களும் வேறுபட்டவை, அதே போல் மாறி பெயர்களான `word` மற்றும் `Word`."

#: 
msgid "misc_terms.code_should_start_like"
msgstr "உங்கள் குறியீடு இப்படித் தொடங்க வேண்டும்: \n"
"\n"
"{expected_start}\n"
""

#: 
msgid "misc_terms.copy_button"
msgstr "நகலெடுக்கவும்"

#: 
msgid "misc_terms.disallowed_default_label"
msgstr "{max_count} {label} ஐ விட அதிகம்"

#: 
msgid "misc_terms.disallowed_default_message"
msgstr "நல்லது, நீங்கள் ஒரு தீர்வைக் கண்டுபிடித்தீர்கள்! இருப்பினும், இந்தப் பயிற்சிக்கும் உங்கள் கற்றலுக்கும், {label}ஐப் பயன்படுத்த உங்களுக்கு அனுமதி இல்லை."

#: 
msgid "misc_terms.expected_mode_birdseye"
msgstr "தொகுப்பானில் உங்கள் குறியீட்டைக் கொண்டு, `birdseye` பொத்தானைக் சொடுக்கவும்."

#: 
msgid "misc_terms.expected_mode_pythontutor"
msgstr "தொகுப்பானில் உங்கள் குறியீட்டைக் கொண்டு, பைதான் ஆசிரியர் பொத்தானைக் சொடுக்கவும்."

#: 
msgid "misc_terms.expected_mode_shell"
msgstr "உங்கள் குறியீட்டை நேரடியாக ஓட்டில் `>>>`வுக்கு பிறகு தட்டச்சு செய்து Enter ஐ அழுத்தவும்."

#: 
msgid "misc_terms.expected_mode_snoop"
msgstr "தொகுப்பானில் உங்கள் குறியீட்டைக் கொண்டு, `snoop` பொத்தானைக் சொடுக்கவும்."

#: 
msgid "misc_terms.incorrect_mode"
msgstr "குறியீடு சரியானது, ஆனால் நீங்கள் அறிவுறுத்தியபடி அதை இயக்கவில்லை."

#: 
msgid "misc_terms.internal_error"
msgstr "உள் பிழை"

#: 
msgid "misc_terms.invalid_inputs"
msgstr "உங்கள் உள்ளீட்டு மாறிகளின் மதிப்புகள் தவறானவை, உதாரணம் போன்ற மதிப்புகளைப் பயன்படுத்தி முயற்சிக்கவும்."

#: 
msgid "misc_terms.must_define_function"
msgstr "`{function_name}` செயல்பாட்டை நீங்கள் வரையறுக்க வேண்டும்"

#: 
msgid "misc_terms.no_more_test_inputs"
msgstr "இனி சோதனை உள்ளீடுகள் இல்லை - தீர்வு இப்போது முடிந்திருக்க வேண்டும்"

#: 
msgid "misc_terms.not_a_function"
msgstr "`{function_name}` ஒரு செயல்பாடு அல்ல."

#: 
msgid "misc_terms.q_wiz_debugger"
msgstr "நீங்கள் பிழைத்திருத்தியைப் பயன்படுத்துகிறீர்கள் என்பது மகிழ்ச்சி அளிக்கிறது! சிக்கலை நீங்களே தீர்ப்பது சிறந்தது. உங்களால் முடியாவிட்டால், கேள்வியை உருவாக்க 'இயக்கு' பொத்தானைப் பயன்படுத்தவும்."

#: 
msgid "misc_terms.q_wiz_final_message"
msgstr "நன்று! இதோ சில இறுதி உதவிக்குறிப்புகள்:\n"
"\n"
"- வெளியீடு உங்களுக்கு உள்ள சிக்கலைக் காட்டுகிறதே தவிர வேறொன்றைக் காட்டவில்லை என்பதை உறுதிப்படுத்தவும்.\n"
"- உங்கள் குறியீட்டை **குறைந்தபட்ச** எடுத்துக்காட்டுக்கு குறைக்கவும். சிக்கலுடன் நேரடியாக தொடர்பில்லாத எந்த குறியீட்டையும் அகற்றவும்.\n"
"- அது என்ன செய்கிறது என்பதைப் புரிந்துகொள்ள, உங்கள் குறியீட்டை `snoop`, `birdseye` மற்றும் பைதான் ஆசிரியர் பிழைத்திருத்தங்கள் மூலம் இயக்கவும்.\n"
"- உங்கள் பிரச்சனையை ஆன்லைனில் தேடுங்கள்.\n"
"- படிக்கவும் [ஒரு நல்ல கேள்வியை நான் எப்படிக் கேட்பது?](https://stackoverflow.com/help/how-to-ask)\n"
"\n"
"நீங்கள் உண்மையிலேயே தயாராக இருந்தால், கீழே உள்ளதை நகலெடுத்து கேள்வி இணையதளத்தில் ஒட்டவும்,\n"
"முதல் வரியை மாற்றவும் உங்கள் பிரச்சனையின் விளக்கத்துடன்  உள்ளிடவும். \n"
"\n"
"உங்கள் குறியீட்டை அல்லது எதிர்பார்க்கப்படும் வெளியீட்டை மாற்றலாம் மற்றும் கேள்வியை மீண்டும் உருவாக்க மீண்டும் இயக்கவும் என்பதைக் சொடுக்கவும்.\n"
"\n"
"    __copyable__\n"
"    *நீங்கள் என்ன செய்ய முயற்சிக்கிறீர்கள், ஏன் என்பதை விளக்குங்கள்*\n"
"\n"
"    இதோ எனது குறியீடு: \n"
"\n"
"{}\n"
"\n"
"    இது தான் முடிவு:\n"
"\n"
"{}\n"
"\n"
"    எதிர்பார்க்கப்படும் வெளியீடு:\n"
"\n"
"{}\n"
""

#: 
msgid "misc_terms.q_wiz_input_and_add"
msgstr "உங்கள் குறியீட்டின் மேலே\n"
"\n"
"    {list_line}\n"
"\n"
"ஐச் சேர்க்கவும்."

#: 
msgid "misc_terms.q_wiz_input_message_start"
msgstr "குறியீட்டைப் பற்றிய கேள்விகளைக் கேட்பதையும் பதிலளிப்பதையும் `input()` கடினமாக்குகிறது. அனைவரும் உடனடியாக குறியீட்டை இயக்கி, அதே முடிவுகளைப் பெறுவதற்கு, அழைப்புகளை உள்ளிடுவதற்கு சரங்களுடன் மாற்றவும்."

#: 
msgid "misc_terms.q_wiz_input_replace_with"
msgstr "மாற்றியமைக்கவும்: \n"
"\n"
"{original_lines}\n"
"\n"
"உடன்\n"
"\n"
"{replaced_lines}"

#: 
msgid "misc_terms.q_wiz_no_output"
msgstr "உங்கள் குறியீடு எதையும் வெளியிடவில்லை. சில `print()` அழைப்புகளைச் சேர்க்கவும், இதனால் குறைந்தபட்சம் அது *ஏதாவது* வெளியிடும். பிரச்சனை எங்குள்ளது என்பதை வாசகர்களுக்குக் காட்ட குறியீட்டைப் பயன்படுத்தவும்."

#: 
msgid "misc_terms.q_wiz_same_as_expected_output"
msgstr "உங்கள் வெளியீடு நீங்கள் எதிர்பார்த்த வெளியீடு போலவே உள்ளது! உங்கள் சிக்கல் இன்னும் இருந்தால், இரண்டு வெளியீடுகளும் பொருந்தாத வகையில் உங்கள் குறியீடு மற்றும்/அல்லது நீங்கள் எதிர்பார்க்கும் வெளியீட்டை சரிசெய்யவும். நீங்கள் விரும்பியபடி குறியீடு செயல்பட்டால் என்ன வித்தியாசமாக இருக்கும் என்பதை தெளிவுபடுத்தவும்."

#: 
msgid "misc_terms.signature_should_be"
msgstr "கையொப்பம் இருக்க வேண்டும்:\n"
"\n"
"    def {function_name}{needed_signature}:\n"
"\n"
"இப்படிஇல்லை: \n"
"\n"
"    def {function_name}{actual_signature}:"

#: 
msgid "misc_terms.syntax_error_at_line"
msgstr "வரிசையில்"

#: 
msgid "misc_terms.when_it_should_output"
msgstr "எப்போது வெளியிட வேண்டும்:"

#: 
msgid "misc_terms.your_code_outputs"
msgstr "உங்கள் குறியீடு வெளியீடுகள்:"

#: 
msgid "misc_terms.your_code_outputs_given_values"
msgstr "இந்த மதிப்புகள் கொடுக்கப்பட்டால்:\n"
"\n"
"{given_values}\n"
"\n"
"உங்கள் குறியீடு வெளியீடுகள்:"

#: 
msgid "pages.BuildingNewLists.steps.filter_numbers.disallowed.0.message"
msgstr "நல்லது, அது சரி! இருப்பினும், `+=` என்பதற்குப் பதிலாக `.append()` ஐப் பயன்படுத்த வேண்டும்."

#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box.disallowed.0.message"
msgstr "நல்லது, இந்த தீர்வு சரியானது! இருப்பினும், அதை மேம்படுத்த முடியும்.\n"
"நீங்கள் ஒரு சுழலை மட்டுமே பயன்படுத்த வேண்டும் - மேலும் பயன்படுத்துவது திறமையற்றது.\n"
"`-` மற்றும் `+` வரியைக் கொண்ட மாறியை நீங்கள் மீண்டும் பயன்படுத்தலாம்."

#: 
msgid "pages.BuildingUpStringsExercises.steps.name_box_2.disallowed.0.message"
msgstr "நல்லது, இந்த தீர்வு சரியானது!\n"
"நாங்கள் இதுவரை மறைக்காத உள்ளமை சுழலை (ஒரு சுழலுக்குள் ஒரு சுழல்) பயன்படுத்தியுள்ளீர்கள்!\n"
"இருப்பினும், இந்த வழக்கில் உள்ளமைக்கப்பட்ட சுழல் திறனற்றது.\n"
"நீங்கள் இடைவெளிகளைக் கொண்ட ஒரு மாறியை உருவாக்கலாம் மற்றும் ஒவ்வொரு வரியிலும் அதை மீண்டும் பயன்படுத்தலாம்."

#: 
msgid "pages.IntroducingOr.steps.AnExercise.disallowed.3.label"
msgstr "ஒப்பீடு சங்கிலி"

#: 
msgid "pages.IntroducingTicTacToe.steps.winner.disallowed.0.message"
msgstr "மூன்று செயல்பாடுகளை அழைப்பதன் மூலம் உங்கள் தீர்வு செயல்பட வேண்டும். `winner` தானே சுழல, சந்தா\n"
"போன்றவற்றைச் செய்யக்கூடாது. அது மிகக் குறுகியதாக இருக்க வேண்டும்.\n"
"\n"
"`row_winner` மற்றும் பிற செயல்பாடுகளை நகலெடுத்து, அவற்றை அப்படியே விடவும். அவர்களிடமிருந்து குறியீட்டை `winner` செயல்பாட்டிற்கு\n"
" நகலெடுக்க வேண்டாம், அந்த செயல்பாடுகளை அழைக்கவும்."

#: 
msgid "pages.Types.steps.fixing_type_errors_with_conversion.disallowed.0.label"
msgstr "f-சரங்கள்"

#. https://futurecoder.io/course/#MakingTheBoard
#: 
msgid "pages.MakingTheBoard.steps.fix_make_board.special_messages.not_separate.text"
msgstr "முடிவில் உள்ள துணைப்பட்டியல்கள் அனைத்தும் தனித்தனி பொருள்கள் அல்ல."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.indices_out_of_bounds
#. 
#. indices[4]
#. 
#. ------
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.printing_the_range
#. 
#. indices = range(4)
#. 
#. print(indices[0])
#. print(indices[1])
#. print(indices[2])
#. print(indices[3])
#: 
msgid "code_bits.indices"
msgstr "indices"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.indices_out_of_bounds.text"
msgstr "இப்போது ஓட்டில் `__program__` முயற்சிக்கவும்."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.output_prediction_choices.0"
msgstr "This\n"
"is\n"
"a\n"
"list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.output_prediction_choices.2"
msgstr "0\n"
"This\n"
"1\n"
"is\n"
"2\n"
"a\n"
"3\n"
"list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.output_prediction_choices.3"
msgstr "This\n"
"0\n"
"is\n"
"1\n"
"a\n"
"2\n"
"list\n"
"3"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.output_prediction_choices.4"
msgstr "0\n"
"1\n"
"2\n"
"3\n"
"This\n"
"is\n"
"a\n"
"list"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.output_prediction_choices.5"
msgstr "This\n"
"is\n"
"a\n"
"list\n"
"0\n"
"1\n"
"2\n"
"3"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.introducing_len_and_range
#: 
msgid "pages.GettingElementsAtPosition.steps.introducing_len_and_range.program"
msgstr "words = ['This', 'is', 'a', 'list']\n"
"indices = [0, 1, 2, 3]\n"
"\n"
"for index in indices:\n"
"    print(index)\n"
"    print(words[index])"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_indices_and_words
#: 
msgid "pages.GettingElementsAtPosition.steps.print_indices_and_words.hints.0.text"
msgstr "முன்பு நாம் `range(4)` பயன்படுத்தினோம் என்பதை நினைவில் கொள்ளவும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_indices_and_words
#: 
msgid "pages.GettingElementsAtPosition.steps.print_indices_and_words.hints.1.text"
msgstr "இந்த நேரத்தில், அது எந்த பட்டியலுக்கும் வேலை செய்ய வேண்டும். பட்டியலில் 5 கூறுகள் அல்லது 10 இருந்தால் என்ன செய்வது?"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_indices_and_words
#: 
msgid "pages.GettingElementsAtPosition.steps.print_indices_and_words.hints.2.text"
msgstr "நீங்கள் கற்றுக்கொண்ட இரண்டு செயல்பாடுகளையும் இணைக்கவும்!"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#.     # __code0__:
#.     [0, 1, 2, ..., len(words) - 2, len(words) - 1]
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.words
#: 
msgid "pages.GettingElementsAtPosition.steps.print_indices_and_words.text"
msgstr "எனவே பொதுவாக, செல்லுபடியாகும் குறியீடுகள்:\n"
"\n"
"__code0__\n"
"\n"
"இப்போது எந்த பட்டியலுடனும் வேலை செய்ய முந்தைய நிரலை சரிசெய்யலாம். `...` இடங்களை நிரப்பவும்:\n"
"\n"
"    __copyable__\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"\n"
"    for index in ...:\n"
"        print(index)\n"
"        print(words[index])\n"
"\n"
"கொடுக்கப்பட்ட எடுத்துக்காட்டு மதிப்பு `words` அது அச்சிட வேண்டும்:\n"
"\n"
"    0\n"
"    This\n"
"    1\n"
"    is\n"
"    2\n"
"    a\n"
"    3\n"
"    list"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_last_element
#: 
msgid "pages.GettingElementsAtPosition.steps.print_last_element.hints.0.text"
msgstr "பட்டியலின் கடைசி உறுப்பை அணுக, கடைசி நிலையின் அட்டவணை உங்களுக்குத் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_last_element
#: 
msgid "pages.GettingElementsAtPosition.steps.print_last_element.hints.1.text"
msgstr "பட்டியலில் 2 கூறுகள் இருந்தால், முதல் உறுப்பு குறியீட்டு 0 இல் உள்ளது, எனவே கடைசி உறுப்பு குறியீட்டு 1 இல் உள்ளது."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_last_element
#: 
msgid "pages.GettingElementsAtPosition.steps.print_last_element.hints.2.text"
msgstr "அதேபோல், பட்டியலில் 3 கூறுகள் இருந்தால், கடைசி உறுப்பு குறியீட்டு 2 இல் இருக்கும்."

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_last_element
#: 
msgid "pages.GettingElementsAtPosition.steps.print_last_element.hints.3.text"
msgstr "அந்த எண்களுக்கு இடையே ஒரு வடிவத்தைப் பார்க்கிறீர்களா? அதை எப்படி வெளிப்படுத்த முடியும்?"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.print_last_element
#: 
msgid "pages.GettingElementsAtPosition.steps.print_last_element.hints.4.text"
msgstr "எந்த நீளத்திற்கும் வேலை செய்யும் பொதுவான தீர்வை நீங்கள் கொண்டு வர முடியுமா?"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.print_last_element.text"
msgstr "பயிற்சி: காலியாக இல்லாத பட்டியலில் `words`, கடைசி உறுப்பை அச்சிடவும். எடுத்துக்காட்டாக, எனில்,\n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"\n"
"உங்கள் நிரல் `list` என அச்சிட வேண்டும்."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.printing_the_range
#: 
msgid "pages.GettingElementsAtPosition.steps.printing_the_range.output_prediction_choices.4"
msgstr "This\n"
"is\n"
"a\n"
"list"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#.     # __code0__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.GettingElementsAtPosition.steps.printing_the_range.text"
msgstr "நீங்கள் பார்க்க முடியும் என, முடிவு அதே தான். இதை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code0__"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.range_almost_the_same_as_list.text"
msgstr "`range(4)` என்பது `[0, 1, 2, 3]` ... கிட்டத்தட்ட. ஓட்டில் `__program__` ஐ முயற்சிக்கவும்."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_versus_list
#: 
msgid "pages.GettingElementsAtPosition.steps.range_versus_list.output_prediction_choices.0"
msgstr "range(4)"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_versus_list
#: 
msgid "pages.GettingElementsAtPosition.steps.range_versus_list.output_prediction_choices.1"
msgstr "range(0, 4)"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_versus_list
#: 
msgid "pages.GettingElementsAtPosition.steps.range_versus_list.output_prediction_choices.2"
msgstr "list(range(4))"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_versus_list
#: 
msgid "pages.GettingElementsAtPosition.steps.range_versus_list.output_prediction_choices.3"
msgstr "list(range(0, 4))"

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.range_versus_list
#: 
msgid "pages.GettingElementsAtPosition.steps.range_versus_list.output_prediction_choices.4"
msgstr "range(0, 1, 2, 3)"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#: 
msgid "pages.GettingElementsAtPosition.steps.range_versus_list.text"
msgstr "இது ஒருவேளை சற்று ஆச்சரியமாக இருக்கிறது. நீங்கள் ஆர்வமாக இருந்தால், `0` வரம்பின் தொடக்கத்தைக் குறிக்கிறது.\n"
"`0` என்பது இயல்புநிலை தொடக்கமாகும், எனவே `range(4)` என்பது `range(0, 4)`க்கு சமம்.\n"
"`4` என்பது வரம்பின் முடிவு, ஆனால் முடிவு எப்போதும் விலக்கப்படும், எனவே கடைசி மதிப்பு `3` ஆகும்.\n"
"நீங்கள் இப்போது குழப்பமாக இருந்தால், அதைப் பற்றி கவலைப்பட வேண்டாம்.\n"
"\n"
"`range(4)` உண்மையில் ஒரு பட்டியல் இல்லை என்பதற்கு ஒரு நல்ல காரணம் உள்ளது - இது நிரல்களை வேகமாகவும் திறமையாகவும் ஆக்குகிறது.\n"
"இப்போது அதை விளக்குவது மதிப்புக்குரியது அல்ல.\n"
"\n"
"ஆனால் நீங்கள் அதை எளிதாக பட்டியலாக மாற்றலாம்: ஓட்டில் `__program__` ஐ முயற்சிக்கவும்."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPosition.steps.using_len_first_time
#: 
msgid "pages.GettingElementsAtPosition.steps.using_len_first_time.program"
msgstr "words = ['This', 'is', 'a', 'list']\n"
"print(len(words))"

#. https://futurecoder.io/course/#GettingElementsAtPosition
#. 
#.     # __code0__:
#.     [0, 1, 2, ..., n - 2, n - 1]
#. 
#.     # __code1__:
#.     __program_indented__
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.__program_indented__
#: 
msgid "pages.GettingElementsAtPosition.steps.using_len_first_time.text"
msgstr "range ஐ மிகவும் பழக்கமான வடிவத்தில் பார்ப்பதற்கு இது ஒரு எடுத்துக்காட்டு.\n"
"நீங்கள் அதை ஒருபோதும் செய்யக்கூடாது.\n"
"\n"
"நீங்கள் அதிகமாக உணர்ந்தால், கவலைப்பட வேண்டாம்! நீங்கள் தெரிந்து கொள்ள வேண்டியது என்னவென்றால், `range(n)` பட்டியலுடன் மிகவும் ஒத்திருக்கிறது:\n"
"\n"
"__code0__\n"
"\n"
"இதன் மூலம், `len` செயல்பாட்டைப் பயன்படுத்தி பட்டியலில் உள்ள உறுப்புகளின் எண்ணிக்கையை (பொதுவாக *நீளம்* என்று அழைக்கப்படுகிறது) பெறலாம்.\n"
"இந்தக் குறியீட்டை இயக்குவதன் மூலம் இதை முயற்சிக்கவும்:\n"
"\n"
"    __copyable__\n"
"__code1__"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.final_text.text"
msgstr "பிரமாதம்! ஓய்வெடுங்கள், நீங்கள் சம்பாதித்துவிட்டீர்கள்!"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.0.text"
msgstr "நீங்கள் `things` சாத்தியமான அனைத்து குறியீடுகளையும் பார்த்து, பதில் எது என்பதைச் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.1.text"
msgstr "சாத்தியமான அனைத்து குறியீடுகளையும் பார்க்க, உங்களுக்கு `range(len(things))` மீது ஒரு சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.2.text"
msgstr "குறியீடு பதில்தானா என்பதைச் சரிபார்க்க, நீங்கள் இதைப் பயன்படுத்த வேண்டும்:"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.3.text"
msgstr "- `if`"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.4.text"
msgstr "- சந்தாவில் உள்ள குறியீடு"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.5.text"
msgstr "- `==`"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.6.text"
msgstr "நீங்கள் முதல் குறியீட்டைத் தேடுவதால்,  அதை கண்டறிந்ததும் சுழலை நிறுத்த வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.7.text"
msgstr "நடுவில் ஒரு சுழலை எப்படி நிறுத்துவது என்பதை சமீபத்தில் கற்றுக்கொண்டீர்கள்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.hints.8.text"
msgstr "நீங்கள் `break` பயன்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.messages.all_indices.text"
msgstr "நீங்கள் கிட்டத்தட்ட அங்கு வந்துவிட்டீர்கள்! இருப்பினும், இது முதல் குறியீடு மட்டுமல்ல, எல்லா குறியீடுகளையும் அச்சிடுகிறது."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.index_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.messages.last_index.text"
msgstr "நீங்கள் கிட்டத்தட்ட அங்கு வந்துவிட்டீர்கள்! இருப்பினும், இது *கடைசி* குறியீட்டை அச்சிடுகிறது, முதல் ஒன்று அல்ல."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.index_exercise.text"
msgstr "`things`` என்ற பட்டியலும் `to_find`` என்ற மதிப்பும் கொடுக்கப்பட்டால்,\n"
"பட்டியலில் உள்ள `to_find` என்பதன் முதல் குறியீட்டை அச்சிடவும், அதாவது மிகக் குறைந்த எண்ணான `i`\n"
"`things[i]` என்பது `to_find` ஆக இருக்கும் `i`. எடுத்துக்காட்டாக,\n"
"\n"
"    __no_auto_translate__\n"
"    things = ['on', 'the', 'way', 'to', 'the', 'store']\n"
"    to_find = 'the'\n"
"\n"
"உங்கள் நிரல் `1` ஐ அச்சிட வேண்டும்.\n"
"\n"
"குறைந்தபட்சம் ஒரு முறையாவது `to_find` தோன்றும் என்று நீங்கள் கருதலாம்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.0.text"
msgstr "ஓட்டில் உள்ள சரங்களைக் கொண்டு அட்டவணைப்படுத்துதல் மற்றும் `len()` ஆகியவற்றைப் பரிசோதித்தீர்களா?"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.1.text"
msgstr "ஒரு கணம் சுழல்களை மறந்து விடுங்கள். இரண்டு சரங்களில் ஒவ்வொன்றின் முதல் எழுத்தைக் கொண்ட முதல் வரியை மட்டும் எப்படி அச்சிடுவீர்கள்?"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.2.text"
msgstr "இரண்டாவது வரியில் நீங்கள் ஒவ்வொரு சரத்தின் இரண்டாவது எழுத்தையும் அச்சிட வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.3.text"
msgstr "உங்களுக்கு `for` சுழல் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.4.text"
msgstr "உங்களுக்கு அட்டவணைப்படுத்தல் (சந்தா) தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.5.text"
msgstr "உங்களுக்கு `range` தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.6.text"
msgstr "உங்களுக்கு `len` தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.7.text"
msgstr "உங்களுக்கு `+` தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.8.text"
msgstr "நீங்கள் இரண்டு சரங்களையும் அட்டவணைப்படுத்த வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.hints.9.text"
msgstr "பொருந்தும் எழுத்துகளை மீட்டெடுக்க ஒவ்வொரு முறையும் ஒரே குறியீட்டை இரண்டு சரங்களுக்கும் அனுப்ப வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_exercise.text"
msgstr "நல்லா இருக்கு!\n"
"\n"
"இதன் மூலம், அட்டவணைப்படுத்தல் மற்றும் `len()` ஆகியவை சரங்களில் வேலை செய்கின்றன. ஓட்டில் அவற்றை முயற்சிக்கவும்.\n"
"\n"
"இதோ இன்னொரு பயிற்சி. சம நீளம் கொண்ட இரண்டு சரங்கள் கொடுக்கப்பட்டால், எ.கா:\n"
"\n"
"    __no_auto_translate__\n"
"    string1 = 'Hello'\n"
"    string2 = 'World'\n"
"\n"
"அவற்றை செங்குத்தாக அருகருகே அச்சிடவும், ஒவ்வொரு எழுத்துக்கும் இடையில் இடைவெளி:\n"
"\n"
"    H W\n"
"    e o\n"
"    l r\n"
"    l l\n"
"    o d"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.0.text"
msgstr "தீர்வு முந்தைய தீர்வின் அதே ஒட்டுமொத்த அமைப்பு மற்றும் அத்தியாவசிய கூறுகளைக் கொண்டுள்ளது, ஆனால் இது கணிசமாக நீளமானது மற்றும் சில கூடுதல் யோசனைகள் மற்றும் துண்டுகள் தேவைப்படும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#.     # __code0__:
#.     for i in range(...):
#.         ...
#.         print(char1 + ' ' + char2)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.1.text"
msgstr "குறிப்பாக, இது இன்னும் சிலவற்றைக் கொண்டிருக்க வேண்டும்:\n"
"\n"
"__code0__"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.2.text"
msgstr "`range()` க்குள் என்ன செல்ல வேண்டும்? `len(string1)` அல்லது `len(string2)` போதுமானதாக இல்லை."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.3.text"
msgstr "நீளமான சரத்தில் உள்ள ஒவ்வொரு எழுத்துக்கும் சுழல் மறு செய்கை வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.4.text"
msgstr "அதாவது உங்களுக்கு `range(<நீண்ட சரத்தின் நீளம்>)` தேவை"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.5.text"
msgstr "வேறு வார்த்தைகளில் கூறுவதானால், `len(string1)` மற்றும் `len(string2)` ஆகிய இரண்டு மதிப்புகளில் பெரியதை நீங்கள் கண்டுபிடிக்க வேண்டும். நீங்கள் ஏற்கனவே இது போன்ற ஒரு பயிற்சியை செய்துள்ளீர்கள்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.6.text"
msgstr "நீங்கள் `for i in range(...)` என வரிசைப்படுத்தியவுடன், `i` சில சமயங்களில் இரண்டு சரங்களுக்கும் சரியான குறியீடாக இருக்க முடியாத அளவுக்கு பெரிதாக இருக்கும். அட்டவணைப்படுத்துவதற்கு முன், அது மிகப் பெரியதா என்பதை நீங்கள் சரிபார்க்க வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.7.text"
msgstr "நினைவில் கொள்ளுங்கள், `string1`க்கான மிகப் பெரிய செல்லுபடியாகும் குறியீடு `len(string1) - 1`. `len(string1)` மிகப் பெரியது."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.8.text"
msgstr "உங்களுக்கு இரண்டு `if` அறிக்கைகள் தேவைப்படும், ஒவ்வொரு சரத்திற்கும் ஒன்று."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.hints.9.text"
msgstr "`string1[i]` செல்லுபடியாகாதபோது எ.கா. `char1 = ' '` அமைக்க வேண்டும்."

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#. 
#.     # __code0__:
#.     for i in range(len(string1)):
#.         char1 = string1[i]
#.         char2 = string2[i]
#.         print(char1 + ' ' + char2)
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.char2
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.string1
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=code_bits.string2
#: 
msgid "pages.GettingElementsAtPositionExercises.steps.zip_longest_exercise.text"
msgstr "நம்பமுடியாதது! \n"
"\n"
"உங்கள் தீர்வு ஒருவேளை இதுபோன்றதாக இருக்கலாம்:\n"
"\n"
"__code0__\n"
"\n"
"சரங்கள் வெவ்வேறு நீளங்களைக் கொண்டிருந்தால் இது நன்றாக வேலை செய்யாது.\n"
"உண்மையில், `string1` அல்லது `string2` நீளமாக உள்ளதா என்பதைப் பொறுத்து வெவ்வேறு வழிகளில் தவறாகப் போகிறது.\n"
"'missing' எழுத்துக்களை இடைவெளிகளுடன் நிரப்புவதன் மூலம் இந்தச் சிக்கலைச் சரிசெய்வதே உங்கள் அடுத்த சவாலாகும். \n"
"\n"
"எடுத்துக்காட்டாக, இதற்கு:\n"
"\n"
"    __no_auto_translate__\n"
"    string1 = 'Goodbye'\n"
"    string2 = 'World'\n"
"\n"
"வெளியீடு:\n"
"\n"
"    G W\n"
"    o o\n"
"    o r\n"
"    d l\n"
"    b d\n"
"    y\n"
"    e\n"
"\n"
"மற்றும் இதற்கு:\n"
"\n"
"    __no_auto_translate__\n"
"    string1 = 'Hello'\n"
"    string2 = 'Elizabeth'\n"
"\n"
"வெளியீடு: \n"
"\n"
"    H E\n"
"    e l\n"
"    l i\n"
"    l z\n"
"    o a\n"
"      b\n"
"      e\n"
"      t\n"
"      h"

#. https://futurecoder.io/course/#GettingElementsAtPositionExercises
#: 
msgid "pages.GettingElementsAtPositionExercises.title"
msgstr "`range()` மற்றும் `len()` உடன் பயிற்சிகள்"

#: 
msgid "frontend.are_you_sure"
msgstr "நீ சொல்வது உறுதியா?"

#: 
msgid "frontend.ask_for_help"
msgstr "உதவி கேட்க"

#: 
msgid "frontend.cancel"
msgstr "ரத்து செய்"

#: 
msgid "frontend.chat_on_slack"
msgstr "ச்லாக்கில் அரட்டை அடிக்கவும்"

#: 
msgid "frontend.click_for_error_details"
msgstr "பிழை விவரங்களுக்கு சொடுக்கவும்"

#: 
msgid "frontend.contact_directly"
msgstr "மாற்றாக, நீங்கள் எங்களை நேரடியாக தொடர்பு கொள்ளலாம்:"

#: 
msgid "frontend.copy_warning"
msgstr "**நிறுத்து!** \n"
"\n"
"குறியீட்டை நகலெடுத்து ஒட்டுவதைத் தவிர்க்க முயற்சிக்கவும். குறியீட்டை நீங்களே தட்டச்சு செய்தால், நீங்கள் கற்றுக் கொள்வீர்கள், உள்வாங்குவீர்கள் மற்றும் நினைவில் வைத்திருப்பீர்கள். \n"
"\n"
"நகலெடுப்பது பொருத்தமானதாக இருக்கும்போது, அதை எளிதாக்க சொடுக்கம் செய்ய ஒரு பொத்தான் இருக்கும். பொத்தான் இல்லை என்றால், தட்டச்சு செய்ய முயற்சிக்கவும். \n"
"\n"
"அதைச் சொல்லி, நாங்கள் உங்களைக் கட்டாயப்படுத்தப் போவதில்லை. நீங்கள் உண்மையிலேயே விரும்பினால் நகலெடுக்கவும்."

#: 
msgid "frontend.copying_solution_not_allowed"
msgstr "குறிப்புகள்/தீர்வு பகுதியிலிருந்து நகலெடுப்பது அனுமதிக்கப்படாது!"

#: 
msgid "frontend.current_page"
msgstr "(தற்போதைய)"

#: 
msgid "frontend.description"
msgstr "விளக்கம்"

#: 
msgid "frontend.developer_mode"
msgstr "மேம்பாட்டாளர் பயன்முறை"

#: 
msgid "frontend.developer_mode_description"
msgstr "\"முந்தைய படி\" மற்றும் \"படியைத் தவிர்\" பொத்தான்களை இயக்குகிறது."

#: 
msgid "frontend.did_you_mean"
msgstr "நீங்கள் சொன்னீர்களா..."

#: 
msgid "frontend.error_traceback"
msgstr "பிழை மீண்டும் கண்டுபிடிக்க:"

#: 
msgid "frontend.feedback"
msgstr "பின்னூட்டம்"

#: 
msgid "frontend.feedback_email_placeholder"
msgstr "மின்னஞ்சல் (விரும்பினால்)"

#: 
msgid "frontend.get_another_hint"
msgstr "மற்றொரு குறிப்பைப் பெறுங்கள்"

#: 
msgid "frontend.get_hint"
msgstr "ஒரு குறிப்பைப் பெறுங்கள்"

#: 
msgid "frontend.give_feedback"
msgstr "கருத்து தெரிவிக்கவும்"

#: 
msgid "frontend.give_feedback_instructions"
msgstr "உங்களுக்கு எது பிடிக்கும் அல்லது பிடிக்காததை எங்களிடம் கூறுங்கள்! நீங்கள் பிழையைப் புகாரளித்தால், சிக்கலைப் பற்றிய விரிவான விளக்கத்தை வழங்கவும்: \n"
"\n"
"- பிரச்சனை ஏற்பட்டதற்கு முன்பும் எப்போது செய்தீர்கள்? \n"
"- அதை மீண்டும் உருவாக்க யாராவது என்ன நடவடிக்கைகளை எடுக்கலாம்? \n"
"- என்ன நடக்கிறது என்பதை நீங்கள் கவனிக்கிறீர்கள், அதற்கு பதிலாக என்ன நடக்கும் என்று எதிர்பார்க்கிறீர்கள்?"

#: 
msgid "frontend.hidden_solution_instructions"
msgstr "மேலே ஒரு எடுத்துக்காட்டு தீர்வு, ஆனால் அது மறைக்கப்பட்டுள்ளது. தீர்வை சிறிது சிறிதாக வெளிப்படுத்த வெளிப்படுத்து பொத்தானை மீண்டும் மீண்டும் சொடுக்கு செய்யவும். நீங்கள் போதுமான அளவு வெளிப்படுத்திவிட்டீர்கள் என்று நினைக்கும் போது நிறுத்த முயற்சிக்கவும், மீதமுள்ள இடைவெளிகளை நீங்களே நிரப்ப முடியும். பின்னர் தொகுப்பானில் ஒரு தீர்வைத் தட்டச்சு செய்து இயக்கவும். உங்கள் தீர்வு மேலே உள்ளதைப் போலவே இருக்க வேண்டியதில்லை."

#: 
msgid "frontend.hints_progress"
msgstr "${totalHints} குறிப்புகளில் ${numHints} காட்டப்பட்டுள்ளது"

#: 
msgid "frontend.loading_wait"
msgstr "ஏற்றுகிறது..."

#: 
msgid "frontend.login_or_sign_up"
msgstr "புகுபதிகை / பதிவு செய்தல்"

#: 
msgid "frontend.next"
msgstr "அடுத்தது"

#: 
msgid "frontend.no"
msgstr "இல்லை"

#: 
msgid "frontend.ok"
msgstr "சரி"

#: 
msgid "frontend.open_github_issue"
msgstr "GitHub இல் சிக்கலைத் திறக்கவும்"

#: 
msgid "frontend.output_prediction_correct"
msgstr "சரி!"

#: 
msgid "frontend.output_prediction_error_choice"
msgstr "பிழை"

#: 
msgid "frontend.output_prediction_question"
msgstr "முடிவு என்னவாக இருக்கும் என்று நினைக்கிறீர்கள்?"

#: 
msgid "frontend.output_prediction_wrong_once"
msgstr "அச்சச்சோ, அது சரியில்லை. நீங்கள் இன்னும் ஒரு முறை முயற்சி செய்யலாம்!"

#: 
msgid "frontend.output_prediction_wrong_twice"
msgstr "மன்னிக்கவும், தவறான பதில். அடுத்த முறை முயற்சிக்கவும்!"

#: 
msgid "frontend.parsons_solution_instructions"
msgstr "மேலே உள்ள வரிகள் ஒழுங்கற்ற ஒரு எடுத்துக்காட்டு தீர்வு. அவற்றை மறுவரிசைப்படுத்த நீங்கள் அவற்றை இழுத்துச் செல்லலாம். சரியான வரிசையைக் கண்டறிவது உங்களுடையது, நீங்கள் அதைச் சரியாகப் பெற்றால் நாங்கள் உங்களுக்குச் சொல்ல மாட்டோம். தொகுப்பானில் பகுதியளவு தீர்வுகளை பரிசோதனை செய்து இயக்குவது அதைக் கண்டுபிடிக்க உங்களுக்கு உதவும். நீங்கள் இன்னும் சரியான தீர்வை தொகுப்பானில் தட்டச்சு செய்து, தொடர அதை இயக்க வேண்டும்."

#: 
msgid "frontend.previous"
msgstr "முந்தைய"

#: 
msgid "frontend.question_wizard"
msgstr "கேள்வி வழிகாட்டி"

#: 
msgid "frontend.question_wizard_expected_output"
msgstr "சரி, இப்போது உங்கள் திட்டத்திலிருந்து நீங்கள் எதிர்பார்க்கும்/விரும்புகின்ற வெளியீட்டை கீழே உள்ளிடவும். அது சரியாக வேலை செய்தால் என்ன காண்பிக்கும்? இது எதையும் வெளியிடக்கூடாது எனில், உங்கள் குறியீட்டில் சில `print()` அழைப்புகளைச் சேர்க்கவும், அது பயனுள்ள ஒன்றை வெளியிடும். \n"
"\n"
"நீங்கள் முடித்ததும், உங்கள் கேள்வியை உருவாக்க மீண்டும் 'இயக்கு' என்பதைக் சொடுக்கு செய்யவும்."

#: 
msgid "frontend.question_wizard_intro"
msgstr "உங்களுக்கு உதவி தேவைப்பட்டால், நீங்கள் கேள்விகளைக் கேட்கக்கூடிய [Stack Overflow](https://stackoverflow.com/) மற்றும் [reddit](https://www.reddit.com/r/learnpython/) போன்ற பல தளங்கள் உள்ளன. பதில்களைப் பெறக்கூடிய நல்ல தரமான கேள்வியை எழுத உதவும் கருவி இது. \n"
"\n"
"வலதுபுறத்தில் உங்கள் குறியீட்டை உள்ளிட்டு இயக்கவும். எங்கிருந்து தொடங்குவது என்று உங்களுக்குத் தெரியாததால் உங்களிடம் குறியீடு எதுவும் இல்லை என்றால், இந்தக் கருவி உங்களுக்கு உதவாது என்று நான் பயப்படுகிறேன். நீங்கள் இன்னும் உதவி கேட்கலாம், ஆனால் முதலில் படிப்பது நல்லது [என்ன வகையான கேள்விகளை நான் கேட்பதைத் தவிர்க்க வேண்டும்?](https://stackoverflow.com/help/dont-ask)\n"
"\n"
"உங்கள் கேள்வி சர்வர்களைப் பற்றியதாக இருந்தால் (எ.கா. சாங்கோ அல்லது பிளாசுக்), இணைய கோரிக்கைகள், தரவுத்தளங்கள் அல்லது இங்கே இறக்குமதி செய்ய முடியாத தொகுப்பு, இந்த கருவி வேலை செய்யாது. இருப்பினும், உங்கள் தற்போதைய குறியீடு அந்த பொருட்களை உள்ளடக்கியிருப்பதால், உங்கள் கேள்வி *பற்றி* என்று பொருள் இல்லை. உங்களுக்கு பொதுவான பைதான்/நிரலாக்கம்/தர்க்கம் பிரச்சனை இருந்தால், அந்த சிக்கலை மற்ற பொருட்களிலிருந்து பிரித்தெடுக்கவும். சாங்கோவுடன் பைதான் என்பது பைதான் தான். உங்களால் அதைச் செய்ய முடியாவிட்டால், உங்கள் கேள்வியைக் கேட்பதற்கு முன் [குறைந்தபட்ச, மறுஉருவாக்கம் செய்யக்கூடிய உதாரணத்தை எவ்வாறு உருவாக்குவது](https://stackoverflow.com/help/minimal-reproducible-example) என்பதைப் படிக்கவும்."

#: 
msgid "frontend.repeated_frames_description"
msgstr "${lineno} வரியில் ${name} (${count} முறை)"

#: 
msgid "frontend.report_error"
msgstr "பிழையைப் புகாரளிக்கவும்"

#: 
msgid "frontend.report_error_instructions"
msgstr "அச்சச்சோ, ஏதோ தவறு நடந்துவிட்டது! நீங்கள் இப்போது என்ன செய்து கொண்டிருந்தீர்கள் மற்றும் சிக்கலை மீண்டும் உருவாக்க யாராவது என்ன படிகளை எடுக்கலாம் என்பதை விவரிக்கவும், பின்னர் சமர்ப்பி என்பதைக் சொடுக்கவும். அல்லது அறிக்கையை அனுப்பாமல் இருக்க ரத்துசெய் என்பதைக் சொடுக்கவும்."

#: 
msgid "frontend.reveal"
msgstr "வெளிப்படுத்து"

#: 
msgid "frontend.reverse_step"
msgstr "முந்தைய படி"

#: 
msgid "frontend.run"
msgstr "இயக்கு"

#: 
msgid "frontend.send_email_to"
msgstr "மின்னஞ்சல்"

#: 
msgid "frontend.settings"
msgstr "அமைப்புகள்"

#: 
msgid "frontend.show_shuffled_solution"
msgstr "மாற்றப்பட்ட தீர்வைக் காட்டு"

#: 
msgid "frontend.show_solution"
msgstr "தீர்வு காட்டு"

#: 
msgid "frontend.show_unscrambled_solution"
msgstr "சுரண்டப்படாத தீர்வைக் காட்டு"

#: 
msgid "frontend.sign_out"
msgstr "வெளியேறு"

#: 
msgid "frontend.similar_frames_skipped"
msgstr "இதே போன்ற சட்டங்கள் தவிர்க்கப்பட்டன:"

#: 
msgid "frontend.skip_step"
msgstr "படியைத் தவிர்"

#: 
msgid "frontend.stop"
msgstr "நிறுத்து"

#: 
msgid "frontend.submit"
msgstr "சமர்ப்பிக்கவும்"

#: 
msgid "frontend.table_of_contents"
msgstr "பொருளடக்கம்"

#: 
msgid "frontend.title"
msgstr "தலைப்பு"

#: 
msgid "frontend.toc_instructions"
msgstr "பாடத்தின் வெவ்வேறு பக்கங்களுக்கான இணைப்புகள் கீழே உள்ளன. நீங்கள் எங்கு வேண்டுமானாலும் தொடங்கலாம் மற்றும் எந்த வரிசையிலும் செல்லலாம், மேலும் ஒவ்வொரு பக்கத்திலும் உங்கள் முன்னேற்றம் பதிவு செய்யப்படும். \n"
"\n"
"நீங்கள் நிரலாக்கத்திற்கு முற்றிலும் புதியவர் அல்லது உங்களுக்கு சந்தேகம் இருந்தால், தொடக்கத்தில் தொடங்கி, ஒவ்வொரு பக்கத்தையும் முடிக்கும்போது அடுத்து என்பதைக் சொடுக்கவும்."

#: 
msgid "frontend.yes"
msgstr "ஆம்"

#: 
msgid "misc_terms.string_spaces_differ"
msgstr "உங்கள் குறியீட்டில் உள்ள சரங்களில் சரியான இடைவெளிகள் உள்ளதா எனச் சரிபார்க்கவும். எடுத்துக்காட்டாக, முடிவில் உள்ள இடைவெளி காரணமாக `'Hello'` என்பது `'Hello '` என்பதிலிருந்து வேறுபட்டது."

#. https://poeditor.com/projects/view_terms?id=490053&search=pages.NewlinesAndFormatBoard.steps.multi_line_strings_triple_quotes
#: 
msgid "pages.NewlinesAndFormatBoard.steps.multi_line_strings_triple_quotes.program"
msgstr "string = \"\"\"First line\n"
"Second line\"\"\"\n"
"print(string)"

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#: 
msgid "pages.IfAndElse.steps.else_full_stop.hints.0.text"
msgstr "ஏற்கனவே உள்ள எதையும் மாற்ற வேண்டாம், இன்னும் கொஞ்சம் குறியீட்டைச் சேர்க்கவும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#: 
msgid "pages.IfAndElse.steps.else_full_stop.hints.1.text"
msgstr "`else` இடையில் எதுவும் இல்லாமல், `if` தொகுதிக்குப் பிறகு உடனடியாக வர வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#: 
msgid "pages.IfAndElse.steps.else_full_stop.hints.2.text"
msgstr "`excited` `True` அல்லது `False` என்பதை `sentence += char` இயக்க வேண்டும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#: 
msgid "pages.IfAndElse.steps.else_full_stop.hints.3.text"
msgstr "நீங்கள் `if` மற்றும் `else` ஆகிய இரண்டு தொகுதிகளிலும் `sentence += char` நகலை வைத்திருக்கலாம், ஆனால் ஒரு சிறந்த வழி உள்ளது."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#: 
msgid "pages.IfAndElse.steps.else_full_stop.hints.4.text"
msgstr "`char`க்கு வேறு மதிப்பை ஒதுக்க `else` ஐப் பயன்படுத்தவும்."

#. https://futurecoder.io/course/#IfAndElse
#. 
#. https://poeditor.com/projects/view_terms?id=490053&search=pages.IfAndElse.steps.else_full_stop
#: 
msgid "pages.IfAndElse.steps.else_full_stop.hints.5.text"
msgstr "`excited` என்பது `False` என்றால், `char` என்பது `'!'` என்பதற்குப் பதிலாக `'.'` ஆக இருக்க வேண்டும்."

#: 
msgid "frontend.click_to_expand"
msgstr "விரிவாக்க சொடுக்கவும்"

#: 
msgid "frontend.switch_language_label"
msgstr "பிரெஞ்சு"

#: 
msgid "frontend.switch_language_url"
msgstr "https://fr.futurecoder.io/course/"

